/*! jQuery v1.11.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.1",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b=a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C="undefined",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||"string"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(",")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>",a.querySelectorAll("[msallowclip^='']").length&&q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)>=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e>b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e>b;b++)m.find(a,d[b],c);return c=this.pushStack(e>1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&&t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=m.filter(d,e)),this.length>1&&(C[a]||(e=m.unique(e)),B.test(a)&&(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&&--m.readyWait>0||(H.resolveWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&&(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&&y.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&&h;
if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=m.data(f),1===f.nodeType&&!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&&(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,m.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="<:nav></:nav>"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function ab(){return!0}function bb(){return!1}function cb(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&&m._data(a);if(r&&(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(n.splice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&&8!==d.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&&o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&&!b.isPropagationStopped())b.type=n>1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&m.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&m.acceptData(d)&&g&&d[p]&&!m.isWindow(d)){l=d[g],l&&(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?m(c,this).index(i)>=0:m.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==cb()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===cb()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===K&&(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ab:bb):this.type=a,b&&m.extend(this,b),this.timeStamp=a&&a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:bb,isPropagationStopped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ab,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ab,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ab,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!m.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=bb;else if(!d)return this;return 1===e&&(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=bb),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function db(a){var b=eb.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var eb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fb=/ jQuery\d+="(?:null|\d+)"/g,gb=new RegExp("<(?:"+eb+")[\\s/>]","i"),hb=/^\s+/,ib=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,jb=/<([\w:]+)/,kb=/<tbody/i,lb=/<|&#?\w+;/,mb=/<(?:script|style|link)/i,nb=/checked\s*(?:[^=]|=\s*.checked.)/i,ob=/^$|\/(?:java|ecma)script/i,pb=/^true\/(.*)/,qb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rb={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},sb=db(y),tb=sb.appendChild(y.createElement("div"));rb.optgroup=rb.option,rb.tbody=rb.tfoot=rb.colgroup=rb.caption=rb.thead,rb.th=rb.td;function ub(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ub(d,b));return void 0===b||b&&m.nodeName(a,b)?m.merge([a],f):f}function vb(a){W.test(a.type)&&(a.defaultChecked=a.checked)}function wb(a,b){return m.nodeName(a,"table")&&m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xb(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function yb(a){var b=pb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function zb(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Ab(a,b){if(1===b.nodeType&&m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.data=m.extend({},g.data))}}function Bb(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&&b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&&b.text!==a.text?(xb(b).text=a.text,yb(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),k.html5Clone&&a.innerHTML&&!m.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!gb.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(tb.innerHTML=a.outerHTML,tb.removeChild(f=tb.firstChild)),!(k.noCloneEvent&&k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||m.isXMLDoc(a)))for(d=ub(f),h=ub(a),g=0;null!=(e=h[g]);++g)d[g]&&Bb(e,d[g]);if(b)if(c)for(h=h||ub(a),d=d||ub(f),g=0;null!=(e=h[g]);g++)Ab(e,d[g]);else Ab(a,f);return d=ub(f,"script"),d.length>0&&zb(d,!i&&ub(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=db(b),p=[],q=0;n>q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(lb.test(f)){h=h||o.appendChild(b.createElement("div")),i=(jb.exec(f)||["",""])[1].toLowerCase(),l=rb[i]||rb._default,h.innerHTML=l[1]+f.replace(ib,"<$1></$2>")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&&hb.test(f)&&p.push(b.createTextNode(hb.exec(f)[0])),!k.tbody){f="table"!==i||kb.test(f)?"<table>"!==l[1]||kb.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(ub(p,"input"),vb),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&&(g=m.contains(f.ownerDocument,f),h=ub(o.appendChild(f),"script"),g&&zb(h),c)){e=0;while(f=h[e++])ob.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&&this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ub(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,c)&&zb(ub(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&m.cleanData(ub(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fb,""):void 0;if(!("string"!=typeof a||mb.test(a)||!k.htmlSerialize&&gb.test(a)||!k.leadingWhitespace&&hb.test(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ib,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(m.cleanData(ub(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ub(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&nb.test(p))return this.each(function(c){var d=n.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=m.map(ub(i,"script"),xb),f=g.length;l>j;j++)d=i,j!==o&&(d=m.clone(d,!0,!0),f&&m.merge(g,ub(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,yb),j=0;f>j;j++)d=g[j],ob.test(d.type||"")&&!m._data(d,"globalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Cb,Db={};function Eb(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fb(a){var b=y,c=Db[a];return c||(c=Eb(a,b),"none"!==c&&c||(Cb=(Cb||m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Cb[0].contentWindow||Cb[0].contentDocument).document,b.write(),b.close(),c=Eb(a,b),Cb.detach()),Db[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&&c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Gb=/^margin/,Hb=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ib=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Hb.test(g)&&Gb.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&&(Ib=function(a){return a.currentStyle},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Hb.test(g)&&!Kb.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function Lb(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=d&&d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&&i(),g},boxSizingReliable:function(){return null==f&&i(),f},pixelPosition:function(){return null==e&&i(),e},reliableMarginRight:function(){return null==h&&i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&&(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight)),b.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&&(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Mb=/alpha\([^)]*\)/i,Nb=/opacity\s*=\s*([^)]*)/,Ob=/^(none|table(?!-c[ea]).+)/,Pb=new RegExp("^("+S+")(.*)$","i"),Qb=new RegExp("^([+-])=("+S+")","i"),Rb={position:"absolute",visibility:"hidden",display:"block"},Sb={letterSpacing:"0",fontWeight:"400"},Tb=["Webkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Tb.length;while(e--)if(b=Tb[e]+c,b in a)return b;return d}function Vb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=m._data(d,"olddisplay",Fb(d.nodeName)))):(e=U(d),(c&&"none"!==c||!e)&&m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wb(a,b,c){var d=Pb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Yb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ib(a),g=k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Jb(a,b,f),(0>e||null==e)&&(e=a.style[b]),Hb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Jb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ub(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Qb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ub(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Jb(a,b,d)),"normal"===f&&b in Sb&&(f=Sb[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Ob.test(m.css(a,"display"))&&0===a.offsetWidth?m.swap(a,Rb,function(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var e=d&&Ib(a);return Wb(a,c,d?Xb(a,b,d,k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Nb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===m.trim(f.replace(Mb,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Mb.test(f)?f.replace(Mb,e):f+" "+e)}}),m.cssHooks.marginRight=Lb(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Gb.test(a)||(m.cssHooks[a+b].set=Wb)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ib(a),e=b.length;e>g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:function(){return Vb(this,!0)},hide:function(){return Vb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Zb(a,b,c,d,e){return new Zb.prototype.init(a,b,c,d,e)}m.Tween=Zb,Zb.prototype={constructor:Zb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")
},cur:function(){var a=Zb.propHooks[this.prop];return a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var b,c=Zb.propHooks[this.prop];return this.pos=b=this.options.duration?m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.prototype.init.prototype=Zb.prototype,Zb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Zb.propHooks.scrollTop=Zb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Zb.prototype.init,m.fx.step={};var $b,_b,ac=/^(?:toggle|show|hide)$/,bc=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cc=/queueHooks$/,dc=[ic],ec={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bc.exec(b),f=e&&e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&&+d)&&bc.exec(m.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fc(){return setTimeout(function(){$b=void 0}),$b=m.now()}function gc(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function hc(a,b,c){for(var d,e=(ec[b]||[]).concat(ec["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ic(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&&U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inline"===l&&"none"===m.css(a,"float")&&(k.inlineBlockNeedsLayout&&"inline"!==Fb(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ac.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fb(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=m._data(a,"fxshow",{}),f&&(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hc(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=m.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kc(a,b,c){var d,e,f=0,g=dc.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$b||fc(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jc(k,j.opts.specialEasing);g>f;f++)if(d=dc[f].call(j,a,k,j.opts))return d;return m.map(k,hc,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kc,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],ec[c]=ec[c]||[],ec[c].unshift(b)},prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=function(a,b,c){var d=a&&"object"==typeof a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing:c&&b||b&&!m.isFunction(b)&&b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kc(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&cc.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDown:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($b=m.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$b=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_b||(_b=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_b),_b=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lc=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&&(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lc,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)>=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mc,nc,oc=m.expr.attrHandle,pc=/^(?:checked|selected)$/i,qc=k.getSetAttribute,rc=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&&m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rc&&qc||!pc.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),nc={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rc&&qc||!pc.test(c)?a.setAttribute(!qc&&m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=oc[b]||m.find.attr;oc[b]=rc&&qc||!pc.test(b)?function(a,b,d){var e,f;return d||(f=oc[b],oc[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,oc[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&&qc||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mc&&mc.set(a,b,c)}}),qc||(mc={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},oc.id=oc.name=oc.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:mc.set},m.attrHooks.contenteditable={set:function(a,b,c){mc.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sc=/^(?:input|select|textarea|button|object)$/i,tc=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!m.isXMLDoc(a),f&&(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&&a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var uc=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=m.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&&(this.className&&m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(uc," ").indexOf(b)>=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vc=m.now(),wc=/\?/,xc=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&&!m.trim(e.replace(xc,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yc,zc,Ac=/#.*$/,Bc=/([?&])_=[^&]*/,Cc=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Dc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ec=/^(?:GET|HEAD)$/,Fc=/^\/\//,Gc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc={},Ic={},Jc="*/".concat("*");try{zc=location.href}catch(Kc){zc=y.createElement("a"),zc.href="",zc=zc.href}yc=Gc.exec(zc.toLowerCase())||[];function Lc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mc(a,b,c,d){var e={},f=a===Ic;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Nc(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&m.extend(!0,a,c),a}function Oc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),ajaxTransport:Lc(Ic),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&&(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cc.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zc)+"").replace(Ac,"").replace(Fc,yc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(c=Gc.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yc[1]&&c[2]===yc[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(yc[3]||("http:"===yc[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=m.param(k.data,k.traditional)),Mc(Hc,k,b,v),2===t)return v;h=k.global,h&&0===m.active++&&m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Ec.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(wc.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Bc.test(e)?e.replace(Bc,"$1_="+vc++):e+(wc.test(e)?"&":"?")+"_="+vc++)),k.ifModified&&(m.lastModified[e]&&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jc+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mc(Ic,k,b,v)){v.readyState=1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Oc(k,v,c)),u=Pc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&&(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!k.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qc=/%20/g,Rc=/\[\]$/,Sc=/\r?\n/g,Tc=/^(?:submit|button|image|reset|file)$/i,Uc=/^(?:input|select|textarea|keygen)/i;function Vc(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vc(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=m.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vc(c,a[c],b,e);return d.join("&").replace(Qc,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!m(this).is(":disabled")&&Uc.test(this.nodeName)&&!Tc.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&Zc()||$c()}:Zc;var Wc=0,Xc={},Yc=m.ajaxSettings.xhr();a.ActiveXObject&&m(a).on("unload",function(){for(var a in Xc)Xc[a](void 0,!0)}),k.cors=!!Yc&&"withCredentials"in Yc,Yc=k.ajax=!!Yc,Yc&&m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Xc[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xc[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function Zc(){try{return new a.XMLHttpRequest}catch(b){}}function $c(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var _c=[],ad=/(=)\?(?=&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_c.pop()||m.expando+"_"+vc++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(ad.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&ad.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ad,"$1"+e):b.jsonp!==!1&&(b.url+=(wc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,_c.push(e)),g&&m.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&&e.length&&m(e).remove(),m.merge([],d.childNodes))};var bd=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&&bd)return bd.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("<div>").append(m.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cd=a.document.documentElement;function dd(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&&m.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(n.top=b.top-h.top+g),null!=b.left&&(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&&(d=e.getBoundingClientRect()),c=dd(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cd;while(a&&!m.nodeName(a,"html")&&"static"===m.css(a,"position"))a=a.offsetParent;return a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dd(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=Lb(k.pixelPosition,function(a,c){return c?(c=Jb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return m});var ed=a.jQuery,fd=a.$;return m.noConflict=function(b){return a.$===m&&(a.$=fd),b&&a.jQuery===m&&(a.jQuery=ed),m},typeof b===K&&(a.jQuery=a.$=m),m});

/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
		/******/
		/******/ 		// Check if module is in cache
		/******/ 		if(installedModules[moduleId])
		/******/ 			return installedModules[moduleId].exports;
		/******/
		/******/ 		// Create a new module (and put it into the cache)
		/******/ 		var module = installedModules[moduleId] = {
			/******/ 			exports: {},
			/******/ 			id: moduleId,
			/******/ 			loaded: false
			/******/ 		};
		/******/
		/******/ 		// Execute the module function
		/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		/******/
		/******/ 		// Flag the module as loaded
		/******/ 		module.loaded = true;
		/******/
		/******/ 		// Return the exports of the module
		/******/ 		return module.exports;
		/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(global) {'use strict';

			Object.defineProperty(exports, '__esModule', {
				value: true
			});

			function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

			var _stack = __webpack_require__(1);

			var _stack2 = _interopRequireDefault(_stack);

			var _card = __webpack_require__(6);

			var _card2 = _interopRequireDefault(_card);

			global.gajus = global.gajus || {};

			global.gajus.Swing = {
				Stack: _stack2['default'],
				Card: _card2['default']
			};

			exports.Stack = _stack2['default'];
			exports.Card = _card2['default'];
			/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

		/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var _sister = __webpack_require__(2);

		var _sister2 = _interopRequireDefault(_sister);

		var _rebound = __webpack_require__(3);

		var _rebound2 = _interopRequireDefault(_rebound);

		var _card = __webpack_require__(6);

		var _card2 = _interopRequireDefault(_card);

		var _util = __webpack_require__(10);

		var _util2 = _interopRequireDefault(_util);

		var Stack = undefined;

		/**
		 * @param {Object} config Stack configuration.
		 * @return {Object} An instance of Stack object.
		 */
		Stack = function (config) {
			var construct = undefined,
				eventEmitter = undefined,
				index = undefined,
				springSystem = undefined,
				stack = undefined;

			construct = function () {
				stack = {};
				springSystem = new _rebound2['default'].SpringSystem();
				eventEmitter = (0, _sister2['default'])();
				index = [];
			};

			construct();

			/**
			 * Get the configuration object.
			 *
			 * @return {Object}
			 */
			stack.getConfig = function () {
				return config;
			};

			/**
			 * Get a singleton instance of the SpringSystem physics engine.
			 *
			 * @return {Sister}
			 */
			stack.getSpringSystem = function () {
				return springSystem;
			};

			/**
			 * Proxy to the instance of the event emitter.
			 *
			 * @param {String} eventName
			 * @param {String} listener
			 * @return {undefined}
			 */
			stack.on = function (eventName, listener) {
				eventEmitter.on(eventName, listener);
			};

			/**
			 * Creates an instance of Card and associates it with an element.
			 *
			 * @param {HTMLElement} element
			 * @return {Card}
			 */
			stack.createCard = function (element) {
				var card = undefined,
					events = undefined;

				card = (0, _card2['default'])(stack, element);

				events = ['throwout', 'throwoutend', 'throwoutleft', 'throwoutright', 'throwin', 'throwinend', 'dragstart', 'dragmove', 'dragend'];

				// Proxy Card events to the Stack.
				events.forEach(function (eventName) {
					card.on(name, function (data) {
						eventEmitter.trigger(eventName, data);
					});
				});

				index.push({
					element: element,
					card: card
				});

				return card;
			};

			/**
			 * Returns an instance of Card associated with an element.
			 *
			 * @param {HTMLElement} element
			 * @return {Card|null}
			 */
			stack.getCard = function (element) {
				var card = undefined;

				card = _util2['default'].find(index, {
					element: element
				});

				if (card) {
					return card.card;
				}

				return null;
			};

			/**
			 * Remove an instance of Card from the stack index.
			 *
			 * @param {Card} card
			 * @return {Card}
			 */
			stack.destroyCard = function (card) {
				return _util2['default'].remove(index, card);
			};

			return stack;
		};

		exports['default'] = Stack;
		module.exports = exports['default'];

		/***/ },
	/* 2 */
	/***/ function(module, exports) {

		/* WEBPACK VAR INJECTION */(function(global) {/**
		 * @link https://github.com/gajus/sister for the canonical source repository
		 * @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause
		 */
		function Sister () {
			var sister = {},
				events = {};

			/**
			 * @name handler
			 * @function
			 * @param {Object} data Event data.
			 */

			/**
			 * @param {String} name Event name.
			 * @param {handler} handler
			 * @return {listener}
			 */
			sister.on = function (name, handler) {
				var listener = {name: name, handler: handler};
				events[name] = events[name] || [];
				events[name].unshift(listener);
				return listener;
			};

			/**
			 * @param {listener}
			 */
			sister.off = function (listener) {
				var index = events[listener.name].indexOf(listener);

				if (index != -1) {
					events[listener.name].splice(index, 1);
				}
			};

			/**
			 * @param {String} name Event name.
			 * @param {Object} data Event data.
			 */
			sister.trigger = function (name, data) {
				var listeners = events[name],
					i;

				if (listeners) {
					i = listeners.length;
					while (i--) {
						listeners[i].handler(data);
					}
				}
			};

			return sister;
		}

			global.gajus = global.gajus || {};
			global.gajus.Sister = Sister;

			module.exports = Sister;
			/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

		/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// Rebound
			// =======
			// **Rebound** is a simple library that models Spring dynamics for the
			// purpose of driving physical animations.
			//
			// Origin
			// ------
			// [Rebound](http://facebook.github.io/rebound) was originally written
			// in Java to provide a lightweight physics system for
			// [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and
			// [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)
			// on Android. It's now been adopted by several other Android
			// applications. This JavaScript port was written to provide a quick
			// way to demonstrate Rebound animations on the web for a
			// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then
			// the JavaScript version has been used to build some really nice interfaces.
			// Check out [brandonwalkin.com](http://brandonwalkin.com) for an
			// example.
			//
			// Overview
			// --------
			// The Library provides a SpringSystem for maintaining a set of Spring
			// objects and iterating those Springs through a physics solver loop
			// until equilibrium is achieved. The Spring class is the basic
			// animation driver provided by Rebound. By attaching a listener to
			// a Spring, you can observe its motion. The observer function is
			// notified of position changes on the spring as it solves for
			// equilibrium. These position updates can be mapped to an animation
			// range to drive animated property updates on your user interface
			// elements (translation, rotation, scale, etc).
			//
			// Example
			// -------
			// Here's a simple example. Pressing and releasing on the logo below
			// will cause it to scale up and down with a springy animation.
			//
			// <div style="text-align:center; margin-bottom:50px; margin-top:50px">
			//   <img
			//     src="http://facebook.github.io/rebound/images/rebound.png"
			//     id="logo"
			//   />
			// </div>
			// <script src="../rebound.min.js"></script>
			// <script>
			//
			// function scale(el, val) {
			//   el.style.mozTransform =
			//   el.style.msTransform =
			//   el.style.webkitTransform =
			//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';
			// }
			// var el = document.getElementById('logo');
			//
			// var springSystem = new rebound.SpringSystem();
			// var spring = springSystem.createSpring(50, 3);
			// spring.addListener({
			//   onSpringUpdate: function(spring) {
			//     var val = spring.getCurrentValue();
			//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);
			//     scale(el, val);
			//   }
			// });
			//
			// el.addEventListener('mousedown', function() {
			//   spring.setEndValue(1);
			// });
			//
			// el.addEventListener('mouseout', function() {
			//   spring.setEndValue(0);
			// });
			//
			// el.addEventListener('mouseup', function() {
			//   spring.setEndValue(0);
			// });
			//
			// </script>
			//
			// Here's how it works.
			//
			// ```
			// // Get a reference to the logo element.
			// var el = document.getElementById('logo');
			//
			// // create a SpringSystem and a Spring with a bouncy config.
			// var springSystem = new rebound.SpringSystem();
			// var spring = springSystem.createSpring(50, 3);
			//
			// // Add a listener to the spring. Every time the physics
			// // solver updates the Spring's value onSpringUpdate will
			// // be called.
			// spring.addListener({
			//   onSpringUpdate: function(spring) {
			//     var val = spring.getCurrentValue();
			//     val = rebound.MathUtil
			//                  .mapValueInRange(val, 0, 1, 1, 0.5);
			//     scale(el, val);
			//   }
			// });
			//
			// // Listen for mouse down/up/out and toggle the
			// //springs endValue from 0 to 1.
			// el.addEventListener('mousedown', function() {
			//   spring.setEndValue(1);
			// });
			//
			// el.addEventListener('mouseout', function() {
			//   spring.setEndValue(0);
			// });
			//
			// el.addEventListener('mouseup', function() {
			//   spring.setEndValue(0);
			// });
			//
			// // Helper for scaling an element with css transforms.
			// function scale(el, val) {
			//   el.style.mozTransform =
			//   el.style.msTransform =
			//   el.style.webkitTransform =
			//   el.style.transform = 'scale3d(' +
			//     val + ', ' + val + ', 1)';
			// }
			// ```

			(function() {
				var rebound = {};
				var util = rebound.util = {};
				var concat = Array.prototype.concat;
				var slice = Array.prototype.slice;

				// Bind a function to a context object.
				util.bind = function bind(func, context) {
					var args = slice.call(arguments, 2);
					return function() {
						func.apply(context, concat.call(args, slice.call(arguments)));
					};
				};

				// Add all the properties in the source to the target.
				util.extend = function extend(target, source) {
					for (var key in source) {
						if (source.hasOwnProperty(key)) {
							target[key] = source[key];
						}
					}
				};

				// SpringSystem
				// ------------
				// **SpringSystem** is a set of Springs that all run on the same physics
				// timing loop. To get started with a Rebound animation you first
				// create a new SpringSystem and then add springs to it.
				var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {
					this._springRegistry = {};
					this._activeSprings = [];
					this.listeners = [];
					this._idleSpringIndices = [];
					this.looper = looper || new AnimationLooper();
					this.looper.springSystem = this;
				};

				util.extend(SpringSystem.prototype, {

					_springRegistry: null,

					_isIdle: true,

					_lastTimeMillis: -1,

					_activeSprings: null,

					listeners: null,

					_idleSpringIndices: null,

					// A SpringSystem is iterated by a looper. The looper is responsible
					// for executing each frame as the SpringSystem is resolved to idle.
					// There are three types of Loopers described below AnimationLooper,
					// SimulationLooper, and SteppingSimulationLooper. AnimationLooper is
					// the default as it is the most useful for common UI animations.
					setLooper: function(looper) {
						this.looper = looper;
						looper.springSystem = this;
					},

					// Add a new spring to this SpringSystem. This Spring will now be solved for
					// during the physics iteration loop. By default the spring will use the
					// default Origami spring config with 40 tension and 7 friction, but you can
					// also provide your own values here.
					createSpring: function(tension, friction) {
						var springConfig;
						if (tension === undefined || friction === undefined) {
							springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
						} else {
							springConfig =
								SpringConfig.fromOrigamiTensionAndFriction(tension, friction);
						}
						return this.createSpringWithConfig(springConfig);
					},

					// Add a spring with a specified bounciness and speed. To replicate Origami
					// compositions based on PopAnimation patches, use this factory method to
					// create matching springs.
					createSpringWithBouncinessAndSpeed: function(bounciness, speed) {
						var springConfig;
						if (bounciness === undefined || speed === undefined) {
							springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;
						} else {
							springConfig =
								SpringConfig.fromBouncinessAndSpeed(bounciness, speed);
						}
						return this.createSpringWithConfig(springConfig);
					},

					// Add a spring with the provided SpringConfig.
					createSpringWithConfig: function(springConfig) {
						var spring = new Spring(this);
						this.registerSpring(spring);
						spring.setSpringConfig(springConfig);
						return spring;
					},

					// You can check if a SpringSystem is idle or active by calling
					// getIsIdle. If all of the Springs in the SpringSystem are at rest,
					// i.e. the physics forces have reached equilibrium, then this
					// method will return true.
					getIsIdle: function() {
						return this._isIdle;
					},

					// Retrieve a specific Spring from the SpringSystem by id. This
					// can be useful for inspecting the state of a spring before
					// or after an integration loop in the SpringSystem executes.
					getSpringById: function (id) {
						return this._springRegistry[id];
					},

					// Get a listing of all the springs registered with this
					// SpringSystem.
					getAllSprings: function() {
						var vals = [];
						for (var id in this._springRegistry) {
							if (this._springRegistry.hasOwnProperty(id)) {
								vals.push(this._springRegistry[id]);
							}
						}
						return vals;
					},

					// registerSpring is called automatically as soon as you create
					// a Spring with SpringSystem#createSpring. This method sets the
					// spring up in the registry so that it can be solved in the
					// solver loop.
					registerSpring: function(spring) {
						this._springRegistry[spring.getId()] = spring;
					},

					// Deregister a spring with this SpringSystem. The SpringSystem will
					// no longer consider this Spring during its integration loop once
					// this is called. This is normally done automatically for you when
					// you call Spring#destroy.
					deregisterSpring: function(spring) {
						removeFirst(this._activeSprings, spring);
						delete this._springRegistry[spring.getId()];
					},

					advance: function(time, deltaTime) {
						while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
						for (var i = 0, len = this._activeSprings.length; i < len; i++) {
							var spring = this._activeSprings[i];
							if (spring.systemShouldAdvance()) {
								spring.advance(time / 1000.0, deltaTime / 1000.0);
							} else {
								this._idleSpringIndices.push(this._activeSprings.indexOf(spring));
							}
						}
						while(this._idleSpringIndices.length > 0) {
							var idx = this._idleSpringIndices.pop();
							idx >= 0 && this._activeSprings.splice(idx, 1);
						}
					},

					// This is our main solver loop called to move the simulation
					// forward through time. Before each pass in the solver loop
					// onBeforeIntegrate is called on an any listeners that have
					// registered themeselves with the SpringSystem. This gives you
					// an opportunity to apply any constraints or adjustments to
					// the springs that should be enforced before each iteration
					// loop. Next the advance method is called to move each Spring in
					// the systemShouldAdvance forward to the current time. After the
					// integration step runs in advance, onAfterIntegrate is called
					// on any listeners that have registered themselves with the
					// SpringSystem. This gives you an opportunity to run any post
					// integration constraints or adjustments on the Springs in the
					// SpringSystem.
					loop: function(currentTimeMillis) {
						var listener;
						if (this._lastTimeMillis === -1) {
							this._lastTimeMillis = currentTimeMillis -1;
						}
						var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;
						this._lastTimeMillis = currentTimeMillis;

						var i = 0, len = this.listeners.length;
						for (i = 0; i < len; i++) {
							listener = this.listeners[i];
							listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);
						}

						this.advance(currentTimeMillis, ellapsedMillis);
						if (this._activeSprings.length === 0) {
							this._isIdle = true;
							this._lastTimeMillis = -1;
						}

						for (i = 0; i < len; i++) {
							listener = this.listeners[i];
							listener.onAfterIntegrate && listener.onAfterIntegrate(this);
						}

						if (!this._isIdle) {
							this.looper.run();
						}
					},

					// activateSpring is used to notify the SpringSystem that a Spring
					// has become displaced. The system responds by starting its solver
					// loop up if it is currently idle.
					activateSpring: function(springId) {
						var spring = this._springRegistry[springId];
						if (this._activeSprings.indexOf(spring) == -1) {
							this._activeSprings.push(spring);
						}
						if (this.getIsIdle()) {
							this._isIdle = false;
							this.looper.run();
						}
					},

					// Add a listener to the SpringSystem so that you can receive
					// before/after integration notifications allowing Springs to be
					// constrained or adjusted.
					addListener: function(listener) {
						this.listeners.push(listener);
					},

					// Remove a previously added listener on the SpringSystem.
					removeListener: function(listener) {
						removeFirst(this.listeners, listener);
					},

					// Remove all previously added listeners on the SpringSystem.
					removeAllListeners: function() {
						this.listeners = [];
					}

				});

				// Spring
				// ------
				// **Spring** provides a model of a classical spring acting to
				// resolve a body to equilibrium. Springs have configurable
				// tension which is a force multipler on the displacement of the
				// spring from its rest point or `endValue` as defined by [Hooke's
				// law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have
				// configurable friction, which ensures that they do not oscillate
				// infinitely. When a Spring is displaced by updating it's resting
				// or `currentValue`, the SpringSystems that contain that Spring
				// will automatically start looping to solve for equilibrium. As each
				// timestep passes, `SpringListener` objects attached to the Spring
				// will be notified of the updates providing a way to drive an
				// animation off of the spring's resolution curve.
				var Spring = rebound.Spring = function Spring(springSystem) {
					this._id = 's' + Spring._ID++;
					this._springSystem = springSystem;
					this.listeners = [];
					this._currentState = new PhysicsState();
					this._previousState = new PhysicsState();
					this._tempState = new PhysicsState();
				};

				util.extend(Spring, {
					_ID: 0,

					MAX_DELTA_TIME_SEC: 0.064,

					SOLVER_TIMESTEP_SEC: 0.001

				});

				util.extend(Spring.prototype, {

					_id: 0,

					_springConfig: null,

					_overshootClampingEnabled: false,

					_currentState: null,

					_previousState: null,

					_tempState: null,

					_startValue: 0,

					_endValue: 0,

					_wasAtRest: true,

					_restSpeedThreshold: 0.001,

					_displacementFromRestThreshold: 0.001,

					listeners: null,

					_timeAccumulator: 0,

					_springSystem: null,

					// Remove a Spring from simulation and clear its listeners.
					destroy: function() {
						this.listeners = [];
						this.frames = [];
						this._springSystem.deregisterSpring(this);
					},

					// Get the id of the spring, which can be used to retrieve it from
					// the SpringSystems it participates in later.
					getId: function() {
						return this._id;
					},

					// Set the configuration values for this Spring. A SpringConfig
					// contains the tension and friction values used to solve for the
					// equilibrium of the Spring in the physics loop.
					setSpringConfig: function(springConfig) {
						this._springConfig = springConfig;
						return this;
					},

					// Retrieve the SpringConfig used by this Spring.
					getSpringConfig: function() {
						return this._springConfig;
					},

					// Set the current position of this Spring. Listeners will be updated
					// with this value immediately. If the rest or `endValue` is not
					// updated to match this value, then the spring will be dispalced and
					// the SpringSystem will start to loop to restore the spring to the
					// `endValue`.
					//
					// A common pattern is to move a Spring around without animation by
					// calling.
					//
					// ```
					// spring.setCurrentValue(n).setAtRest();
					// ```
					//
					// This moves the Spring to a new position `n`, sets the endValue
					// to `n`, and removes any velocity from the `Spring`. By doing
					// this you can allow the `SpringListener` to manage the position
					// of UI elements attached to the spring even when moving without
					// animation. For example, when dragging an element you can
					// update the position of an attached view through a spring
					// by calling `spring.setCurrentValue(x)`. When
					// the gesture ends you can update the Springs
					// velocity and endValue
					// `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`
					// to cause it to naturally animate the UI element to the resting
					// position taking into account existing velocity. The codepaths for
					// synchronous movement and spring driven animation can
					// be unified using this technique.
					setCurrentValue: function(currentValue, skipSetAtRest) {
						this._startValue = currentValue;
						this._currentState.position = currentValue;
						if (!skipSetAtRest) {
							this.setAtRest();
						}
						this.notifyPositionUpdated(false, false);
						return this;
					},

					// Get the position that the most recent animation started at. This
					// can be useful for determining the number off oscillations that
					// have occurred.
					getStartValue: function() {
						return this._startValue;
					},

					// Retrieve the current value of the Spring.
					getCurrentValue: function() {
						return this._currentState.position;
					},

					// Get the absolute distance of the Spring from it's resting endValue
					// position.
					getCurrentDisplacementDistance: function() {
						return this.getDisplacementDistanceForState(this._currentState);
					},

					getDisplacementDistanceForState: function(state) {
						return Math.abs(this._endValue - state.position);
					},

					// Set the endValue or resting position of the spring. If this
					// value is different than the current value, the SpringSystem will
					// be notified and will begin running its solver loop to resolve
					// the Spring to equilibrium. Any listeners that are registered
					// for onSpringEndStateChange will also be notified of this update
					// immediately.
					setEndValue: function(endValue) {
						if (this._endValue == endValue && this.isAtRest())  {
							return this;
						}
						this._startValue = this.getCurrentValue();
						this._endValue = endValue;
						this._springSystem.activateSpring(this.getId());
						for (var i = 0, len = this.listeners.length; i < len; i++) {
							var listener = this.listeners[i];
							var onChange = listener.onSpringEndStateChange;
							onChange && onChange(this);
						}
						return this;
					},

					// Retrieve the endValue or resting position of this spring.
					getEndValue: function() {
						return this._endValue;
					},

					// Set the current velocity of the Spring. As previously mentioned,
					// this can be useful when you are performing a direct manipulation
					// gesture. When a UI element is released you may call setVelocity
					// on its animation Spring so that the Spring continues with the
					// same velocity as the gesture ended with. The friction, tension,
					// and displacement of the Spring will then govern its motion to
					// return to rest on a natural feeling curve.
					setVelocity: function(velocity) {
						if (velocity === this._currentState.velocity) {
							return this;
						}
						this._currentState.velocity = velocity;
						this._springSystem.activateSpring(this.getId());
						return this;
					},

					// Get the current velocity of the Spring.
					getVelocity: function() {
						return this._currentState.velocity;
					},

					// Set a threshold value for the movement speed of the Spring below
					// which it will be considered to be not moving or resting.
					setRestSpeedThreshold: function(restSpeedThreshold) {
						this._restSpeedThreshold = restSpeedThreshold;
						return this;
					},

					// Retrieve the rest speed threshold for this Spring.
					getRestSpeedThreshold: function() {
						return this._restSpeedThreshold;
					},

					// Set a threshold value for displacement below which the Spring
					// will be considered to be not displaced i.e. at its resting
					// `endValue`.
					setRestDisplacementThreshold: function(displacementFromRestThreshold) {
						this._displacementFromRestThreshold = displacementFromRestThreshold;
					},

					// Retrieve the rest displacement threshold for this spring.
					getRestDisplacementThreshold: function() {
						return this._displacementFromRestThreshold;
					},

					// Enable overshoot clamping. This means that the Spring will stop
					// immediately when it reaches its resting position regardless of
					// any existing momentum it may have. This can be useful for certain
					// types of animations that should not oscillate such as a scale
					// down to 0 or alpha fade.
					setOvershootClampingEnabled: function(enabled) {
						this._overshootClampingEnabled = enabled;
						return this;
					},

					// Check if overshoot clamping is enabled for this spring.
					isOvershootClampingEnabled: function() {
						return this._overshootClampingEnabled;
					},

					// Check if the Spring has gone past its end point by comparing
					// the direction it was moving in when it started to the current
					// position and end value.
					isOvershooting: function() {
						var start = this._startValue;
						var end = this._endValue;
						return this._springConfig.tension > 0 &&
							((start < end && this.getCurrentValue() > end) ||
							(start > end && this.getCurrentValue() < end));
					},

					// Spring.advance is the main solver method for the Spring. It takes
					// the current time and delta since the last time step and performs
					// an RK4 integration to get the new position and velocity state
					// for the Spring based on the tension, friction, velocity, and
					// displacement of the Spring.
					advance: function(time, realDeltaTime) {
						var isAtRest = this.isAtRest();

						if (isAtRest && this._wasAtRest) {
							return;
						}

						var adjustedDeltaTime = realDeltaTime;
						if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {
							adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;
						}

						this._timeAccumulator += adjustedDeltaTime;

						var tension = this._springConfig.tension,
							friction = this._springConfig.friction,

							position = this._currentState.position,
							velocity = this._currentState.velocity,
							tempPosition = this._tempState.position,
							tempVelocity = this._tempState.velocity,

							aVelocity, aAcceleration,
							bVelocity, bAcceleration,
							cVelocity, cAcceleration,
							dVelocity, dAcceleration,

							dxdt, dvdt;

						while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

							this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

							if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {
								this._previousState.position = position;
								this._previousState.velocity = velocity;
							}

							aVelocity = velocity;
							aAcceleration =
								(tension * (this._endValue - tempPosition)) - friction * velocity;

							tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							tempVelocity =
								velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							bVelocity = tempVelocity;
							bAcceleration =
								(tension * (this._endValue - tempPosition)) - friction * tempVelocity;

							tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							tempVelocity =
								velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							cVelocity = tempVelocity;
							cAcceleration =
								(tension * (this._endValue - tempPosition)) - friction * tempVelocity;

							tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							tempVelocity =
								velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
							dVelocity = tempVelocity;
							dAcceleration =
								(tension * (this._endValue - tempPosition)) - friction * tempVelocity;

							dxdt =
								1.0/6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
							dvdt = 1.0/6.0 * (
							aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration
							);

							position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
							velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;
						}

						this._tempState.position = tempPosition;
						this._tempState.velocity = tempVelocity;

						this._currentState.position = position;
						this._currentState.velocity = velocity;

						if (this._timeAccumulator > 0) {
							this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);
						}

						if (this.isAtRest() ||
							this._overshootClampingEnabled && this.isOvershooting()) {

							if (this._springConfig.tension > 0) {
								this._startValue = this._endValue;
								this._currentState.position = this._endValue;
							} else {
								this._endValue = this._currentState.position;
								this._startValue = this._endValue;
							}
							this.setVelocity(0);
							isAtRest = true;
						}

						var notifyActivate = false;
						if (this._wasAtRest) {
							this._wasAtRest = false;
							notifyActivate = true;
						}

						var notifyAtRest = false;
						if (isAtRest) {
							this._wasAtRest = true;
							notifyAtRest = true;
						}

						this.notifyPositionUpdated(notifyActivate, notifyAtRest);
					},

					notifyPositionUpdated: function(notifyActivate, notifyAtRest) {
						for (var i = 0, len = this.listeners.length; i < len; i++) {
							var listener = this.listeners[i];
							if (notifyActivate && listener.onSpringActivate) {
								listener.onSpringActivate(this);
							}

							if (listener.onSpringUpdate) {
								listener.onSpringUpdate(this);
							}

							if (notifyAtRest && listener.onSpringAtRest) {
								listener.onSpringAtRest(this);
							}
						}
					},


					// Check if the SpringSystem should advance. Springs are advanced
					// a final frame after they reach equilibrium to ensure that the
					// currentValue is exactly the requested endValue regardless of the
					// displacement threshold.
					systemShouldAdvance: function() {
						return !this.isAtRest() || !this.wasAtRest();
					},

					wasAtRest: function() {
						return this._wasAtRest;
					},

					// Check if the Spring is atRest meaning that it's currentValue and
					// endValue are the same and that it has no velocity. The previously
					// described thresholds for speed and displacement define the bounds
					// of this equivalence check. If the Spring has 0 tension, then it will
					// be considered at rest whenever its absolute velocity drops below the
					// restSpeedThreshold.
					isAtRest: function() {
						return Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&
							(this.getDisplacementDistanceForState(this._currentState) <=
							this._displacementFromRestThreshold ||
							this._springConfig.tension === 0);
					},

					// Force the spring to be at rest at its current position. As
					// described in the documentation for setCurrentValue, this method
					// makes it easy to do synchronous non-animated updates to ui
					// elements that are attached to springs via SpringListeners.
					setAtRest: function() {
						this._endValue = this._currentState.position;
						this._tempState.position = this._currentState.position;
						this._currentState.velocity = 0;
						return this;
					},

					_interpolate: function(alpha) {
						this._currentState.position = this._currentState.position *
						alpha + this._previousState.position * (1 - alpha);
						this._currentState.velocity = this._currentState.velocity *
						alpha + this._previousState.velocity * (1 - alpha);
					},

					getListeners: function() {
						return this.listeners;
					},

					addListener: function(newListener) {
						this.listeners.push(newListener);
						return this;
					},

					removeListener: function(listenerToRemove) {
						removeFirst(this.listeners, listenerToRemove);
						return this;
					},

					removeAllListeners: function() {
						this.listeners = [];
						return this;
					},

					currentValueIsApproximately: function(value) {
						return Math.abs(this.getCurrentValue() - value) <=
							this.getRestDisplacementThreshold();
					}

				});

				// PhysicsState
				// ------------
				// **PhysicsState** consists of a position and velocity. A Spring uses
				// this internally to keep track of its current and prior position and
				// velocity values.
				var PhysicsState = function PhysicsState() {};

				util.extend(PhysicsState.prototype, {
					position: 0,
					velocity: 0
				});

				// SpringConfig
				// ------------
				// **SpringConfig** maintains a set of tension and friction constants
				// for a Spring. You can use fromOrigamiTensionAndFriction to convert
				// values from the [Origami](http://facebook.github.io/origami/)
				// design tool directly to Rebound spring constants.
				var SpringConfig = rebound.SpringConfig =
					function SpringConfig(tension, friction) {
						this.tension = tension;
						this.friction = friction;
					};

				// Loopers
				// -------
				// **AnimationLooper** plays each frame of the SpringSystem on animation
				// timing loop. This is the default type of looper for a new spring system
				// as it is the most common when developing UI.
				var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {
					this.springSystem = null;
					var _this = this;
					var _run = function() {
						_this.springSystem.loop(Date.now());
					};

					this.run = function() {
						util.onFrame(_run);
					};
				};

				// **SimulationLooper** resolves the SpringSystem to a resting state in a
				// tight and blocking loop. This is useful for synchronously generating
				// pre-recorded animations that can then be played on a timing loop later.
				// Sometimes this lead to better performance to pre-record a single spring
				// curve and use it to drive many animations; however, it can make dynamic
				// response to user input a bit trickier to implement.
				rebound.SimulationLooper = function SimulationLooper(timestep) {
					this.springSystem = null;
					var time = 0;
					var running = false;
					timestep=timestep || 16.667;

					this.run = function() {
						if (running) {
							return;
						}
						running = true;
						while(!this.springSystem.getIsIdle()) {
							this.springSystem.loop(time+=timestep);
						}
						running = false;
					};
				};

				// **SteppingSimulationLooper** resolves the SpringSystem one step at a
				// time controlled by an outside loop. This is useful for testing and
				// verifying the behavior of a SpringSystem or if you want to control your own
				// timing loop for some reason e.g. slowing down or speeding up the
				// simulation.
				rebound.SteppingSimulationLooper = function(timestep) {
					this.springSystem = null;
					var time = 0;

					// this.run is NOOP'd here to allow control from the outside using
					// this.step.
					this.run = function(){};

					// Perform one step toward resolving the SpringSystem.
					this.step = function(timestep) {
						this.springSystem.loop(time+=timestep);
					};
				};

				// Math for converting from
				// [Origami](http://facebook.github.io/origami/) to
				// [Rebound](http://facebook.github.io/rebound).
				// You mostly don't need to worry about this, just use
				// SpringConfig.fromOrigamiTensionAndFriction(v, v);
				var OrigamiValueConverter = rebound.OrigamiValueConverter = {
					tensionFromOrigamiValue: function(oValue) {
						return (oValue - 30.0) * 3.62 + 194.0;
					},

					origamiValueFromTension: function(tension) {
						return (tension - 194.0) / 3.62 + 30.0;
					},

					frictionFromOrigamiValue: function(oValue) {
						return (oValue - 8.0) * 3.0 + 25.0;
					},

					origamiFromFriction: function(friction) {
						return (friction - 25.0) / 3.0 + 8.0;
					}
				};

				// BouncyConversion provides math for converting from Origami PopAnimation
				// config values to regular Origami tension and friction values. If you are
				// trying to replicate prototypes made with PopAnimation patches in Origami,
				// then you should create your springs with
				// SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math
				// internally to create a spring to match the provided PopAnimation
				// configuration from Origami.
				var BouncyConversion = rebound.BouncyConversion = function(bounciness, speed){
					this.bounciness = bounciness;
					this.speed = speed;
					var b = this.normalize(bounciness / 1.7, 0, 20.0);
					b = this.projectNormal(b, 0.0, 0.8);
					var s = this.normalize(speed / 1.7, 0, 20.0);
					this.bouncyTension = this.projectNormal(s, 0.5, 200)
					this.bouncyFriction = this.quadraticOutInterpolation(
						b,
						this.b3Nobounce(this.bouncyTension),
						0.01);
				}

				util.extend(BouncyConversion.prototype, {

					normalize: function(value, startValue, endValue) {
						return (value - startValue) / (endValue - startValue);
					},

					projectNormal: function(n, start, end) {
						return start + (n * (end - start));
					},

					linearInterpolation: function(t, start, end) {
						return t * end + (1.0 - t) * start;
					},

					quadraticOutInterpolation: function(t, start, end) {
						return this.linearInterpolation(2*t - t*t, start, end);
					},

					b3Friction1: function(x) {
						return (0.0007 * Math.pow(x, 3)) -
							(0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;
					},

					b3Friction2: function(x) {
						return (0.000044 * Math.pow(x, 3)) -
							(0.006 * Math.pow(x, 2)) + 0.36 * x + 2.;
					},

					b3Friction3: function(x) {
						return (0.00000045 * Math.pow(x, 3)) -
							(0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;
					},

					b3Nobounce: function(tension) {
						var friction = 0;
						if (tension <= 18) {
							friction = this.b3Friction1(tension);
						} else if (tension > 18 && tension <= 44) {
							friction = this.b3Friction2(tension);
						} else {
							friction = this.b3Friction3(tension);
						}
						return friction;
					}
				});

				util.extend(SpringConfig, {
					// Convert an origami Spring tension and friction to Rebound spring
					// constants. If you are prototyping a design with Origami, this
					// makes it easy to make your springs behave exactly the same in
					// Rebound.
					fromOrigamiTensionAndFriction: function(tension, friction) {
						return new SpringConfig(
							OrigamiValueConverter.tensionFromOrigamiValue(tension),
							OrigamiValueConverter.frictionFromOrigamiValue(friction));
					},

					// Convert an origami PopAnimation Spring bounciness and speed to Rebound
					// spring constants. If you are using PopAnimation patches in Origami, this
					// utility will provide springs that match your prototype.
					fromBouncinessAndSpeed: function(bounciness, speed) {
						var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);
						return this.fromOrigamiTensionAndFriction(
							bouncyConversion.bouncyTension,
							bouncyConversion.bouncyFriction);
					},

					// Create a SpringConfig with no tension or a coasting spring with some
					// amount of Friction so that it does not coast infininitely.
					coastingConfigWithOrigamiFriction: function(friction) {
						return new SpringConfig(
							0,
							OrigamiValueConverter.frictionFromOrigamiValue(friction)
						);
					}
				});

				SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG =
					SpringConfig.fromOrigamiTensionAndFriction(40, 7);

				util.extend(SpringConfig.prototype, {friction: 0, tension: 0});

				// Here are a couple of function to convert colors between hex codes and RGB
				// component values. These are handy when performing color
				// tweening animations.
				var colorCache = {};
				util.hexToRGB = function(color) {
					if (colorCache[color]) {
						return colorCache[color];
					}
					color = color.replace('#', '');
					if (color.length === 3) {
						color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];
					}
					var parts = color.match(/.{2}/g);

					var ret = {
						r: parseInt(parts[0], 16),
						g: parseInt(parts[1], 16),
						b: parseInt(parts[2], 16)
					};

					colorCache[color] = ret;
					return ret;
				};

				util.rgbToHex = function(r, g, b) {
					r = r.toString(16);
					g = g.toString(16);
					b = b.toString(16);
					r = r.length < 2 ? '0' + r : r;
					g = g.length < 2 ? '0' + g : g;
					b = b.length < 2 ? '0' + b : b;
					return '#' + r + g + b;
				};

				var MathUtil = rebound.MathUtil = {
					// This helper function does a linear interpolation of a value from
					// one range to another. This can be very useful for converting the
					// motion of a Spring to a range of UI property values. For example a
					// spring moving from position 0 to 1 could be interpolated to move a
					// view from pixel 300 to 350 and scale it from 0.5 to 1. The current
					// position of the `Spring` just needs to be run through this method
					// taking its input range in the _from_ parameters with the property
					// animation range in the _to_ parameters.
					mapValueInRange: function(value, fromLow, fromHigh, toLow, toHigh) {
						var fromRangeSize = fromHigh - fromLow;
						var toRangeSize = toHigh - toLow;
						var valueScale = (value - fromLow) / fromRangeSize;
						return toLow + (valueScale * toRangeSize);
					},

					// Interpolate two hex colors in a 0 - 1 range or optionally provide a
					// custom range with fromLow,fromHight. The output will be in hex by default
					// unless asRGB is true in which case it will be returned as an rgb string.
					interpolateColor:
						function(val, startColor, endColor, fromLow, fromHigh, asRGB) {
							fromLow = fromLow === undefined ? 0 : fromLow;
							fromHigh = fromHigh === undefined ? 1 : fromHigh;
							startColor = util.hexToRGB(startColor);
							endColor = util.hexToRGB(endColor);
							var r = Math.floor(
								util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r)
							);
							var g = Math.floor(
								util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g)
							);
							var b = Math.floor(
								util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b)
							);
							if (asRGB) {
								return 'rgb(' + r + ',' + g + ',' + b + ')';
							} else {
								return util.rgbToHex(r, g, b);
							}
						},

					degreesToRadians: function(deg) {
						return (deg * Math.PI) / 180;
					},

					radiansToDegrees: function(rad) {
						return (rad * 180) / Math.PI;
					}

				}

				util.extend(util, MathUtil);


				// Utilities
				// ---------
				// Here are a few useful JavaScript utilities.

				// Lop off the first occurence of the reference in the Array.
				function removeFirst(array, item) {
					var idx = array.indexOf(item);
					idx != -1 && array.splice(idx, 1);
				}

				var _onFrame;
				if (typeof window !== 'undefined') {
					_onFrame = window.requestAnimationFrame ||
					window.webkitRequestAnimationFrame ||
					window.mozRequestAnimationFrame ||
					window.msRequestAnimationFrame ||
					window.oRequestAnimationFrame ||
					function(callback) {
						window.setTimeout(callback, 1000 / 60);
					};
				}
				if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {
					_onFrame = setImmediate;
				}

				// Cross browser/node timer functions.
				util.onFrame = function onFrame(func) {
					return _onFrame(func);
				};

				// Export the public api using exports for common js or the window for
				// normal browser inclusion.
				if (true) {
					util.extend(exports, rebound);
				} else if (typeof window != 'undefined') {
					window.rebound = rebound;
				}
			})();


			// Legal Stuff
			// -----------
			/**
			 *  Copyright (c) 2013, Facebook, Inc.
			 *  All rights reserved.
			 *
			 *  This source code is licensed under the BSD-style license found in the
			 *  LICENSE file in the root directory of this source tree. An additional grant
			 *  of patent rights can be found in the PATENTS file in the same directory.
			 */

			/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(5).setImmediate))

		/***/ },
	/* 4 */
	/***/ function(module, exports) {

		// shim for using process in browser

		var process = module.exports = {};
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;

		function cleanUpNextTick() {
			draining = false;
			if (currentQueue.length) {
				queue = currentQueue.concat(queue);
			} else {
				queueIndex = -1;
			}
			if (queue.length) {
				drainQueue();
			}
		}

		function drainQueue() {
			if (draining) {
				return;
			}
			var timeout = setTimeout(cleanUpNextTick);
			draining = true;

			var len = queue.length;
			while(len) {
				currentQueue = queue;
				queue = [];
				while (++queueIndex < len) {
					currentQueue[queueIndex].run();
				}
				queueIndex = -1;
				len = queue.length;
			}
			currentQueue = null;
			draining = false;
			clearTimeout(timeout);
		}

		process.nextTick = function (fun) {
			var args = new Array(arguments.length - 1);
			if (arguments.length > 1) {
				for (var i = 1; i < arguments.length; i++) {
					args[i - 1] = arguments[i];
				}
			}
			queue.push(new Item(fun, args));
			if (queue.length === 1 && !draining) {
				setTimeout(drainQueue, 0);
			}
		};

		// v8 likes predictible objects
		function Item(fun, array) {
			this.fun = fun;
			this.array = array;
		}
		Item.prototype.run = function () {
			this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};

		function noop() {}

		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;

		process.binding = function (name) {
			throw new Error('process.binding is not supported');
		};

		// TODO(shtylman)
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
			throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };


		/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(4).nextTick;
			var apply = Function.prototype.apply;
			var slice = Array.prototype.slice;
			var immediateIds = {};
			var nextImmediateId = 0;

			// DOM APIs, for completeness

			exports.setTimeout = function() {
				return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
			};
			exports.setInterval = function() {
				return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
			};
			exports.clearTimeout =
				exports.clearInterval = function(timeout) { timeout.close(); };

			function Timeout(id, clearFn) {
				this._id = id;
				this._clearFn = clearFn;
			}
			Timeout.prototype.unref = Timeout.prototype.ref = function() {};
			Timeout.prototype.close = function() {
				this._clearFn.call(window, this._id);
			};

			// Does not start the time, just sets up the members needed.
			exports.enroll = function(item, msecs) {
				clearTimeout(item._idleTimeoutId);
				item._idleTimeout = msecs;
			};

			exports.unenroll = function(item) {
				clearTimeout(item._idleTimeoutId);
				item._idleTimeout = -1;
			};

			exports._unrefActive = exports.active = function(item) {
				clearTimeout(item._idleTimeoutId);

				var msecs = item._idleTimeout;
				if (msecs >= 0) {
					item._idleTimeoutId = setTimeout(function onTimeout() {
						if (item._onTimeout)
							item._onTimeout();
					}, msecs);
				}
			};

			// That's not how node.js implements it but the exposed api is the same.
			exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
				var id = nextImmediateId++;
				var args = arguments.length < 2 ? false : slice.call(arguments, 1);

				immediateIds[id] = true;

				nextTick(function onNextTick() {
					if (immediateIds[id]) {
						// fn.call() is faster so we optimize for the common use-case
						// @see http://jsperf.com/call-apply-segu
						if (args) {
							fn.apply(null, args);
						} else {
							fn.call(null);
						}
						// Prevent ids from leaking
						exports.clearImmediate(id);
					}
				});

				return id;
			};

			exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
				delete immediateIds[id];
			};
			/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate, __webpack_require__(5).clearImmediate))

		/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(global) {'use strict';

			Object.defineProperty(exports, '__esModule', {
				value: true
			});

			function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

			var _sister = __webpack_require__(2);

			var _sister2 = _interopRequireDefault(_sister);

			var _hammerjs = __webpack_require__(7);

			var _hammerjs2 = _interopRequireDefault(_hammerjs);

			var _rebound = __webpack_require__(3);

			var _rebound2 = _interopRequireDefault(_rebound);

			var _vendorPrefix = __webpack_require__(9);

			var _vendorPrefix2 = _interopRequireDefault(_vendorPrefix);

			var _utilJs = __webpack_require__(10);

			var _utilJs2 = _interopRequireDefault(_utilJs);

			var _raf = __webpack_require__(12);

			var _raf2 = _interopRequireDefault(_raf);

			var Card = undefined;

			/**
			 * @param {Stack} stack
			 * @param {HTMLElement} targetElement
			 * @return {Object} An instance of Card.
			 */
			Card = function (stack, targetElement) {
				var card = undefined,
					config = undefined,
					construct = undefined,
					currentX = undefined,
					currentY = undefined,
					doMove = undefined,
					eventEmitter = undefined,
					isDraging = undefined,
					lastThrow = undefined,
					lastTranslate = undefined,
					lastX = undefined,
					lastY = undefined,
					mc = undefined,
					_onSpringUpdate = undefined,
					springSystem = undefined,
					springThrowIn = undefined,
					springThrowOut = undefined,
					throwOutDistance = undefined,
					throwWhere = undefined;

				construct = function () {
					card = {};
					config = Card.makeConfig(stack.getConfig());
					eventEmitter = (0, _sister2['default'])();
					springSystem = stack.getSpringSystem();
					springThrowIn = springSystem.createSpring(250, 10);
					springThrowOut = springSystem.createSpring(1000, 300);
					lastThrow = {};
					lastTranslate = {
						x: 0,
						y: 0
					};

					springThrowIn.setRestSpeedThreshold(0.05);
					springThrowIn.setRestDisplacementThreshold(0.05);

					springThrowOut.setRestSpeedThreshold(0.05);
					springThrowOut.setRestDisplacementThreshold(0.05);

					throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);

					mc = new _hammerjs2['default'].Manager(targetElement, {
						recognizers: [[_hammerjs2['default'].Pan, {
							threshold: 2
						}]]
					});

					//Card.appendToParent(targetElement);
					Card.insertBelow(targetElement);

					eventEmitter.on('panstart', function () {
						Card.appendToParent(targetElement);

						eventEmitter.trigger('dragstart', {
							target: targetElement
						});

						currentX = 0;
						currentY = 0;

						isDraging = true;

						(function animation() {
							if (isDraging) {
								doMove();

								(0, _raf2['default'])(animation);
							}
						})();
					});

					eventEmitter.on('panmove', function (e) {
						currentX = e.deltaX;
						currentY = e.deltaY;
					});

					eventEmitter.on('panend', function (e) {
						var x = undefined,
							y = undefined;

						isDraging = false;

						x = lastTranslate.x + e.deltaX;
						y = lastTranslate.y + e.deltaY;

						if (config.isThrowOut(x, targetElement, config.throwOutConfidence(x, targetElement))) {
							card.throwOut(x, y);
						} else {
							card.throwIn(x, y);
						}

						eventEmitter.trigger('dragend', {
							target: targetElement
						});
					});

					// "mousedown" event fires late on touch enabled devices, thus listening
					// to the touchstart event for touch enabled devices and mousedown otherwise.
					if (_utilJs2['default'].isTouchDevice()) {
						targetElement.addEventListener('touchstart', function () {
							eventEmitter.trigger('panstart');
						});

						// Disable scrolling while dragging the element on the touch enabled devices.
						// @see http://stackoverflow.com/a/12090055/368691
						(function () {
							var dragging = undefined;

							targetElement.addEventListener('touchstart', function () {
								dragging = true;
							});

							targetElement.addEventListener('touchend', function () {
								dragging = false;
							});

							global.addEventListener('touchmove', function (e) {
								if (dragging) {
									e.preventDefault();
								}
							});
						})();
					} else {
						targetElement.addEventListener('mousedown', function () {
							eventEmitter.trigger('panstart');
						});
					}

					mc.on('panmove', function (e) {
						eventEmitter.trigger('panmove', e);
						$("#viewport" ).trigger('panmove', [e])
					});

					mc.on('panend', function (e) {
						eventEmitter.trigger('panend', e);
						$("#viewport" ).trigger('panend', [e])
					});

					springThrowIn.addListener({
						onSpringUpdate: function onSpringUpdate(spring) {
							var value = undefined,
								x = undefined,
								y = undefined;

							value = spring.getCurrentValue();
							x = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0);
							y = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);

							_onSpringUpdate(x, y);
						},
						onSpringAtRest: function onSpringAtRest() {
							eventEmitter.trigger('throwinend', {
								target: targetElement
							});
						}
					});

					springThrowOut.addListener({
						onSpringUpdate: function onSpringUpdate(spring) {
							var value = undefined,
								x = undefined,
								y = undefined;

							value = spring.getCurrentValue();
							x = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * lastThrow.direction);
							y = lastThrow.fromY;

							_onSpringUpdate(x, y);
						},
						onSpringAtRest: function onSpringAtRest() {
							eventEmitter.trigger('throwoutend', {
								target: targetElement
							});
						}
					});

					/**
					 * Transforms card position based on the current environment variables.
					 *
					 * @return {undefined}
					 */
					doMove = function () {
						var r = undefined,
							x = undefined,
							y = undefined;

						if (currentX === lastX && currentY === lastY) {
							return;
						}

						lastX = currentX;
						lastY = currentY;

						x = lastTranslate.x + currentX;
						y = lastTranslate.y + currentY;
						r = config.rotation(x, y, targetElement, config.maxRotation);

						config.transform(targetElement, x, y, r);

						eventEmitter.trigger('dragmove', {
							target: targetElement,
							throwOutConfidence: config.throwOutConfidence(x, targetElement),
							throwDirection: x < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT
						});
					};

					/**
					 * Invoked every time the physics solver updates the Spring's value.
					 *
					 * @param {Number} x
					 * @param {Number} y
					 * @return {undefined}
					 */
					_onSpringUpdate = function (x, y) {
						var r = undefined;

						r = config.rotation(x, y, targetElement, config.maxRotation);

						lastTranslate.x = x || 0;
						lastTranslate.y = y || 0;

						Card.transform(targetElement, x, y, r);
					};

					/**
					 * @param {Card.THROW_IN|Card.THROW_OUT} where
					 * @param {Number} fromX
					 * @param {Number} fromY
					 * @return {undefined}
					 */
					throwWhere = function (where, fromX, fromY) {
						lastThrow.fromX = fromX;
						lastThrow.fromY = fromY;
						lastThrow.direction = lastThrow.fromX < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT;

						if (where === Card.THROW_IN) {
							springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);

							eventEmitter.trigger('throwin', {
								target: targetElement,
								throwDirection: lastThrow.direction
							});
						} else if (where === Card.THROW_OUT) {
							springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);

							eventEmitter.trigger('throwout', {
								target: targetElement,
								throwDirection: lastThrow.direction
							});

							$("#viewport").trigger( "out", [ targetElement, lastThrow.direction ] );

							if (lastThrow.direction === Card.DIRECTION_LEFT) {
								eventEmitter.trigger('throwoutleft', {
									target: targetElement,
									throwDirection: lastThrow.direction
								});
							} else {
								eventEmitter.trigger('throwoutright', {
									target: targetElement,
									throwDirection: lastThrow.direction
								});
							}
						} else {
							throw new Error('Invalid throw event.');
						}
					};
				};

				construct();

				/**
				 * Alias
				 */
				card.on = eventEmitter.on;
				card.trigger = eventEmitter.trigger;

				/**
				 * Throws a card into the stack from an arbitrary position.
				 *
				 * @param {Number} fromX
				 * @param {Number} fromY
				 * @return {undefined}
				 */
				card.throwIn = function (fromX, fromY) {
					throwWhere(Card.THROW_IN, fromX, fromY);
				};

				/**
				 * Throws a card out of the stack in the direction away from the original offset.
				 *
				 * @param {Number} fromX
				 * @param {Number} fromY
				 * @return {undefined}
				 */
				card.throwOut = function (fromX, fromY) {
					throwWhere(Card.THROW_OUT, fromX, fromY);
				};

				/**
				 * Unbinds all Hammer.Manager events.
				 * Removes the listeners from the physics simulation.
				 *
				 * @return {undefined}
				 */
				card.destroy = function () {
					mc.destroy();
					springThrowIn.destroy();
					springThrowOut.destroy();

					stack.destroyCard(card);
				};

				return card;
			};

			/**
			 * Creates a configuration object.
			 *
			 * @param {Object} config
			 * @return {Object}
			 */
			Card.makeConfig = function () {
				var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

				var defaultConfig = undefined;

				defaultConfig = {
					isThrowOut: Card.isThrowOut,
					throwOutConfidence: Card.throwOutConfidence,
					throwOutDistance: Card.throwOutDistance,
					minThrowOutDistance: 400,
					maxThrowOutDistance: 500,
					rotation: Card.rotation,
					maxRotation: 20,
					transform: Card.transform
				};

				return _utilJs2['default'].assign({}, defaultConfig, config);
			};

			/**
			 * Uses CSS transform to translate element position and rotation.
			 *
			 * Invoked in the event of `dragmove` and every time the physics solver is triggered.
			 *
			 * @param {HTMLElement} element
			 * @param {Number} x Horizontal offset from the startDrag.
			 * @param {Number} y Vertical offset from the startDrag.
			 * @param {Number} r
			 * @return {undefined}
			 */
			Card.transform = function (element, x, y, r) {
				element.style[(0, _vendorPrefix2['default'])('transform')] = 'translate3d(0, 0, 0) translate(' + x + 'px, ' + y + 'px) rotate(' + r + 'deg)';
			};

			/**
			 * Append element to the parentNode.
			 *
			 * This makes the element first among the siblings. The reason for using
			 * this as opposed to zIndex is to allow CSS selector :nth-child.
			 *
			 * Invoked in the event of mousedown.
			 * Invoked when card is added to the stack.
			 *
			 * @param {HTMLElement} element The target element.
			 * @return {undefined}
			 */
			Card.appendToParent = function (element) {
				var parentNode = undefined,
					siblings = undefined,
					targetIndex = undefined;

				parentNode = element.parentNode;
				siblings = _utilJs2['default'].elementChildren(parentNode);
				targetIndex = siblings.indexOf(element);

				if (targetIndex + 1 !== siblings.length) {
					parentNode.removeChild(element);
					parentNode.appendChild(element);
				}
			};

			Card.insertBelow = function (element) {
				var parent = element.parentNode;
				parent.removeChild(element);
				parent.insertBefore(element,parent.firstChild);
			};


			/**
			 * Returns a value between 0 and 1 indicating the completeness of the throw out condition.
			 *
			 * Ration of the absolute distance from the original card position and element width.
			 *
			 * @param {Number} offset Distance from the dragStart.
			 * @param {HTMLElement} element Element.
			 * @return {Number}
			 */
			Card.throwOutConfidence = function (offset, element) {
				return Math.min(Math.abs(offset) / element.offsetWidth, 1);
			};

			/**
			 * Determines if element is being thrown out of the stack.
			 *
			 * Element is considered to be thrown out when throwOutConfidence is equal to 1.
			 *
			 * @param {Number} offset Distance from the dragStart.
			 * @param {HTMLElement} element Element.
			 * @param {Number} throwOutConfidence config.throwOutConfidence
			 * @return {Boolean}
			 */
			Card.isThrowOut = function (offset, element, throwOutConfidence) {
				return throwOutConfidence === 1;
			};

			/**
			 * Calculates a distances at which the card is thrown out of the stack.
			 *
			 * @param {Number} min
			 * @param {Number} max
			 * @return {Number}
			 */
			Card.throwOutDistance = function (min, max) {
				return _utilJs2['default'].random(min, max);
			};

			/**
			 * Calculates rotation based on the element x and y offset, element width and maxRotation variables.
			 *
			 * @param {Number} x Horizontal offset from the startDrag.
			 * @param {Number} y Vertical offset from the startDrag.
			 * @param {HTMLElement} element Element.
			 * @param {Number} maxRotation
			 * @return {Number} Rotation angle expressed in degrees.
			 */
			Card.rotation = function (x, y, element, maxRotation) {
				var horizontalOffset = undefined,
					rotation = undefined,
					verticalOffset = undefined;

				horizontalOffset = Math.min(Math.max(x / element.offsetWidth, -1), 1);
				verticalOffset = (y > 0 ? 1 : -1) * Math.min(Math.abs(y) / 100, 1);
				rotation = horizontalOffset * verticalOffset * maxRotation;

				return rotation;
			};

			Card.DIRECTION_LEFT = -1;
			Card.DIRECTION_RIGHT = 1;

			Card.THROW_IN = 'in';
			Card.THROW_OUT = 'out';

			exports['default'] = Card;
			module.exports = exports['default'];
			/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

		/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {

		var __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.4 - 2014-09-28
		 * http://hammerjs.github.io/
		 *
		 * Copyright (c) 2014 Jorik Tangelder;
		 * Licensed under the MIT license */
		(function(window, document, exportName, undefined) {
			'use strict';

			var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];
			var TEST_ELEMENT = document.createElement('div');

			var TYPE_FUNCTION = 'function';

			var round = Math.round;
			var abs = Math.abs;
			var now = Date.now;

			/**
			 * set a timeout with a given scope
			 * @param {Function} fn
			 * @param {Number} timeout
			 * @param {Object} context
			 * @returns {number}
			 */
			function setTimeoutContext(fn, timeout, context) {
				return setTimeout(bindFn(fn, context), timeout);
			}

			/**
			 * if the argument is an array, we want to execute the fn on each entry
			 * if it aint an array we don't want to do a thing.
			 * this is used by all the methods that accept a single and array argument.
			 * @param {*|Array} arg
			 * @param {String} fn
			 * @param {Object} [context]
			 * @returns {Boolean}
			 */
			function invokeArrayArg(arg, fn, context) {
				if (Array.isArray(arg)) {
					each(arg, context[fn], context);
					return true;
				}
				return false;
			}

			/**
			 * walk objects and arrays
			 * @param {Object} obj
			 * @param {Function} iterator
			 * @param {Object} context
			 */
			function each(obj, iterator, context) {
				var i;

				if (!obj) {
					return;
				}

				if (obj.forEach) {
					obj.forEach(iterator, context);
				} else if (obj.length !== undefined) {
					i = 0;
					while (i < obj.length) {
						iterator.call(context, obj[i], i, obj);
						i++;
					}
				} else {
					for (i in obj) {
						obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
					}
				}
			}

			/**
			 * extend object.
			 * means that properties in dest will be overwritten by the ones in src.
			 * @param {Object} dest
			 * @param {Object} src
			 * @param {Boolean} [merge]
			 * @returns {Object} dest
			 */
			function extend(dest, src, merge) {
				var keys = Object.keys(src);
				var i = 0;
				while (i < keys.length) {
					if (!merge || (merge && dest[keys[i]] === undefined)) {
						dest[keys[i]] = src[keys[i]];
					}
					i++;
				}
				return dest;
			}

			/**
			 * merge the values from src in the dest.
			 * means that properties that exist in dest will not be overwritten by src
			 * @param {Object} dest
			 * @param {Object} src
			 * @returns {Object} dest
			 */
			function merge(dest, src) {
				return extend(dest, src, true);
			}

			/**
			 * simple class inheritance
			 * @param {Function} child
			 * @param {Function} base
			 * @param {Object} [properties]
			 */
			function inherit(child, base, properties) {
				var baseP = base.prototype,
					childP;

				childP = child.prototype = Object.create(baseP);
				childP.constructor = child;
				childP._super = baseP;

				if (properties) {
					extend(childP, properties);
				}
			}

			/**
			 * simple function bind
			 * @param {Function} fn
			 * @param {Object} context
			 * @returns {Function}
			 */
			function bindFn(fn, context) {
				return function boundFn() {
					return fn.apply(context, arguments);
				};
			}

			/**
			 * let a boolean value also be a function that must return a boolean
			 * this first item in args will be used as the context
			 * @param {Boolean|Function} val
			 * @param {Array} [args]
			 * @returns {Boolean}
			 */
			function boolOrFn(val, args) {
				if (typeof val == TYPE_FUNCTION) {
					return val.apply(args ? args[0] || undefined : undefined, args);
				}
				return val;
			}

			/**
			 * use the val2 when val1 is undefined
			 * @param {*} val1
			 * @param {*} val2
			 * @returns {*}
			 */
			function ifUndefined(val1, val2) {
				return (val1 === undefined) ? val2 : val1;
			}

			/**
			 * addEventListener with multiple events at once
			 * @param {EventTarget} target
			 * @param {String} types
			 * @param {Function} handler
			 */
			function addEventListeners(target, types, handler) {
				each(splitStr(types), function(type) {
					target.addEventListener(type, handler, false);
				});
			}

			/**
			 * removeEventListener with multiple events at once
			 * @param {EventTarget} target
			 * @param {String} types
			 * @param {Function} handler
			 */
			function removeEventListeners(target, types, handler) {
				each(splitStr(types), function(type) {
					target.removeEventListener(type, handler, false);
				});
			}

			/**
			 * find if a node is in the given parent
			 * @method hasParent
			 * @param {HTMLElement} node
			 * @param {HTMLElement} parent
			 * @return {Boolean} found
			 */
			function hasParent(node, parent) {
				while (node) {
					if (node == parent) {
						return true;
					}
					node = node.parentNode;
				}
				return false;
			}

			/**
			 * small indexOf wrapper
			 * @param {String} str
			 * @param {String} find
			 * @returns {Boolean} found
			 */
			function inStr(str, find) {
				return str.indexOf(find) > -1;
			}

			/**
			 * split string on whitespace
			 * @param {String} str
			 * @returns {Array} words
			 */
			function splitStr(str) {
				return str.trim().split(/\s+/g);
			}

			/**
			 * find if a array contains the object using indexOf or a simple polyFill
			 * @param {Array} src
			 * @param {String} find
			 * @param {String} [findByKey]
			 * @return {Boolean|Number} false when not found, or the index
			 */
			function inArray(src, find, findByKey) {
				if (src.indexOf && !findByKey) {
					return src.indexOf(find);
				} else {
					var i = 0;
					while (i < src.length) {
						if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {
							return i;
						}
						i++;
					}
					return -1;
				}
			}

			/**
			 * convert array-like objects to real arrays
			 * @param {Object} obj
			 * @returns {Array}
			 */
			function toArray(obj) {
				return Array.prototype.slice.call(obj, 0);
			}

			/**
			 * unique array with objects based on a key (like 'id') or just by the array's value
			 * @param {Array} src [{id:1},{id:2},{id:1}]
			 * @param {String} [key]
			 * @param {Boolean} [sort=False]
			 * @returns {Array} [{id:1},{id:2}]
			 */
			function uniqueArray(src, key, sort) {
				var results = [];
				var values = [];
				var i = 0;

				while (i < src.length) {
					var val = key ? src[i][key] : src[i];
					if (inArray(values, val) < 0) {
						results.push(src[i]);
					}
					values[i] = val;
					i++;
				}

				if (sort) {
					if (!key) {
						results = results.sort();
					} else {
						results = results.sort(function sortUniqueArray(a, b) {
							return a[key] > b[key];
						});
					}
				}

				return results;
			}

			/**
			 * get the prefixed property
			 * @param {Object} obj
			 * @param {String} property
			 * @returns {String|Undefined} prefixed
			 */
			function prefixed(obj, property) {
				var prefix, prop;
				var camelProp = property[0].toUpperCase() + property.slice(1);

				var i = 0;
				while (i < VENDOR_PREFIXES.length) {
					prefix = VENDOR_PREFIXES[i];
					prop = (prefix) ? prefix + camelProp : property;

					if (prop in obj) {
						return prop;
					}
					i++;
				}
				return undefined;
			}

			/**
			 * get a unique id
			 * @returns {number} uniqueId
			 */
			var _uniqueId = 1;
			function uniqueId() {
				return _uniqueId++;
			}

			/**
			 * get the window object of an element
			 * @param {HTMLElement} element
			 * @returns {DocumentView|Window}
			 */
			function getWindowForElement(element) {
				var doc = element.ownerDocument;
				return (doc.defaultView || doc.parentWindow);
			}

			var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;

			var SUPPORT_TOUCH = ('ontouchstart' in window);
			var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
			var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);

			var INPUT_TYPE_TOUCH = 'touch';
			var INPUT_TYPE_PEN = 'pen';
			var INPUT_TYPE_MOUSE = 'mouse';
			var INPUT_TYPE_KINECT = 'kinect';

			var COMPUTE_INTERVAL = 25;

			var INPUT_START = 1;
			var INPUT_MOVE = 2;
			var INPUT_END = 4;
			var INPUT_CANCEL = 8;

			var DIRECTION_NONE = 1;
			var DIRECTION_LEFT = 2;
			var DIRECTION_RIGHT = 4;
			var DIRECTION_UP = 8;
			var DIRECTION_DOWN = 16;

			var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
			var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
			var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;

			var PROPS_XY = ['x', 'y'];
			var PROPS_CLIENT_XY = ['clientX', 'clientY'];

			/**
			 * create new input type manager
			 * @param {Manager} manager
			 * @param {Function} callback
			 * @returns {Input}
			 * @constructor
			 */
			function Input(manager, callback) {
				var self = this;
				this.manager = manager;
				this.callback = callback;
				this.element = manager.element;
				this.target = manager.options.inputTarget;

				// smaller wrapper around the handler, for the scope and the enabled state of the manager,
				// so when disabled the input events are completely bypassed.
				this.domHandler = function(ev) {
					if (boolOrFn(manager.options.enable, [manager])) {
						self.handler(ev);
					}
				};

				this.init();

			}

			Input.prototype = {
				/**
				 * should handle the inputEvent data and trigger the callback
				 * @virtual
				 */
				handler: function() { },

				/**
				 * bind the events
				 */
				init: function() {
					this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
					this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
					this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
				},

				/**
				 * unbind the events
				 */
				destroy: function() {
					this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
					this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
					this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
				}
			};

			/**
			 * create new input type manager
			 * called by the Manager constructor
			 * @param {Hammer} manager
			 * @returns {Input}
			 */
			function createInputInstance(manager) {
				var Type;
				var inputClass = manager.options.inputClass;

				if (inputClass) {
					Type = inputClass;
				} else if (SUPPORT_POINTER_EVENTS) {
					Type = PointerEventInput;
				} else if (SUPPORT_ONLY_TOUCH) {
					Type = TouchInput;
				} else if (!SUPPORT_TOUCH) {
					Type = MouseInput;
				} else {
					Type = TouchMouseInput;
				}
				return new (Type)(manager, inputHandler);
			}

			/**
			 * handle input events
			 * @param {Manager} manager
			 * @param {String} eventType
			 * @param {Object} input
			 */
			function inputHandler(manager, eventType, input) {
				var pointersLen = input.pointers.length;
				var changedPointersLen = input.changedPointers.length;
				var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));
				var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));

				input.isFirst = !!isFirst;
				input.isFinal = !!isFinal;

				if (isFirst) {
					manager.session = {};
				}

				// source event is the normalized value of the domEvents
				// like 'touchstart, mouseup, pointerdown'
				input.eventType = eventType;

				// compute scale, rotation etc
				computeInputData(manager, input);

				// emit secret event
				manager.emit('hammer.input', input);

				manager.recognize(input);
				manager.session.prevInput = input;
			}

			/**
			 * extend the data with some usable properties like scale, rotate, velocity etc
			 * @param {Object} manager
			 * @param {Object} input
			 */
			function computeInputData(manager, input) {
				var session = manager.session;
				var pointers = input.pointers;
				var pointersLength = pointers.length;

				// store the first input to calculate the distance and direction
				if (!session.firstInput) {
					session.firstInput = simpleCloneInputData(input);
				}

				// to compute scale and rotation we need to store the multiple touches
				if (pointersLength > 1 && !session.firstMultiple) {
					session.firstMultiple = simpleCloneInputData(input);
				} else if (pointersLength === 1) {
					session.firstMultiple = false;
				}

				var firstInput = session.firstInput;
				var firstMultiple = session.firstMultiple;
				var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;

				var center = input.center = getCenter(pointers);
				input.timeStamp = now();
				input.deltaTime = input.timeStamp - firstInput.timeStamp;

				input.angle = getAngle(offsetCenter, center);
				input.distance = getDistance(offsetCenter, center);

				computeDeltaXY(session, input);
				input.offsetDirection = getDirection(input.deltaX, input.deltaY);

				input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
				input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;

				computeIntervalInputData(session, input);

				// find the correct target
				var target = manager.element;
				if (hasParent(input.srcEvent.target, target)) {
					target = input.srcEvent.target;
				}
				input.target = target;
			}

			function computeDeltaXY(session, input) {
				var center = input.center;
				var offset = session.offsetDelta || {};
				var prevDelta = session.prevDelta || {};
				var prevInput = session.prevInput || {};

				if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
					prevDelta = session.prevDelta = {
						x: prevInput.deltaX || 0,
						y: prevInput.deltaY || 0
					};

					offset = session.offsetDelta = {
						x: center.x,
						y: center.y
					};
				}

				input.deltaX = prevDelta.x + (center.x - offset.x);
				input.deltaY = prevDelta.y + (center.y - offset.y);
			}

			/**
			 * velocity is calculated every x ms
			 * @param {Object} session
			 * @param {Object} input
			 */
			function computeIntervalInputData(session, input) {
				var last = session.lastInterval || input,
					deltaTime = input.timeStamp - last.timeStamp,
					velocity, velocityX, velocityY, direction;

				if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
					var deltaX = last.deltaX - input.deltaX;
					var deltaY = last.deltaY - input.deltaY;

					var v = getVelocity(deltaTime, deltaX, deltaY);
					velocityX = v.x;
					velocityY = v.y;
					velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;
					direction = getDirection(deltaX, deltaY);

					session.lastInterval = input;
				} else {
					// use latest velocity info if it doesn't overtake a minimum period
					velocity = last.velocity;
					velocityX = last.velocityX;
					velocityY = last.velocityY;
					direction = last.direction;
				}

				input.velocity = velocity;
				input.velocityX = velocityX;
				input.velocityY = velocityY;
				input.direction = direction;
			}

			/**
			 * create a simple clone from the input used for storage of firstInput and firstMultiple
			 * @param {Object} input
			 * @returns {Object} clonedInputData
			 */
			function simpleCloneInputData(input) {
				// make a simple copy of the pointers because we will get a reference if we don't
				// we only need clientXY for the calculations
				var pointers = [];
				var i = 0;
				while (i < input.pointers.length) {
					pointers[i] = {
						clientX: round(input.pointers[i].clientX),
						clientY: round(input.pointers[i].clientY)
					};
					i++;
				}

				return {
					timeStamp: now(),
					pointers: pointers,
					center: getCenter(pointers),
					deltaX: input.deltaX,
					deltaY: input.deltaY
				};
			}

			/**
			 * get the center of all the pointers
			 * @param {Array} pointers
			 * @return {Object} center contains `x` and `y` properties
			 */
			function getCenter(pointers) {
				var pointersLength = pointers.length;

				// no need to loop when only one touch
				if (pointersLength === 1) {
					return {
						x: round(pointers[0].clientX),
						y: round(pointers[0].clientY)
					};
				}

				var x = 0, y = 0, i = 0;
				while (i < pointersLength) {
					x += pointers[i].clientX;
					y += pointers[i].clientY;
					i++;
				}

				return {
					x: round(x / pointersLength),
					y: round(y / pointersLength)
				};
			}

			/**
			 * calculate the velocity between two points. unit is in px per ms.
			 * @param {Number} deltaTime
			 * @param {Number} x
			 * @param {Number} y
			 * @return {Object} velocity `x` and `y`
			 */
			function getVelocity(deltaTime, x, y) {
				return {
					x: x / deltaTime || 0,
					y: y / deltaTime || 0
				};
			}

			/**
			 * get the direction between two points
			 * @param {Number} x
			 * @param {Number} y
			 * @return {Number} direction
			 */
			function getDirection(x, y) {
				if (x === y) {
					return DIRECTION_NONE;
				}

				if (abs(x) >= abs(y)) {
					return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
				}
				return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;
			}

			/**
			 * calculate the absolute distance between two points
			 * @param {Object} p1 {x, y}
			 * @param {Object} p2 {x, y}
			 * @param {Array} [props] containing x and y keys
			 * @return {Number} distance
			 */
			function getDistance(p1, p2, props) {
				if (!props) {
					props = PROPS_XY;
				}
				var x = p2[props[0]] - p1[props[0]],
					y = p2[props[1]] - p1[props[1]];

				return Math.sqrt((x * x) + (y * y));
			}

			/**
			 * calculate the angle between two coordinates
			 * @param {Object} p1
			 * @param {Object} p2
			 * @param {Array} [props] containing x and y keys
			 * @return {Number} angle
			 */
			function getAngle(p1, p2, props) {
				if (!props) {
					props = PROPS_XY;
				}
				var x = p2[props[0]] - p1[props[0]],
					y = p2[props[1]] - p1[props[1]];
				return Math.atan2(y, x) * 180 / Math.PI;
			}

			/**
			 * calculate the rotation degrees between two pointersets
			 * @param {Array} start array of pointers
			 * @param {Array} end array of pointers
			 * @return {Number} rotation
			 */
			function getRotation(start, end) {
				return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);
			}

			/**
			 * calculate the scale factor between two pointersets
			 * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out
			 * @param {Array} start array of pointers
			 * @param {Array} end array of pointers
			 * @return {Number} scale
			 */
			function getScale(start, end) {
				return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
			}

			var MOUSE_INPUT_MAP = {
				mousedown: INPUT_START,
				mousemove: INPUT_MOVE,
				mouseup: INPUT_END
			};

			var MOUSE_ELEMENT_EVENTS = 'mousedown';
			var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';

			/**
			 * Mouse events input
			 * @constructor
			 * @extends Input
			 */
			function MouseInput() {
				this.evEl = MOUSE_ELEMENT_EVENTS;
				this.evWin = MOUSE_WINDOW_EVENTS;

				this.allow = true; // used by Input.TouchMouse to disable mouse events
				this.pressed = false; // mousedown state

				Input.apply(this, arguments);
			}

			inherit(MouseInput, Input, {
				/**
				 * handle mouse events
				 * @param {Object} ev
				 */
				handler: function MEhandler(ev) {
					var eventType = MOUSE_INPUT_MAP[ev.type];

					// on start we want to have the left mouse button down
					if (eventType & INPUT_START && ev.button === 0) {
						this.pressed = true;
					}

					if (eventType & INPUT_MOVE && ev.which !== 1) {
						eventType = INPUT_END;
					}

					// mouse must be down, and mouse events are allowed (see the TouchMouse input)
					if (!this.pressed || !this.allow) {
						return;
					}

					if (eventType & INPUT_END) {
						this.pressed = false;
					}

					this.callback(this.manager, eventType, {
						pointers: [ev],
						changedPointers: [ev],
						pointerType: INPUT_TYPE_MOUSE,
						srcEvent: ev
					});
				}
			});

			var POINTER_INPUT_MAP = {
				pointerdown: INPUT_START,
				pointermove: INPUT_MOVE,
				pointerup: INPUT_END,
				pointercancel: INPUT_CANCEL,
				pointerout: INPUT_CANCEL
			};

			// in IE10 the pointer types is defined as an enum
			var IE10_POINTER_TYPE_ENUM = {
				2: INPUT_TYPE_TOUCH,
				3: INPUT_TYPE_PEN,
				4: INPUT_TYPE_MOUSE,
				5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816
			};

			var POINTER_ELEMENT_EVENTS = 'pointerdown';
			var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';

			// IE10 has prefixed support, and case-sensitive
			if (window.MSPointerEvent) {
				POINTER_ELEMENT_EVENTS = 'MSPointerDown';
				POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
			}

			/**
			 * Pointer events input
			 * @constructor
			 * @extends Input
			 */
			function PointerEventInput() {
				this.evEl = POINTER_ELEMENT_EVENTS;
				this.evWin = POINTER_WINDOW_EVENTS;

				Input.apply(this, arguments);

				this.store = (this.manager.session.pointerEvents = []);
			}

			inherit(PointerEventInput, Input, {
				/**
				 * handle mouse events
				 * @param {Object} ev
				 */
				handler: function PEhandler(ev) {
					var store = this.store;
					var removePointer = false;

					var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
					var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
					var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;

					var isTouch = (pointerType == INPUT_TYPE_TOUCH);

					// get index of the event in the store
					var storeIndex = inArray(store, ev.pointerId, 'pointerId');

					// start and mouse must be down
					if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
						if (storeIndex < 0) {
							store.push(ev);
							storeIndex = store.length - 1;
						}
					} else if (eventType & (INPUT_END | INPUT_CANCEL)) {
						removePointer = true;
					}

					// it not found, so the pointer hasn't been down (so it's probably a hover)
					if (storeIndex < 0) {
						return;
					}

					// update the event in the store
					store[storeIndex] = ev;

					this.callback(this.manager, eventType, {
						pointers: store,
						changedPointers: [ev],
						pointerType: pointerType,
						srcEvent: ev
					});

					if (removePointer) {
						// remove from the store
						store.splice(storeIndex, 1);
					}
				}
			});

			var SINGLE_TOUCH_INPUT_MAP = {
				touchstart: INPUT_START,
				touchmove: INPUT_MOVE,
				touchend: INPUT_END,
				touchcancel: INPUT_CANCEL
			};

			var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
			var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';

			/**
			 * Touch events input
			 * @constructor
			 * @extends Input
			 */
			function SingleTouchInput() {
				this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
				this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
				this.started = false;

				Input.apply(this, arguments);
			}

			inherit(SingleTouchInput, Input, {
				handler: function TEhandler(ev) {
					var type = SINGLE_TOUCH_INPUT_MAP[ev.type];

					// should we handle the touch events?
					if (type === INPUT_START) {
						this.started = true;
					}

					if (!this.started) {
						return;
					}

					var touches = normalizeSingleTouches.call(this, ev, type);

					// when done, reset the started state
					if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
						this.started = false;
					}

					this.callback(this.manager, type, {
						pointers: touches[0],
						changedPointers: touches[1],
						pointerType: INPUT_TYPE_TOUCH,
						srcEvent: ev
					});
				}
			});

			/**
			 * @this {TouchInput}
			 * @param {Object} ev
			 * @param {Number} type flag
			 * @returns {undefined|Array} [all, changed]
			 */
			function normalizeSingleTouches(ev, type) {
				var all = toArray(ev.touches);
				var changed = toArray(ev.changedTouches);

				if (type & (INPUT_END | INPUT_CANCEL)) {
					all = uniqueArray(all.concat(changed), 'identifier', true);
				}

				return [all, changed];
			}

			var TOUCH_INPUT_MAP = {
				touchstart: INPUT_START,
				touchmove: INPUT_MOVE,
				touchend: INPUT_END,
				touchcancel: INPUT_CANCEL
			};

			var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';

			/**
			 * Multi-user touch events input
			 * @constructor
			 * @extends Input
			 */
			function TouchInput() {
				this.evTarget = TOUCH_TARGET_EVENTS;
				this.targetIds = {};

				Input.apply(this, arguments);
			}

			inherit(TouchInput, Input, {
				handler: function MTEhandler(ev) {
					var type = TOUCH_INPUT_MAP[ev.type];
					var touches = getTouches.call(this, ev, type);
					if (!touches) {
						return;
					}

					this.callback(this.manager, type, {
						pointers: touches[0],
						changedPointers: touches[1],
						pointerType: INPUT_TYPE_TOUCH,
						srcEvent: ev
					});
				}
			});

			/**
			 * @this {TouchInput}
			 * @param {Object} ev
			 * @param {Number} type flag
			 * @returns {undefined|Array} [all, changed]
			 */
			function getTouches(ev, type) {
				var allTouches = toArray(ev.touches);
				var targetIds = this.targetIds;

				// when there is only one touch, the process can be simplified
				if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
					targetIds[allTouches[0].identifier] = true;
					return [allTouches, allTouches];
				}

				var i,
					targetTouches,
					changedTouches = toArray(ev.changedTouches),
					changedTargetTouches = [],
					target = this.target;

				// get target touches from touches
				targetTouches = allTouches.filter(function(touch) {
					return hasParent(touch.target, target);
				});

				// collect touches
				if (type === INPUT_START) {
					i = 0;
					while (i < targetTouches.length) {
						targetIds[targetTouches[i].identifier] = true;
						i++;
					}
				}

				// filter changed touches to only contain touches that exist in the collected target ids
				i = 0;
				while (i < changedTouches.length) {
					if (targetIds[changedTouches[i].identifier]) {
						changedTargetTouches.push(changedTouches[i]);
					}

					// cleanup removed touches
					if (type & (INPUT_END | INPUT_CANCEL)) {
						delete targetIds[changedTouches[i].identifier];
					}
					i++;
				}

				if (!changedTargetTouches.length) {
					return;
				}

				return [
					// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'
					uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),
					changedTargetTouches
				];
			}

			/**
			 * Combined touch and mouse input
			 *
			 * Touch has a higher priority then mouse, and while touching no mouse events are allowed.
			 * This because touch devices also emit mouse events while doing a touch.
			 *
			 * @constructor
			 * @extends Input
			 */
			function TouchMouseInput() {
				Input.apply(this, arguments);

				var handler = bindFn(this.handler, this);
				this.touch = new TouchInput(this.manager, handler);
				this.mouse = new MouseInput(this.manager, handler);
			}

			inherit(TouchMouseInput, Input, {
				/**
				 * handle mouse and touch events
				 * @param {Hammer} manager
				 * @param {String} inputEvent
				 * @param {Object} inputData
				 */
				handler: function TMEhandler(manager, inputEvent, inputData) {
					var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),
						isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);

					// when we're in a touch event, so  block all upcoming mouse events
					// most mobile browser also emit mouseevents, right after touchstart
					if (isTouch) {
						this.mouse.allow = false;
					} else if (isMouse && !this.mouse.allow) {
						return;
					}

					// reset the allowMouse when we're done
					if (inputEvent & (INPUT_END | INPUT_CANCEL)) {
						this.mouse.allow = true;
					}

					this.callback(manager, inputEvent, inputData);
				},

				/**
				 * remove the event listeners
				 */
				destroy: function destroy() {
					this.touch.destroy();
					this.mouse.destroy();
				}
			});

			var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
			var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;

			// magical touchAction value
			var TOUCH_ACTION_COMPUTE = 'compute';
			var TOUCH_ACTION_AUTO = 'auto';
			var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented
			var TOUCH_ACTION_NONE = 'none';
			var TOUCH_ACTION_PAN_X = 'pan-x';
			var TOUCH_ACTION_PAN_Y = 'pan-y';

			/**
			 * Touch Action
			 * sets the touchAction property or uses the js alternative
			 * @param {Manager} manager
			 * @param {String} value
			 * @constructor
			 */
			function TouchAction(manager, value) {
				this.manager = manager;
				this.set(value);
			}

			TouchAction.prototype = {
				/**
				 * set the touchAction value on the element or enable the polyfill
				 * @param {String} value
				 */
				set: function(value) {
					// find out the touch-action by the event handlers
					if (value == TOUCH_ACTION_COMPUTE) {
						value = this.compute();
					}

					if (NATIVE_TOUCH_ACTION) {
						this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
					}
					this.actions = value.toLowerCase().trim();
				},

				/**
				 * just re-set the touchAction value
				 */
				update: function() {
					this.set(this.manager.options.touchAction);
				},

				/**
				 * compute the value for the touchAction property based on the recognizer's settings
				 * @returns {String} value
				 */
				compute: function() {
					var actions = [];
					each(this.manager.recognizers, function(recognizer) {
						if (boolOrFn(recognizer.options.enable, [recognizer])) {
							actions = actions.concat(recognizer.getTouchAction());
						}
					});
					return cleanTouchActions(actions.join(' '));
				},

				/**
				 * this method is called on each input cycle and provides the preventing of the browser behavior
				 * @param {Object} input
				 */
				preventDefaults: function(input) {
					// not needed with native support for the touchAction property
					if (NATIVE_TOUCH_ACTION) {
						return;
					}

					var srcEvent = input.srcEvent;
					var direction = input.offsetDirection;

					// if the touch action did prevented once this session
					if (this.manager.session.prevented) {
						srcEvent.preventDefault();
						return;
					}

					var actions = this.actions;
					var hasNone = inStr(actions, TOUCH_ACTION_NONE);
					var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
					var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);

					if (hasNone ||
						(hasPanY && direction & DIRECTION_HORIZONTAL) ||
						(hasPanX && direction & DIRECTION_VERTICAL)) {
						return this.preventSrc(srcEvent);
					}
				},

				/**
				 * call preventDefault to prevent the browser's default behavior (scrolling in most cases)
				 * @param {Object} srcEvent
				 */
				preventSrc: function(srcEvent) {
					this.manager.session.prevented = true;
					srcEvent.preventDefault();
				}
			};

			/**
			 * when the touchActions are collected they are not a valid value, so we need to clean things up. *
			 * @param {String} actions
			 * @returns {*}
			 */
			function cleanTouchActions(actions) {
				// none
				if (inStr(actions, TOUCH_ACTION_NONE)) {
					return TOUCH_ACTION_NONE;
				}

				var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
				var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);

				// pan-x and pan-y can be combined
				if (hasPanX && hasPanY) {
					return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;
				}

				// pan-x OR pan-y
				if (hasPanX || hasPanY) {
					return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
				}

				// manipulation
				if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
					return TOUCH_ACTION_MANIPULATION;
				}

				return TOUCH_ACTION_AUTO;
			}

			/**
			 * Recognizer flow explained; *
			 * All recognizers have the initial state of POSSIBLE when a input session starts.
			 * The definition of a input session is from the first input until the last input, with all it's movement in it. *
			 * Example session for mouse-input: mousedown -> mousemove -> mouseup
			 *
			 * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed
			 * which determines with state it should be.
			 *
			 * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to
			 * POSSIBLE to give it another change on the next cycle.
			 *
			 *               Possible
			 *                  |
			 *            +-----+---------------+
			 *            |                     |
			 *      +-----+-----+               |
			 *      |           |               |
			 *   Failed      Cancelled          |
			 *                          +-------+------+
			 *                          |              |
			 *                      Recognized       Began
			 *                                         |
			 *                                      Changed
			 *                                         |
			 *                                  Ended/Recognized
			 */
			var STATE_POSSIBLE = 1;
			var STATE_BEGAN = 2;
			var STATE_CHANGED = 4;
			var STATE_ENDED = 8;
			var STATE_RECOGNIZED = STATE_ENDED;
			var STATE_CANCELLED = 16;
			var STATE_FAILED = 32;

			/**
			 * Recognizer
			 * Every recognizer needs to extend from this class.
			 * @constructor
			 * @param {Object} options
			 */
			function Recognizer(options) {
				this.id = uniqueId();

				this.manager = null;
				this.options = merge(options || {}, this.defaults);

				// default is enable true
				this.options.enable = ifUndefined(this.options.enable, true);

				this.state = STATE_POSSIBLE;

				this.simultaneous = {};
				this.requireFail = [];
			}

			Recognizer.prototype = {
				/**
				 * @virtual
				 * @type {Object}
				 */
				defaults: {},

				/**
				 * set options
				 * @param {Object} options
				 * @return {Recognizer}
				 */
				set: function(options) {
					extend(this.options, options);

					// also update the touchAction, in case something changed about the directions/enabled state
					this.manager && this.manager.touchAction.update();
					return this;
				},

				/**
				 * recognize simultaneous with an other recognizer.
				 * @param {Recognizer} otherRecognizer
				 * @returns {Recognizer} this
				 */
				recognizeWith: function(otherRecognizer) {
					if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
						return this;
					}

					var simultaneous = this.simultaneous;
					otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
					if (!simultaneous[otherRecognizer.id]) {
						simultaneous[otherRecognizer.id] = otherRecognizer;
						otherRecognizer.recognizeWith(this);
					}
					return this;
				},

				/**
				 * drop the simultaneous link. it doesnt remove the link on the other recognizer.
				 * @param {Recognizer} otherRecognizer
				 * @returns {Recognizer} this
				 */
				dropRecognizeWith: function(otherRecognizer) {
					if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
						return this;
					}

					otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
					delete this.simultaneous[otherRecognizer.id];
					return this;
				},

				/**
				 * recognizer can only run when an other is failing
				 * @param {Recognizer} otherRecognizer
				 * @returns {Recognizer} this
				 */
				requireFailure: function(otherRecognizer) {
					if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
						return this;
					}

					var requireFail = this.requireFail;
					otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
					if (inArray(requireFail, otherRecognizer) === -1) {
						requireFail.push(otherRecognizer);
						otherRecognizer.requireFailure(this);
					}
					return this;
				},

				/**
				 * drop the requireFailure link. it does not remove the link on the other recognizer.
				 * @param {Recognizer} otherRecognizer
				 * @returns {Recognizer} this
				 */
				dropRequireFailure: function(otherRecognizer) {
					if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
						return this;
					}

					otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
					var index = inArray(this.requireFail, otherRecognizer);
					if (index > -1) {
						this.requireFail.splice(index, 1);
					}
					return this;
				},

				/**
				 * has require failures boolean
				 * @returns {boolean}
				 */
				hasRequireFailures: function() {
					return this.requireFail.length > 0;
				},

				/**
				 * if the recognizer can recognize simultaneous with an other recognizer
				 * @param {Recognizer} otherRecognizer
				 * @returns {Boolean}
				 */
				canRecognizeWith: function(otherRecognizer) {
					return !!this.simultaneous[otherRecognizer.id];
				},

				/**
				 * You should use `tryEmit` instead of `emit` directly to check
				 * that all the needed recognizers has failed before emitting.
				 * @param {Object} input
				 */
				emit: function(input) {
					var self = this;
					var state = this.state;

					function emit(withState) {
						self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);
					}

					// 'panstart' and 'panmove'
					if (state < STATE_ENDED) {
						emit(true);
					}

					emit(); // simple 'eventName' events

					// panend and pancancel
					if (state >= STATE_ENDED) {
						emit(true);
					}
				},

				/**
				 * Check that all the require failure recognizers has failed,
				 * if true, it emits a gesture event,
				 * otherwise, setup the state to FAILED.
				 * @param {Object} input
				 */
				tryEmit: function(input) {
					if (this.canEmit()) {
						return this.emit(input);
					}
					// it's failing anyway
					this.state = STATE_FAILED;
				},

				/**
				 * can we emit?
				 * @returns {boolean}
				 */
				canEmit: function() {
					var i = 0;
					while (i < this.requireFail.length) {
						if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
							return false;
						}
						i++;
					}
					return true;
				},

				/**
				 * update the recognizer
				 * @param {Object} inputData
				 */
				recognize: function(inputData) {
					// make a new copy of the inputData
					// so we can change the inputData without messing up the other recognizers
					var inputDataClone = extend({}, inputData);

					// is is enabled and allow recognizing?
					if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
						this.reset();
						this.state = STATE_FAILED;
						return;
					}

					// reset when we've reached the end
					if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
						this.state = STATE_POSSIBLE;
					}

					this.state = this.process(inputDataClone);

					// the recognizer has recognized a gesture
					// so trigger an event
					if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
						this.tryEmit(inputDataClone);
					}
				},

				/**
				 * return the state of the recognizer
				 * the actual recognizing happens in this method
				 * @virtual
				 * @param {Object} inputData
				 * @returns {Const} STATE
				 */
				process: function(inputData) { }, // jshint ignore:line

				/**
				 * return the preferred touch-action
				 * @virtual
				 * @returns {Array}
				 */
				getTouchAction: function() { },

				/**
				 * called when the gesture isn't allowed to recognize
				 * like when another is being recognized or it is disabled
				 * @virtual
				 */
				reset: function() { }
			};

			/**
			 * get a usable string, used as event postfix
			 * @param {Const} state
			 * @returns {String} state
			 */
			function stateStr(state) {
				if (state & STATE_CANCELLED) {
					return 'cancel';
				} else if (state & STATE_ENDED) {
					return 'end';
				} else if (state & STATE_CHANGED) {
					return 'move';
				} else if (state & STATE_BEGAN) {
					return 'start';
				}
				return '';
			}

			/**
			 * direction cons to string
			 * @param {Const} direction
			 * @returns {String}
			 */
			function directionStr(direction) {
				if (direction == DIRECTION_DOWN) {
					return 'down';
				} else if (direction == DIRECTION_UP) {
					return 'up';
				} else if (direction == DIRECTION_LEFT) {
					return 'left';
				} else if (direction == DIRECTION_RIGHT) {
					return 'right';
				}
				return '';
			}

			/**
			 * get a recognizer by name if it is bound to a manager
			 * @param {Recognizer|String} otherRecognizer
			 * @param {Recognizer} recognizer
			 * @returns {Recognizer}
			 */
			function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
				var manager = recognizer.manager;
				if (manager) {
					return manager.get(otherRecognizer);
				}
				return otherRecognizer;
			}

			/**
			 * This recognizer is just used as a base for the simple attribute recognizers.
			 * @constructor
			 * @extends Recognizer
			 */
			function AttrRecognizer() {
				Recognizer.apply(this, arguments);
			}

			inherit(AttrRecognizer, Recognizer, {
				/**
				 * @namespace
				 * @memberof AttrRecognizer
				 */
				defaults: {
					/**
					 * @type {Number}
					 * @default 1
					 */
					pointers: 1
				},

				/**
				 * Used to check if it the recognizer receives valid input, like input.distance > 10.
				 * @memberof AttrRecognizer
				 * @param {Object} input
				 * @returns {Boolean} recognized
				 */
				attrTest: function(input) {
					var optionPointers = this.options.pointers;
					return optionPointers === 0 || input.pointers.length === optionPointers;
				},

				/**
				 * Process the input and return the state for the recognizer
				 * @memberof AttrRecognizer
				 * @param {Object} input
				 * @returns {*} State
				 */
				process: function(input) {
					var state = this.state;
					var eventType = input.eventType;

					var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
					var isValid = this.attrTest(input);

					// on cancel input and we've recognized before, return STATE_CANCELLED
					if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
						return state | STATE_CANCELLED;
					} else if (isRecognized || isValid) {
						if (eventType & INPUT_END) {
							return state | STATE_ENDED;
						} else if (!(state & STATE_BEGAN)) {
							return STATE_BEGAN;
						}
						return state | STATE_CHANGED;
					}
					return STATE_FAILED;
				}
			});

			/**
			 * Pan
			 * Recognized when the pointer is down and moved in the allowed direction.
			 * @constructor
			 * @extends AttrRecognizer
			 */
			function PanRecognizer() {
				AttrRecognizer.apply(this, arguments);

				this.pX = null;
				this.pY = null;
			}

			inherit(PanRecognizer, AttrRecognizer, {
				/**
				 * @namespace
				 * @memberof PanRecognizer
				 */
				defaults: {
					event: 'pan',
					threshold: 10,
					pointers: 1,
					direction: DIRECTION_ALL
				},

				getTouchAction: function() {
					var direction = this.options.direction;
					var actions = [];
					if (direction & DIRECTION_HORIZONTAL) {
						actions.push(TOUCH_ACTION_PAN_Y);
					}
					if (direction & DIRECTION_VERTICAL) {
						actions.push(TOUCH_ACTION_PAN_X);
					}
					return actions;
				},

				directionTest: function(input) {
					var options = this.options;
					var hasMoved = true;
					var distance = input.distance;
					var direction = input.direction;
					var x = input.deltaX;
					var y = input.deltaY;

					// lock to axis?
					if (!(direction & options.direction)) {
						if (options.direction & DIRECTION_HORIZONTAL) {
							direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;
							hasMoved = x != this.pX;
							distance = Math.abs(input.deltaX);
						} else {
							direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;
							hasMoved = y != this.pY;
							distance = Math.abs(input.deltaY);
						}
					}
					input.direction = direction;
					return hasMoved && distance > options.threshold && direction & options.direction;
				},

				attrTest: function(input) {
					return AttrRecognizer.prototype.attrTest.call(this, input) &&
						(this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));
				},

				emit: function(input) {
					this.pX = input.deltaX;
					this.pY = input.deltaY;

					var direction = directionStr(input.direction);
					if (direction) {
						this.manager.emit(this.options.event + direction, input);
					}

					this._super.emit.call(this, input);
				}
			});

			/**
			 * Pinch
			 * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).
			 * @constructor
			 * @extends AttrRecognizer
			 */
			function PinchRecognizer() {
				AttrRecognizer.apply(this, arguments);
			}

			inherit(PinchRecognizer, AttrRecognizer, {
				/**
				 * @namespace
				 * @memberof PinchRecognizer
				 */
				defaults: {
					event: 'pinch',
					threshold: 0,
					pointers: 2
				},

				getTouchAction: function() {
					return [TOUCH_ACTION_NONE];
				},

				attrTest: function(input) {
					return this._super.attrTest.call(this, input) &&
						(Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
				},

				emit: function(input) {
					this._super.emit.call(this, input);
					if (input.scale !== 1) {
						var inOut = input.scale < 1 ? 'in' : 'out';
						this.manager.emit(this.options.event + inOut, input);
					}
				}
			});

			/**
			 * Press
			 * Recognized when the pointer is down for x ms without any movement.
			 * @constructor
			 * @extends Recognizer
			 */
			function PressRecognizer() {
				Recognizer.apply(this, arguments);

				this._timer = null;
				this._input = null;
			}

			inherit(PressRecognizer, Recognizer, {
				/**
				 * @namespace
				 * @memberof PressRecognizer
				 */
				defaults: {
					event: 'press',
					pointers: 1,
					time: 500, // minimal time of the pointer to be pressed
					threshold: 5 // a minimal movement is ok, but keep it low
				},

				getTouchAction: function() {
					return [TOUCH_ACTION_AUTO];
				},

				process: function(input) {
					var options = this.options;
					var validPointers = input.pointers.length === options.pointers;
					var validMovement = input.distance < options.threshold;
					var validTime = input.deltaTime > options.time;

					this._input = input;

					// we only allow little movement
					// and we've reached an end event, so a tap is possible
					if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {
						this.reset();
					} else if (input.eventType & INPUT_START) {
						this.reset();
						this._timer = setTimeoutContext(function() {
							this.state = STATE_RECOGNIZED;
							this.tryEmit();
						}, options.time, this);
					} else if (input.eventType & INPUT_END) {
						return STATE_RECOGNIZED;
					}
					return STATE_FAILED;
				},

				reset: function() {
					clearTimeout(this._timer);
				},

				emit: function(input) {
					if (this.state !== STATE_RECOGNIZED) {
						return;
					}

					if (input && (input.eventType & INPUT_END)) {
						this.manager.emit(this.options.event + 'up', input);
					} else {
						this._input.timeStamp = now();
						this.manager.emit(this.options.event, this._input);
					}
				}
			});

			/**
			 * Rotate
			 * Recognized when two or more pointer are moving in a circular motion.
			 * @constructor
			 * @extends AttrRecognizer
			 */
			function RotateRecognizer() {
				AttrRecognizer.apply(this, arguments);
			}

			inherit(RotateRecognizer, AttrRecognizer, {
				/**
				 * @namespace
				 * @memberof RotateRecognizer
				 */
				defaults: {
					event: 'rotate',
					threshold: 0,
					pointers: 2
				},

				getTouchAction: function() {
					return [TOUCH_ACTION_NONE];
				},

				attrTest: function(input) {
					return this._super.attrTest.call(this, input) &&
						(Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
				}
			});

			/**
			 * Swipe
			 * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.
			 * @constructor
			 * @extends AttrRecognizer
			 */
			function SwipeRecognizer() {
				AttrRecognizer.apply(this, arguments);
			}

			inherit(SwipeRecognizer, AttrRecognizer, {
				/**
				 * @namespace
				 * @memberof SwipeRecognizer
				 */
				defaults: {
					event: 'swipe',
					threshold: 10,
					velocity: 0.65,
					direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
					pointers: 1
				},

				getTouchAction: function() {
					return PanRecognizer.prototype.getTouchAction.call(this);
				},

				attrTest: function(input) {
					var direction = this.options.direction;
					var velocity;

					if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
						velocity = input.velocity;
					} else if (direction & DIRECTION_HORIZONTAL) {
						velocity = input.velocityX;
					} else if (direction & DIRECTION_VERTICAL) {
						velocity = input.velocityY;
					}

					return this._super.attrTest.call(this, input) &&
						direction & input.direction &&
						input.distance > this.options.threshold &&
						abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
				},

				emit: function(input) {
					var direction = directionStr(input.direction);
					if (direction) {
						this.manager.emit(this.options.event + direction, input);
					}

					this.manager.emit(this.options.event, input);
				}
			});

			/**
			 * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur
			 * between the given interval and position. The delay option can be used to recognize multi-taps without firing
			 * a single tap.
			 *
			 * The eventData from the emitted event contains the property `tapCount`, which contains the amount of
			 * multi-taps being recognized.
			 * @constructor
			 * @extends Recognizer
			 */
			function TapRecognizer() {
				Recognizer.apply(this, arguments);

				// previous time and center,
				// used for tap counting
				this.pTime = false;
				this.pCenter = false;

				this._timer = null;
				this._input = null;
				this.count = 0;
			}

			inherit(TapRecognizer, Recognizer, {
				/**
				 * @namespace
				 * @memberof PinchRecognizer
				 */
				defaults: {
					event: 'tap',
					pointers: 1,
					taps: 1,
					interval: 300, // max time between the multi-tap taps
					time: 250, // max time of the pointer to be down (like finger on the screen)
					threshold: 2, // a minimal movement is ok, but keep it low
					posThreshold: 10 // a multi-tap can be a bit off the initial position
				},

				getTouchAction: function() {
					return [TOUCH_ACTION_MANIPULATION];
				},

				process: function(input) {
					var options = this.options;

					var validPointers = input.pointers.length === options.pointers;
					var validMovement = input.distance < options.threshold;
					var validTouchTime = input.deltaTime < options.time;

					this.reset();

					if ((input.eventType & INPUT_START) && (this.count === 0)) {
						return this.failTimeout();
					}

					// we only allow little movement
					// and we've reached an end event, so a tap is possible
					if (validMovement && validTouchTime && validPointers) {
						if (input.eventType != INPUT_END) {
							return this.failTimeout();
						}

						var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;
						var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;

						this.pTime = input.timeStamp;
						this.pCenter = input.center;

						if (!validMultiTap || !validInterval) {
							this.count = 1;
						} else {
							this.count += 1;
						}

						this._input = input;

						// if tap count matches we have recognized it,
						// else it has began recognizing...
						var tapCount = this.count % options.taps;
						if (tapCount === 0) {
							// no failing requirements, immediately trigger the tap event
							// or wait as long as the multitap interval to trigger
							if (!this.hasRequireFailures()) {
								return STATE_RECOGNIZED;
							} else {
								this._timer = setTimeoutContext(function() {
									this.state = STATE_RECOGNIZED;
									this.tryEmit();
								}, options.interval, this);
								return STATE_BEGAN;
							}
						}
					}
					return STATE_FAILED;
				},

				failTimeout: function() {
					this._timer = setTimeoutContext(function() {
						this.state = STATE_FAILED;
					}, this.options.interval, this);
					return STATE_FAILED;
				},

				reset: function() {
					clearTimeout(this._timer);
				},

				emit: function() {
					if (this.state == STATE_RECOGNIZED ) {
						this._input.tapCount = this.count;
						this.manager.emit(this.options.event, this._input);
					}
				}
			});

			/**
			 * Simple way to create an manager with a default set of recognizers.
			 * @param {HTMLElement} element
			 * @param {Object} [options]
			 * @constructor
			 */
			function Hammer(element, options) {
				options = options || {};
				options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
				return new Manager(element, options);
			}

			/**
			 * @const {string}
			 */
			Hammer.VERSION = '2.0.4';

			/**
			 * default settings
			 * @namespace
			 */
			Hammer.defaults = {
				/**
				 * set if DOM events are being triggered.
				 * But this is slower and unused by simple implementations, so disabled by default.
				 * @type {Boolean}
				 * @default false
				 */
				domEvents: false,

				/**
				 * The value for the touchAction property/fallback.
				 * When set to `compute` it will magically set the correct value based on the added recognizers.
				 * @type {String}
				 * @default compute
				 */
				touchAction: TOUCH_ACTION_COMPUTE,

				/**
				 * @type {Boolean}
				 * @default true
				 */
				enable: true,

				/**
				 * EXPERIMENTAL FEATURE -- can be removed/changed
				 * Change the parent input target element.
				 * If Null, then it is being set the to main element.
				 * @type {Null|EventTarget}
				 * @default null
				 */
				inputTarget: null,

				/**
				 * force an input class
				 * @type {Null|Function}
				 * @default null
				 */
				inputClass: null,

				/**
				 * Default recognizer setup when calling `Hammer()`
				 * When creating a new Manager these will be skipped.
				 * @type {Array}
				 */
				preset: [
					// RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]
					[RotateRecognizer, { enable: false }],
					[PinchRecognizer, { enable: false }, ['rotate']],
					[SwipeRecognizer,{ direction: DIRECTION_HORIZONTAL }],
					[PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']],
					[TapRecognizer],
					[TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']],
					[PressRecognizer]
				],

				/**
				 * Some CSS properties can be used to improve the working of Hammer.
				 * Add them to this method and they will be set when creating a new Manager.
				 * @namespace
				 */
				cssProps: {
					/**
					 * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.
					 * @type {String}
					 * @default 'none'
					 */
					userSelect: 'none',

					/**
					 * Disable the Windows Phone grippers when pressing an element.
					 * @type {String}
					 * @default 'none'
					 */
					touchSelect: 'none',

					/**
					 * Disables the default callout shown when you touch and hold a touch target.
					 * On iOS, when you touch and hold a touch target such as a link, Safari displays
					 * a callout containing information about the link. This property allows you to disable that callout.
					 * @type {String}
					 * @default 'none'
					 */
					touchCallout: 'none',

					/**
					 * Specifies whether zooming is enabled. Used by IE10>
					 * @type {String}
					 * @default 'none'
					 */
					contentZooming: 'none',

					/**
					 * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.
					 * @type {String}
					 * @default 'none'
					 */
					userDrag: 'none',

					/**
					 * Overrides the highlight color shown when the user taps a link or a JavaScript
					 * clickable element in iOS. This property obeys the alpha value, if specified.
					 * @type {String}
					 * @default 'rgba(0,0,0,0)'
					 */
					tapHighlightColor: 'rgba(0,0,0,0)'
				}
			};

			var STOP = 1;
			var FORCED_STOP = 2;

			/**
			 * Manager
			 * @param {HTMLElement} element
			 * @param {Object} [options]
			 * @constructor
			 */
			function Manager(element, options) {
				options = options || {};

				this.options = merge(options, Hammer.defaults);
				this.options.inputTarget = this.options.inputTarget || element;

				this.handlers = {};
				this.session = {};
				this.recognizers = [];

				this.element = element;
				this.input = createInputInstance(this);
				this.touchAction = new TouchAction(this, this.options.touchAction);

				toggleCssProps(this, true);

				each(options.recognizers, function(item) {
					var recognizer = this.add(new (item[0])(item[1]));
					item[2] && recognizer.recognizeWith(item[2]);
					item[3] && recognizer.requireFailure(item[3]);
				}, this);
			}

			Manager.prototype = {
				/**
				 * set options
				 * @param {Object} options
				 * @returns {Manager}
				 */
				set: function(options) {
					extend(this.options, options);

					// Options that need a little more setup
					if (options.touchAction) {
						this.touchAction.update();
					}
					if (options.inputTarget) {
						// Clean up existing event listeners and reinitialize
						this.input.destroy();
						this.input.target = options.inputTarget;
						this.input.init();
					}
					return this;
				},

				/**
				 * stop recognizing for this session.
				 * This session will be discarded, when a new [input]start event is fired.
				 * When forced, the recognizer cycle is stopped immediately.
				 * @param {Boolean} [force]
				 */
				stop: function(force) {
					this.session.stopped = force ? FORCED_STOP : STOP;
				},

				/**
				 * run the recognizers!
				 * called by the inputHandler function on every movement of the pointers (touches)
				 * it walks through all the recognizers and tries to detect the gesture that is being made
				 * @param {Object} inputData
				 */
				recognize: function(inputData) {
					var session = this.session;
					if (session.stopped) {
						return;
					}

					// run the touch-action polyfill
					this.touchAction.preventDefaults(inputData);

					var recognizer;
					var recognizers = this.recognizers;

					// this holds the recognizer that is being recognized.
					// so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED
					// if no recognizer is detecting a thing, it is set to `null`
					var curRecognizer = session.curRecognizer;

					// reset when the last recognizer is recognized
					// or when we're in a new session
					if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {
						curRecognizer = session.curRecognizer = null;
					}

					var i = 0;
					while (i < recognizers.length) {
						recognizer = recognizers[i];

						// find out if we are allowed try to recognize the input for this one.
						// 1.   allow if the session is NOT forced stopped (see the .stop() method)
						// 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one
						//      that is being recognized.
						// 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.
						//      this can be setup with the `recognizeWith()` method on the recognizer.
						if (session.stopped !== FORCED_STOP && ( // 1
							!curRecognizer || recognizer == curRecognizer || // 2
							recognizer.canRecognizeWith(curRecognizer))) { // 3
							recognizer.recognize(inputData);
						} else {
							recognizer.reset();
						}

						// if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the
						// current active recognizer. but only if we don't already have an active recognizer
						if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
							curRecognizer = session.curRecognizer = recognizer;
						}
						i++;
					}
				},

				/**
				 * get a recognizer by its event name.
				 * @param {Recognizer|String} recognizer
				 * @returns {Recognizer|Null}
				 */
				get: function(recognizer) {
					if (recognizer instanceof Recognizer) {
						return recognizer;
					}

					var recognizers = this.recognizers;
					for (var i = 0; i < recognizers.length; i++) {
						if (recognizers[i].options.event == recognizer) {
							return recognizers[i];
						}
					}
					return null;
				},

				/**
				 * add a recognizer to the manager
				 * existing recognizers with the same event name will be removed
				 * @param {Recognizer} recognizer
				 * @returns {Recognizer|Manager}
				 */
				add: function(recognizer) {
					if (invokeArrayArg(recognizer, 'add', this)) {
						return this;
					}

					// remove existing
					var existing = this.get(recognizer.options.event);
					if (existing) {
						this.remove(existing);
					}

					this.recognizers.push(recognizer);
					recognizer.manager = this;

					this.touchAction.update();
					return recognizer;
				},

				/**
				 * remove a recognizer by name or instance
				 * @param {Recognizer|String} recognizer
				 * @returns {Manager}
				 */
				remove: function(recognizer) {
					if (invokeArrayArg(recognizer, 'remove', this)) {
						return this;
					}

					var recognizers = this.recognizers;
					recognizer = this.get(recognizer);
					recognizers.splice(inArray(recognizers, recognizer), 1);

					this.touchAction.update();
					return this;
				},

				/**
				 * bind event
				 * @param {String} events
				 * @param {Function} handler
				 * @returns {EventEmitter} this
				 */
				on: function(events, handler) {
					var handlers = this.handlers;
					each(splitStr(events), function(event) {
						handlers[event] = handlers[event] || [];
						handlers[event].push(handler);
					});
					return this;
				},

				/**
				 * unbind event, leave emit blank to remove all handlers
				 * @param {String} events
				 * @param {Function} [handler]
				 * @returns {EventEmitter} this
				 */
				off: function(events, handler) {
					var handlers = this.handlers;
					each(splitStr(events), function(event) {
						if (!handler) {
							delete handlers[event];
						} else {
							handlers[event].splice(inArray(handlers[event], handler), 1);
						}
					});
					return this;
				},

				/**
				 * emit event to the listeners
				 * @param {String} event
				 * @param {Object} data
				 */
				emit: function(event, data) {
					// we also want to trigger dom events
					if (this.options.domEvents) {
						triggerDomEvent(event, data);
					}

					// no handlers, so skip it all
					var handlers = this.handlers[event] && this.handlers[event].slice();
					if (!handlers || !handlers.length) {
						return;
					}

					data.type = event;
					data.preventDefault = function() {
						data.srcEvent.preventDefault();
					};

					var i = 0;
					while (i < handlers.length) {
						handlers[i](data);
						i++;
					}
				},

				/**
				 * destroy the manager and unbinds all events
				 * it doesn't unbind dom events, that is the user own responsibility
				 */
				destroy: function() {
					this.element && toggleCssProps(this, false);

					this.handlers = {};
					this.session = {};
					this.input.destroy();
					this.element = null;
				}
			};

			/**
			 * add/remove the css properties as defined in manager.options.cssProps
			 * @param {Manager} manager
			 * @param {Boolean} add
			 */
			function toggleCssProps(manager, add) {
				var element = manager.element;
				each(manager.options.cssProps, function(value, name) {
					element.style[prefixed(element.style, name)] = add ? value : '';
				});
			}

			/**
			 * trigger dom event
			 * @param {String} event
			 * @param {Object} data
			 */
			function triggerDomEvent(event, data) {
				var gestureEvent = document.createEvent('Event');
				gestureEvent.initEvent(event, true, true);
				gestureEvent.gesture = data;
				data.target.dispatchEvent(gestureEvent);
			}

			extend(Hammer, {
				INPUT_START: INPUT_START,
				INPUT_MOVE: INPUT_MOVE,
				INPUT_END: INPUT_END,
				INPUT_CANCEL: INPUT_CANCEL,

				STATE_POSSIBLE: STATE_POSSIBLE,
				STATE_BEGAN: STATE_BEGAN,
				STATE_CHANGED: STATE_CHANGED,
				STATE_ENDED: STATE_ENDED,
				STATE_RECOGNIZED: STATE_RECOGNIZED,
				STATE_CANCELLED: STATE_CANCELLED,
				STATE_FAILED: STATE_FAILED,

				DIRECTION_NONE: DIRECTION_NONE,
				DIRECTION_LEFT: DIRECTION_LEFT,
				DIRECTION_RIGHT: DIRECTION_RIGHT,
				DIRECTION_UP: DIRECTION_UP,
				DIRECTION_DOWN: DIRECTION_DOWN,
				DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
				DIRECTION_VERTICAL: DIRECTION_VERTICAL,
				DIRECTION_ALL: DIRECTION_ALL,

				Manager: Manager,
				Input: Input,
				TouchAction: TouchAction,

				TouchInput: TouchInput,
				MouseInput: MouseInput,
				PointerEventInput: PointerEventInput,
				TouchMouseInput: TouchMouseInput,
				SingleTouchInput: SingleTouchInput,

				Recognizer: Recognizer,
				AttrRecognizer: AttrRecognizer,
				Tap: TapRecognizer,
				Pan: PanRecognizer,
				Swipe: SwipeRecognizer,
				Pinch: PinchRecognizer,
				Rotate: RotateRecognizer,
				Press: PressRecognizer,

				on: addEventListeners,
				off: removeEventListeners,
				each: each,
				merge: merge,
				extend: extend,
				inherit: inherit,
				bindFn: bindFn,
				prefixed: prefixed
			});

			if ("function" == TYPE_FUNCTION && __webpack_require__(8)) {
				!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
					return Hammer;
				}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else if (typeof module != 'undefined' && module.exports) {
				module.exports = Hammer;
			} else {
				window[exportName] = Hammer;
			}

		})(window, document, 'Hammer');


		/***/ },
	/* 8 */
	/***/ function(module, exports) {

		/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;

			/* WEBPACK VAR INJECTION */}.call(exports, {}))

		/***/ },
	/* 9 */
	/***/ function(module, exports) {

		'use strict';

		var style = document.createElement('p').style,
			prefixes = 'O ms Moz webkit'.split(' '),
			hasPrefix = /^(o|ms|moz|webkit)/,
			upper = /([A-Z])/g,
			memo = {};

		function get(key){
			return (key in memo) ? memo[key] : memo[key] = prefix(key);
		}

		function prefix(key){
			var capitalizedKey = key.replace(/-([a-z])/g, function(s, match){
					return match.toUpperCase();
				}),
				i = prefixes.length,
				name;

			if (style[capitalizedKey] !== undefined) return capitalizedKey;

			capitalizedKey = capitalize(key);

			while (i--) {
				name = prefixes[i] + capitalizedKey;
				if (style[name] !== undefined) return name;
			}

			throw new Error('unable to prefix ' + key);
		}

		function capitalize(str){
			return str.charAt(0).toUpperCase() + str.slice(1);
		}

		function dashedPrefix(key){
			var prefixedKey = get(key),
				upper = /([A-Z])/g;

			if (upper.test(prefixedKey)) {
				prefixedKey = (hasPrefix.test(prefixedKey) ? '-' : '') + prefixedKey.replace(upper, '-$1');
			}

			return prefixedKey.toLowerCase();
		}

		module.exports = get;
		module.exports.dash = dashedPrefix;


		/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, '__esModule', {
			value: true
		});

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

		var _lodashArrayRemove = __webpack_require__(43);

		var _lodashArrayRemove2 = _interopRequireDefault(_lodashArrayRemove);

		var _lodashObjectAssign = __webpack_require__(19);

		var _lodashObjectAssign2 = _interopRequireDefault(_lodashObjectAssign);

		var _lodashNumberRandom = __webpack_require__(41);

		var _lodashNumberRandom2 = _interopRequireDefault(_lodashNumberRandom);

		var _lodashCollectionFind = __webpack_require__(68);

		var _lodashCollectionFind2 = _interopRequireDefault(_lodashCollectionFind);

		var _lodashCollectionWhere = __webpack_require__(77);

		var _lodashCollectionWhere2 = _interopRequireDefault(_lodashCollectionWhere);

		var util = undefined;

		util = {};

		util.remove = _lodashArrayRemove2['default'];
		util.assign = _lodashObjectAssign2['default'];
		util.random = _lodashNumberRandom2['default'];
		util.find = _lodashCollectionFind2['default'];
		util.where = _lodashCollectionWhere2['default'];

		/**
		 * Return direct children elements.
		 *
		 * @see http://stackoverflow.com/a/27102446/368691
		 * @param {HTMLElement} element
		 * @return {Array}
		 */
		util.elementChildren = function (element) {
			return util.where(element.childNodes, {
				nodeType: 1
			});
		};

		/**
		 * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886
		 * @return {Boolean}
		 */
		util.isTouchDevice = function () {
			return 'ontouchstart' in window || navigator.msMaxTouchPoints;
		};

		exports['default'] = util;
		module.exports = exports['default'];

		/***/ },
	/* 11 */,
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {

		var now = __webpack_require__(13)
			, global = typeof window === 'undefined' ? {} : window
			, vendors = ['moz', 'webkit']
			, suffix = 'AnimationFrame'
			, raf = global['request' + suffix]
			, caf = global['cancel' + suffix] || global['cancelRequest' + suffix]

		for(var i = 0; i < vendors.length && !raf; i++) {
			raf = global[vendors[i] + 'Request' + suffix]
			caf = global[vendors[i] + 'Cancel' + suffix]
			|| global[vendors[i] + 'CancelRequest' + suffix]
		}

		// Some versions of FF have rAF but not cAF
		if(!raf || !caf) {
			var last = 0
				, id = 0
				, queue = []
				, frameDuration = 1000 / 60

			raf = function(callback) {
				if(queue.length === 0) {
					var _now = now()
						, next = Math.max(0, frameDuration - (_now - last))
					last = next + _now
					setTimeout(function() {
						var cp = queue.slice(0)
						// Clear queue here to prevent
						// callbacks from appending listeners
						// to the current frame's queue
						queue.length = 0
						for(var i = 0; i < cp.length; i++) {
							if(!cp[i].cancelled) {
								try{
									cp[i].callback(last)
								} catch(e) {
									setTimeout(function() { throw e }, 0)
								}
							}
						}
					}, Math.round(next))
				}
				queue.push({
					handle: ++id,
					callback: callback,
					cancelled: false
				})
				return id
			}

			caf = function(handle) {
				for(var i = 0; i < queue.length; i++) {
					if(queue[i].handle === handle) {
						queue[i].cancelled = true
					}
				}
			}
		}

		module.exports = function(fn) {
			// Wrap in a new function to prevent
			// `cancel` potentially being assigned
			// to the native rAF function
			return raf.call(global, fn)
		}
		module.exports.cancel = function() {
			caf.apply(global, arguments)
		}


		/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
			(function() {
				var getNanoSeconds, hrtime, loadTime;

				if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
					module.exports = function() {
						return performance.now();
					};
				} else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
					module.exports = function() {
						return (getNanoSeconds() - loadTime) / 1e6;
					};
					hrtime = process.hrtime;
					getNanoSeconds = function() {
						var hr;
						hr = hrtime();
						return hr[0] * 1e9 + hr[1];
					};
					loadTime = getNanoSeconds();
				} else if (Date.now) {
					module.exports = function() {
						return Date.now() - loadTime;
					};
					loadTime = Date.now();
				} else {
					module.exports = function() {
						return new Date().getTime() - loadTime;
					};
					loadTime = new Date().getTime();
				}

			}).call(this);

			/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

		/***/ },
	/* 14 */,
	/* 15 */,
	/* 16 */,
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {

		var identity = __webpack_require__(18);

		/**
		 * A specialized version of `baseCallback` which only supports `this` binding
		 * and specifying the number of arguments to provide to `func`.
		 *
		 * @private
		 * @param {Function} func The function to bind.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {number} [argCount] The number of arguments to provide to `func`.
		 * @returns {Function} Returns the callback.
		 */
		function bindCallback(func, thisArg, argCount) {
			if (typeof func != 'function') {
				return identity;
			}
			if (thisArg === undefined) {
				return func;
			}
			switch (argCount) {
				case 1: return function(value) {
					return func.call(thisArg, value);
				};
				case 3: return function(value, index, collection) {
					return func.call(thisArg, value, index, collection);
				};
				case 4: return function(accumulator, value, index, collection) {
					return func.call(thisArg, accumulator, value, index, collection);
				};
				case 5: return function(value, other, key, object, source) {
					return func.call(thisArg, value, other, key, object, source);
				};
			}
			return function() {
				return func.apply(thisArg, arguments);
			};
		}

		module.exports = bindCallback;


		/***/ },
	/* 18 */
	/***/ function(module, exports) {

		/**
		 * This method returns the first argument provided to it.
		 *
		 * @static
		 * @memberOf _
		 * @category Utility
		 * @param {*} value Any value.
		 * @returns {*} Returns `value`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 *
		 * _.identity(object) === object;
		 * // => true
		 */
		function identity(value) {
			return value;
		}

		module.exports = identity;


		/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {

		var assignWith = __webpack_require__(20),
			baseAssign = __webpack_require__(36),
			createAssigner = __webpack_require__(38);

		/**
		 * Assigns own enumerable properties of source object(s) to the destination
		 * object. Subsequent sources overwrite property assignments of previous sources.
		 * If `customizer` is provided it's invoked to produce the assigned values.
		 * The `customizer` is bound to `thisArg` and invoked with five arguments:
		 * (objectValue, sourceValue, key, object, source).
		 *
		 * **Note:** This method mutates `object` and is based on
		 * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).
		 *
		 * @static
		 * @memberOf _
		 * @alias extend
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @param {Function} [customizer] The function to customize assigned values.
		 * @param {*} [thisArg] The `this` binding of `customizer`.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });
		 * // => { 'user': 'fred', 'age': 40 }
		 *
		 * // using a customizer callback
		 * var defaults = _.partialRight(_.assign, function(value, other) {
	 *   return _.isUndefined(value) ? other : value;
	 * });
		 *
		 * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
		 * // => { 'user': 'barney', 'age': 36 }
		 */
		var assign = createAssigner(function(object, source, customizer) {
			return customizer
				? assignWith(object, source, customizer)
				: baseAssign(object, source);
		});

		module.exports = assign;


		/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {

		var keys = __webpack_require__(21);

		/**
		 * A specialized version of `_.assign` for customizing assigned values without
		 * support for argument juggling, multiple sources, and `this` binding `customizer`
		 * functions.
		 *
		 * @private
		 * @param {Object} object The destination object.
		 * @param {Object} source The source object.
		 * @param {Function} customizer The function to customize assigned values.
		 * @returns {Object} Returns `object`.
		 */
		function assignWith(object, source, customizer) {
			var index = -1,
				props = keys(source),
				length = props.length;

			while (++index < length) {
				var key = props[index],
					value = object[key],
					result = customizer(value, source[key], key, object, source);

				if ((result === result ? (result !== value) : (value === value)) ||
					(value === undefined && !(key in object))) {
					object[key] = result;
				}
			}
			return object;
		}

		module.exports = assignWith;


		/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(22),
			isArrayLike = __webpack_require__(27),
			isObject = __webpack_require__(25),
			shimKeys = __webpack_require__(31);

		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeKeys = getNative(Object, 'keys');

		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		var keys = !nativeKeys ? shimKeys : function(object) {
			var Ctor = object == null ? undefined : object.constructor;
			if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
				(typeof object != 'function' && isArrayLike(object))) {
				return shimKeys(object);
			}
			return isObject(object) ? nativeKeys(object) : [];
		};

		module.exports = keys;


		/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {

		var isNative = __webpack_require__(23);

		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
			var value = object == null ? undefined : object[key];
			return isNative(value) ? value : undefined;
		}

		module.exports = getNative;


		/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(24),
			isObjectLike = __webpack_require__(26);

		/** Used to detect host constructors (Safari > 5). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to resolve the decompiled source of functions. */
		var fnToString = Function.prototype.toString;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
			fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
				.replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);

		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
			if (value == null) {
				return false;
			}
			if (isFunction(value)) {
				return reIsNative.test(fnToString.call(value));
			}
			return isObjectLike(value) && reIsHostCtor.test(value);
		}

		module.exports = isNative;


		/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(25);

		/** `Object#toString` result references. */
		var funcTag = '[object Function]';

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;

		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
			// The use of `Object#toString` avoids issues with the `typeof` operator
			// in older versions of Chrome and Safari which return 'function' for regexes
			// and Safari 8 which returns 'object' for typed array constructors.
			return isObject(value) && objToString.call(value) == funcTag;
		}

		module.exports = isFunction;


		/***/ },
	/* 25 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(1);
		 * // => false
		 */
		function isObject(value) {
			// Avoid a V8 JIT bug in Chrome 19-20.
			// See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
			var type = typeof value;
			return !!value && (type == 'object' || type == 'function');
		}

		module.exports = isObject;


		/***/ },
	/* 26 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is object-like.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 */
		function isObjectLike(value) {
			return !!value && typeof value == 'object';
		}

		module.exports = isObjectLike;


		/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {

		var getLength = __webpack_require__(28),
			isLength = __webpack_require__(30);

		/**
		 * Checks if `value` is array-like.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 */
		function isArrayLike(value) {
			return value != null && isLength(getLength(value));
		}

		module.exports = isArrayLike;


		/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(29);

		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
		 * that affects Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');

		module.exports = getLength;


		/***/ },
	/* 29 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
			return function(object) {
				return object == null ? undefined : object[key];
			};
		}

		module.exports = baseProperty;


		/***/ },
	/* 30 */
	/***/ function(module, exports) {

		/**
		 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
		 * of an array-like value.
		 */
		var MAX_SAFE_INTEGER = 9007199254740991;

		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 */
		function isLength(value) {
			return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}

		module.exports = isLength;


		/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {

		var isArguments = __webpack_require__(32),
			isArray = __webpack_require__(33),
			isIndex = __webpack_require__(34),
			isLength = __webpack_require__(30),
			keysIn = __webpack_require__(35);

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/**
		 * A fallback implementation of `Object.keys` which creates an array of the
		 * own enumerable property names of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function shimKeys(object) {
			var props = keysIn(object),
				propsLength = props.length,
				length = propsLength && object.length;

			var allowIndexes = !!length && isLength(length) &&
				(isArray(object) || isArguments(object));

			var index = -1,
				result = [];

			while (++index < propsLength) {
				var key = props[index];
				if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
					result.push(key);
				}
			}
			return result;
		}

		module.exports = shimKeys;


		/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(27),
			isObjectLike = __webpack_require__(26);

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/** Native method references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;

		/**
		 * Checks if `value` is classified as an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		function isArguments(value) {
			return isObjectLike(value) && isArrayLike(value) &&
				hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
		}

		module.exports = isArguments;


		/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(22),
			isLength = __webpack_require__(30),
			isObjectLike = __webpack_require__(26);

		/** `Object#toString` result references. */
		var arrayTag = '[object Array]';

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;

		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeIsArray = getNative(Array, 'isArray');

		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(function() { return arguments; }());
		 * // => false
		 */
		var isArray = nativeIsArray || function(value) {
				return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
			};

		module.exports = isArray;


		/***/ },
	/* 34 */
	/***/ function(module, exports) {

		/** Used to detect unsigned integer values. */
		var reIsUint = /^\d+$/;

		/**
		 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
		 * of an array-like value.
		 */
		var MAX_SAFE_INTEGER = 9007199254740991;

		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
			value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
			length = length == null ? MAX_SAFE_INTEGER : length;
			return value > -1 && value % 1 == 0 && value < length;
		}

		module.exports = isIndex;


		/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {

		var isArguments = __webpack_require__(32),
			isArray = __webpack_require__(33),
			isIndex = __webpack_require__(34),
			isLength = __webpack_require__(30),
			isObject = __webpack_require__(25);

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/**
		 * Creates an array of the own and inherited enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keysIn(new Foo);
		 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		 */
		function keysIn(object) {
			if (object == null) {
				return [];
			}
			if (!isObject(object)) {
				object = Object(object);
			}
			var length = object.length;
			length = (length && isLength(length) &&
			(isArray(object) || isArguments(object)) && length) || 0;

			var Ctor = object.constructor,
				index = -1,
				isProto = typeof Ctor == 'function' && Ctor.prototype === object,
				result = Array(length),
				skipIndexes = length > 0;

			while (++index < length) {
				result[index] = (index + '');
			}
			for (var key in object) {
				if (!(skipIndexes && isIndex(key, length)) &&
					!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
					result.push(key);
				}
			}
			return result;
		}

		module.exports = keysIn;


		/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCopy = __webpack_require__(37),
			keys = __webpack_require__(21);

		/**
		 * The base implementation of `_.assign` without support for argument juggling,
		 * multiple sources, and `customizer` functions.
		 *
		 * @private
		 * @param {Object} object The destination object.
		 * @param {Object} source The source object.
		 * @returns {Object} Returns `object`.
		 */
		function baseAssign(object, source) {
			return source == null
				? object
				: baseCopy(source, keys(source), object);
		}

		module.exports = baseAssign;


		/***/ },
	/* 37 */
	/***/ function(module, exports) {

		/**
		 * Copies properties of `source` to `object`.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property names to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @returns {Object} Returns `object`.
		 */
		function baseCopy(source, props, object) {
			object || (object = {});

			var index = -1,
				length = props.length;

			while (++index < length) {
				var key = props[index];
				object[key] = source[key];
			}
			return object;
		}

		module.exports = baseCopy;


		/***/ },
	/* 38 */
	/***/ function(module, exports, __webpack_require__) {

		var bindCallback = __webpack_require__(17),
			isIterateeCall = __webpack_require__(39),
			restParam = __webpack_require__(40);

		/**
		 * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
		 *
		 * @private
		 * @param {Function} assigner The function to assign values.
		 * @returns {Function} Returns the new assigner function.
		 */
		function createAssigner(assigner) {
			return restParam(function(object, sources) {
				var index = -1,
					length = object == null ? 0 : sources.length,
					customizer = length > 2 ? sources[length - 2] : undefined,
					guard = length > 2 ? sources[2] : undefined,
					thisArg = length > 1 ? sources[length - 1] : undefined;

				if (typeof customizer == 'function') {
					customizer = bindCallback(customizer, thisArg, 5);
					length -= 2;
				} else {
					customizer = typeof thisArg == 'function' ? thisArg : undefined;
					length -= (customizer ? 1 : 0);
				}
				if (guard && isIterateeCall(sources[0], sources[1], guard)) {
					customizer = length < 3 ? undefined : customizer;
					length = 1;
				}
				while (++index < length) {
					var source = sources[index];
					if (source) {
						assigner(object, source, customizer);
					}
				}
				return object;
			});
		}

		module.exports = createAssigner;


		/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(27),
			isIndex = __webpack_require__(34),
			isObject = __webpack_require__(25);

		/**
		 * Checks if the provided arguments are from an iteratee call.
		 *
		 * @private
		 * @param {*} value The potential iteratee value argument.
		 * @param {*} index The potential iteratee index or key argument.
		 * @param {*} object The potential iteratee object argument.
		 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
		 */
		function isIterateeCall(value, index, object) {
			if (!isObject(object)) {
				return false;
			}
			var type = typeof index;
			if (type == 'number'
					? (isArrayLike(object) && isIndex(index, object.length))
					: (type == 'string' && index in object)) {
				var other = object[index];
				return value === value ? (value === other) : (other !== other);
			}
			return false;
		}

		module.exports = isIterateeCall;


		/***/ },
	/* 40 */
	/***/ function(module, exports) {

		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';

		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;

		/**
		 * Creates a function that invokes `func` with the `this` binding of the
		 * created function and arguments from `start` and beyond provided as an array.
		 *
		 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).
		 *
		 * @static
		 * @memberOf _
		 * @category Function
		 * @param {Function} func The function to apply a rest parameter to.
		 * @param {number} [start=func.length-1] The start position of the rest parameter.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var say = _.restParam(function(what, names) {
	 *   return what + ' ' + _.initial(names).join(', ') +
	 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
	 * });
		 *
		 * say('hello', 'fred', 'barney', 'pebbles');
		 * // => 'hello fred, barney, & pebbles'
		 */
		function restParam(func, start) {
			if (typeof func != 'function') {
				throw new TypeError(FUNC_ERROR_TEXT);
			}
			start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
			return function() {
				var args = arguments,
					index = -1,
					length = nativeMax(args.length - start, 0),
					rest = Array(length);

				while (++index < length) {
					rest[index] = args[start + index];
				}
				switch (start) {
					case 0: return func.call(this, rest);
					case 1: return func.call(this, args[0], rest);
					case 2: return func.call(this, args[0], args[1], rest);
				}
				var otherArgs = Array(start + 1);
				index = -1;
				while (++index < start) {
					otherArgs[index] = args[index];
				}
				otherArgs[start] = rest;
				return func.apply(this, otherArgs);
			};
		}

		module.exports = restParam;


		/***/ },
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {

		var baseRandom = __webpack_require__(42),
			isIterateeCall = __webpack_require__(39);

		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeMin = Math.min,
			nativeRandom = Math.random;

		/**
		 * Produces a random number between `min` and `max` (inclusive). If only one
		 * argument is provided a number between `0` and the given number is returned.
		 * If `floating` is `true`, or either `min` or `max` are floats, a floating-point
		 * number is returned instead of an integer.
		 *
		 * @static
		 * @memberOf _
		 * @category Number
		 * @param {number} [min=0] The minimum possible value.
		 * @param {number} [max=1] The maximum possible value.
		 * @param {boolean} [floating] Specify returning a floating-point number.
		 * @returns {number} Returns the random number.
		 * @example
		 *
		 * _.random(0, 5);
		 * // => an integer between 0 and 5
		 *
		 * _.random(5);
		 * // => also an integer between 0 and 5
		 *
		 * _.random(5, true);
		 * // => a floating-point number between 0 and 5
		 *
		 * _.random(1.2, 5.2);
		 * // => a floating-point number between 1.2 and 5.2
		 */
		function random(min, max, floating) {
			if (floating && isIterateeCall(min, max, floating)) {
				max = floating = undefined;
			}
			var noMin = min == null,
				noMax = max == null;

			if (floating == null) {
				if (noMax && typeof min == 'boolean') {
					floating = min;
					min = 1;
				}
				else if (typeof max == 'boolean') {
					floating = max;
					noMax = true;
				}
			}
			if (noMin && noMax) {
				max = 1;
				noMax = false;
			}
			min = +min || 0;
			if (noMax) {
				max = min;
				min = 0;
			} else {
				max = +max || 0;
			}
			if (floating || min % 1 || max % 1) {
				var rand = nativeRandom();
				return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);
			}
			return baseRandom(min, max);
		}

		module.exports = random;


		/***/ },
	/* 42 */
	/***/ function(module, exports) {

		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeFloor = Math.floor,
			nativeRandom = Math.random;

		/**
		 * The base implementation of `_.random` without support for argument juggling
		 * and returning floating-point numbers.
		 *
		 * @private
		 * @param {number} min The minimum possible value.
		 * @param {number} max The maximum possible value.
		 * @returns {number} Returns the random number.
		 */
		function baseRandom(min, max) {
			return min + nativeFloor(nativeRandom() * (max - min + 1));
		}

		module.exports = baseRandom;


		/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCallback = __webpack_require__(44),
			basePullAt = __webpack_require__(67);

		/**
		 * Removes all elements from `array` that `predicate` returns truthy for
		 * and returns an array of the removed elements. The predicate is bound to
		 * `thisArg` and invoked with three arguments: (value, index, array).
		 *
		 * If a property name is provided for `predicate` the created `_.property`
		 * style callback returns the property value of the given element.
		 *
		 * If a value is also provided for `thisArg` the created `_.matchesProperty`
		 * style callback returns `true` for elements that have a matching property
		 * value, else `false`.
		 *
		 * If an object is provided for `predicate` the created `_.matches` style
		 * callback returns `true` for elements that have the properties of the given
		 * object, else `false`.
		 *
		 * **Note:** Unlike `_.filter`, this method mutates `array`.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to modify.
		 * @param {Function|Object|string} [predicate=_.identity] The function invoked
		 *  per iteration.
		 * @param {*} [thisArg] The `this` binding of `predicate`.
		 * @returns {Array} Returns the new array of removed elements.
		 * @example
		 *
		 * var array = [1, 2, 3, 4];
		 * var evens = _.remove(array, function(n) {
	 *   return n % 2 == 0;
	 * });
		 *
		 * console.log(array);
		 * // => [1, 3]
		 *
		 * console.log(evens);
		 * // => [2, 4]
		 */
		function remove(array, predicate, thisArg) {
			var result = [];
			if (!(array && array.length)) {
				return result;
			}
			var index = -1,
				indexes = [],
				length = array.length;

			predicate = baseCallback(predicate, thisArg, 3);
			while (++index < length) {
				var value = array[index];
				if (predicate(value, index, array)) {
					result.push(value);
					indexes.push(index);
				}
			}
			basePullAt(array, indexes);
			return result;
		}

		module.exports = remove;


		/***/ },
	/* 44 */
	/***/ function(module, exports, __webpack_require__) {

		var baseMatches = __webpack_require__(45),
			baseMatchesProperty = __webpack_require__(58),
			bindCallback = __webpack_require__(17),
			identity = __webpack_require__(18),
			property = __webpack_require__(65);

		/**
		 * The base implementation of `_.callback` which supports specifying the
		 * number of arguments to provide to `func`.
		 *
		 * @private
		 * @param {*} [func=_.identity] The value to convert to a callback.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {number} [argCount] The number of arguments to provide to `func`.
		 * @returns {Function} Returns the callback.
		 */
		function baseCallback(func, thisArg, argCount) {
			var type = typeof func;
			if (type == 'function') {
				return thisArg === undefined
					? func
					: bindCallback(func, thisArg, argCount);
			}
			if (func == null) {
				return identity;
			}
			if (type == 'object') {
				return baseMatches(func);
			}
			return thisArg === undefined
				? property(func)
				: baseMatchesProperty(func, thisArg);
		}

		module.exports = baseCallback;


		/***/ },
	/* 45 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsMatch = __webpack_require__(46),
			getMatchData = __webpack_require__(55),
			toObject = __webpack_require__(54);

		/**
		 * The base implementation of `_.matches` which does not clone `source`.
		 *
		 * @private
		 * @param {Object} source The object of property values to match.
		 * @returns {Function} Returns the new function.
		 */
		function baseMatches(source) {
			var matchData = getMatchData(source);
			if (matchData.length == 1 && matchData[0][2]) {
				var key = matchData[0][0],
					value = matchData[0][1];

				return function(object) {
					if (object == null) {
						return false;
					}
					return object[key] === value && (value !== undefined || (key in toObject(object)));
				};
			}
			return function(object) {
				return baseIsMatch(object, matchData);
			};
		}

		module.exports = baseMatches;


		/***/ },
	/* 46 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsEqual = __webpack_require__(47),
			toObject = __webpack_require__(54);

		/**
		 * The base implementation of `_.isMatch` without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Object} object The object to inspect.
		 * @param {Array} matchData The propery names, values, and compare flags to match.
		 * @param {Function} [customizer] The function to customize comparing objects.
		 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		 */
		function baseIsMatch(object, matchData, customizer) {
			var index = matchData.length,
				length = index,
				noCustomizer = !customizer;

			if (object == null) {
				return !length;
			}
			object = toObject(object);
			while (index--) {
				var data = matchData[index];
				if ((noCustomizer && data[2])
						? data[1] !== object[data[0]]
						: !(data[0] in object)
				) {
					return false;
				}
			}
			while (++index < length) {
				data = matchData[index];
				var key = data[0],
					objValue = object[key],
					srcValue = data[1];

				if (noCustomizer && data[2]) {
					if (objValue === undefined && !(key in object)) {
						return false;
					}
				} else {
					var result = customizer ? customizer(objValue, srcValue, key) : undefined;
					if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
						return false;
					}
				}
			}
			return true;
		}

		module.exports = baseIsMatch;


		/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsEqualDeep = __webpack_require__(48),
			isObject = __webpack_require__(25),
			isObjectLike = __webpack_require__(26);

		/**
		 * The base implementation of `_.isEqual` without support for `this` binding
		 * `customizer` functions.
		 *
		 * @private
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @param {Function} [customizer] The function to customize comparing values.
		 * @param {boolean} [isLoose] Specify performing partial comparisons.
		 * @param {Array} [stackA] Tracks traversed `value` objects.
		 * @param {Array} [stackB] Tracks traversed `other` objects.
		 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		 */
		function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
			if (value === other) {
				return true;
			}
			if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
				return value !== value && other !== other;
			}
			return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
		}

		module.exports = baseIsEqual;


		/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {

		var equalArrays = __webpack_require__(49),
			equalByTag = __webpack_require__(51),
			equalObjects = __webpack_require__(52),
			isArray = __webpack_require__(33),
			isTypedArray = __webpack_require__(53);

		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
			arrayTag = '[object Array]',
			objectTag = '[object Object]';

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;

		/**
		 * A specialized version of `baseIsEqual` for arrays and objects which performs
		 * deep comparisons and tracks traversed objects enabling objects with circular
		 * references to be compared.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} [customizer] The function to customize comparing objects.
		 * @param {boolean} [isLoose] Specify performing partial comparisons.
		 * @param {Array} [stackA=[]] Tracks traversed `value` objects.
		 * @param {Array} [stackB=[]] Tracks traversed `other` objects.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
			var objIsArr = isArray(object),
				othIsArr = isArray(other),
				objTag = arrayTag,
				othTag = arrayTag;

			if (!objIsArr) {
				objTag = objToString.call(object);
				if (objTag == argsTag) {
					objTag = objectTag;
				} else if (objTag != objectTag) {
					objIsArr = isTypedArray(object);
				}
			}
			if (!othIsArr) {
				othTag = objToString.call(other);
				if (othTag == argsTag) {
					othTag = objectTag;
				} else if (othTag != objectTag) {
					othIsArr = isTypedArray(other);
				}
			}
			var objIsObj = objTag == objectTag,
				othIsObj = othTag == objectTag,
				isSameTag = objTag == othTag;

			if (isSameTag && !(objIsArr || objIsObj)) {
				return equalByTag(object, other, objTag);
			}
			if (!isLoose) {
				var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
					othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

				if (objIsWrapped || othIsWrapped) {
					return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
				}
			}
			if (!isSameTag) {
				return false;
			}
			// Assume cyclic values are equal.
			// For more information on detecting circular references see https://es5.github.io/#JO.
			stackA || (stackA = []);
			stackB || (stackB = []);

			var length = stackA.length;
			while (length--) {
				if (stackA[length] == object) {
					return stackB[length] == other;
				}
			}
			// Add `object` and `other` to the stack of traversed objects.
			stackA.push(object);
			stackB.push(other);

			var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

			stackA.pop();
			stackB.pop();

			return result;
		}

		module.exports = baseIsEqualDeep;


		/***/ },
	/* 49 */
	/***/ function(module, exports, __webpack_require__) {

		var arraySome = __webpack_require__(50);

		/**
		 * A specialized version of `baseIsEqualDeep` for arrays with support for
		 * partial deep comparisons.
		 *
		 * @private
		 * @param {Array} array The array to compare.
		 * @param {Array} other The other array to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} [customizer] The function to customize comparing arrays.
		 * @param {boolean} [isLoose] Specify performing partial comparisons.
		 * @param {Array} [stackA] Tracks traversed `value` objects.
		 * @param {Array} [stackB] Tracks traversed `other` objects.
		 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
		 */
		function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
			var index = -1,
				arrLength = array.length,
				othLength = other.length;

			if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
				return false;
			}
			// Ignore non-index properties.
			while (++index < arrLength) {
				var arrValue = array[index],
					othValue = other[index],
					result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;

				if (result !== undefined) {
					if (result) {
						continue;
					}
					return false;
				}
				// Recursively compare arrays (susceptible to call stack limits).
				if (isLoose) {
					if (!arraySome(other, function(othValue) {
							return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
						})) {
						return false;
					}
				} else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
					return false;
				}
			}
			return true;
		}

		module.exports = equalArrays;


		/***/ },
	/* 50 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.some` for arrays without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} predicate The function invoked per iteration.
		 * @returns {boolean} Returns `true` if any element passes the predicate check,
		 *  else `false`.
		 */
		function arraySome(array, predicate) {
			var index = -1,
				length = array.length;

			while (++index < length) {
				if (predicate(array[index], index, array)) {
					return true;
				}
			}
			return false;
		}

		module.exports = arraySome;


		/***/ },
	/* 51 */
	/***/ function(module, exports) {

		/** `Object#toString` result references. */
		var boolTag = '[object Boolean]',
			dateTag = '[object Date]',
			errorTag = '[object Error]',
			numberTag = '[object Number]',
			regexpTag = '[object RegExp]',
			stringTag = '[object String]';

		/**
		 * A specialized version of `baseIsEqualDeep` for comparing objects of
		 * the same `toStringTag`.
		 *
		 * **Note:** This function only supports comparing values with tags of
		 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {string} tag The `toStringTag` of the objects to compare.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function equalByTag(object, other, tag) {
			switch (tag) {
				case boolTag:
				case dateTag:
					// Coerce dates and booleans to numbers, dates to milliseconds and booleans
					// to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
					return +object == +other;

				case errorTag:
					return object.name == other.name && object.message == other.message;

				case numberTag:
					// Treat `NaN` vs. `NaN` as equal.
					return (object != +object)
						? other != +other
						: object == +other;

				case regexpTag:
				case stringTag:
					// Coerce regexes to strings and treat strings primitives and string
					// objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
					return object == (other + '');
			}
			return false;
		}

		module.exports = equalByTag;


		/***/ },
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {

		var keys = __webpack_require__(21);

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;

		/**
		 * A specialized version of `baseIsEqualDeep` for objects with support for
		 * partial deep comparisons.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} [customizer] The function to customize comparing values.
		 * @param {boolean} [isLoose] Specify performing partial comparisons.
		 * @param {Array} [stackA] Tracks traversed `value` objects.
		 * @param {Array} [stackB] Tracks traversed `other` objects.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
			var objProps = keys(object),
				objLength = objProps.length,
				othProps = keys(other),
				othLength = othProps.length;

			if (objLength != othLength && !isLoose) {
				return false;
			}
			var index = objLength;
			while (index--) {
				var key = objProps[index];
				if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
					return false;
				}
			}
			var skipCtor = isLoose;
			while (++index < objLength) {
				key = objProps[index];
				var objValue = object[key],
					othValue = other[key],
					result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;

				// Recursively compare objects (susceptible to call stack limits).
				if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
					return false;
				}
				skipCtor || (skipCtor = key == 'constructor');
			}
			if (!skipCtor) {
				var objCtor = object.constructor,
					othCtor = other.constructor;

				// Non `Object` object instances with different constructors are not equal.
				if (objCtor != othCtor &&
					('constructor' in object && 'constructor' in other) &&
					!(typeof objCtor == 'function' && objCtor instanceof objCtor &&
					typeof othCtor == 'function' && othCtor instanceof othCtor)) {
					return false;
				}
			}
			return true;
		}

		module.exports = equalObjects;


		/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {

		var isLength = __webpack_require__(30),
			isObjectLike = __webpack_require__(26);

		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
			arrayTag = '[object Array]',
			boolTag = '[object Boolean]',
			dateTag = '[object Date]',
			errorTag = '[object Error]',
			funcTag = '[object Function]',
			mapTag = '[object Map]',
			numberTag = '[object Number]',
			objectTag = '[object Object]',
			regexpTag = '[object RegExp]',
			setTag = '[object Set]',
			stringTag = '[object String]',
			weakMapTag = '[object WeakMap]';

		var arrayBufferTag = '[object ArrayBuffer]',
			float32Tag = '[object Float32Array]',
			float64Tag = '[object Float64Array]',
			int8Tag = '[object Int8Array]',
			int16Tag = '[object Int16Array]',
			int32Tag = '[object Int32Array]',
			uint8Tag = '[object Uint8Array]',
			uint8ClampedTag = '[object Uint8ClampedArray]',
			uint16Tag = '[object Uint16Array]',
			uint32Tag = '[object Uint32Array]';

		/** Used to identify `toStringTag` values of typed arrays. */
		var typedArrayTags = {};
		typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
			typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
				typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
					typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
						typedArrayTags[uint32Tag] = true;
		typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
			typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
				typedArrayTags[dateTag] = typedArrayTags[errorTag] =
					typedArrayTags[funcTag] = typedArrayTags[mapTag] =
						typedArrayTags[numberTag] = typedArrayTags[objectTag] =
							typedArrayTags[regexpTag] = typedArrayTags[setTag] =
								typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

		/** Used for native method references. */
		var objectProto = Object.prototype;

		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;

		/**
		 * Checks if `value` is classified as a typed array.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isTypedArray(new Uint8Array);
		 * // => true
		 *
		 * _.isTypedArray([]);
		 * // => false
		 */
		function isTypedArray(value) {
			return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
		}

		module.exports = isTypedArray;


		/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(25);

		/**
		 * Converts `value` to an object if it's not one.
		 *
		 * @private
		 * @param {*} value The value to process.
		 * @returns {Object} Returns the object.
		 */
		function toObject(value) {
			return isObject(value) ? value : Object(value);
		}

		module.exports = toObject;


		/***/ },
	/* 55 */
	/***/ function(module, exports, __webpack_require__) {

		var isStrictComparable = __webpack_require__(56),
			pairs = __webpack_require__(57);

		/**
		 * Gets the propery names, values, and compare flags of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the match data of `object`.
		 */
		function getMatchData(object) {
			var result = pairs(object),
				length = result.length;

			while (length--) {
				result[length][2] = isStrictComparable(result[length][1]);
			}
			return result;
		}

		module.exports = getMatchData;


		/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(25);

		/**
		 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` if suitable for strict
		 *  equality comparisons, else `false`.
		 */
		function isStrictComparable(value) {
			return value === value && !isObject(value);
		}

		module.exports = isStrictComparable;


		/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {

		var keys = __webpack_require__(21),
			toObject = __webpack_require__(54);

		/**
		 * Creates a two dimensional array of the key-value pairs for `object`,
		 * e.g. `[[key1, value1], [key2, value2]]`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the new array of key-value pairs.
		 * @example
		 *
		 * _.pairs({ 'barney': 36, 'fred': 40 });
		 * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)
		 */
		function pairs(object) {
			object = toObject(object);

			var index = -1,
				props = keys(object),
				length = props.length,
				result = Array(length);

			while (++index < length) {
				var key = props[index];
				result[index] = [key, object[key]];
			}
			return result;
		}

		module.exports = pairs;


		/***/ },
	/* 58 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGet = __webpack_require__(59),
			baseIsEqual = __webpack_require__(47),
			baseSlice = __webpack_require__(60),
			isArray = __webpack_require__(33),
			isKey = __webpack_require__(61),
			isStrictComparable = __webpack_require__(56),
			last = __webpack_require__(62),
			toObject = __webpack_require__(54),
			toPath = __webpack_require__(63);

		/**
		 * The base implementation of `_.matchesProperty` which does not clone `srcValue`.
		 *
		 * @private
		 * @param {string} path The path of the property to get.
		 * @param {*} srcValue The value to compare.
		 * @returns {Function} Returns the new function.
		 */
		function baseMatchesProperty(path, srcValue) {
			var isArr = isArray(path),
				isCommon = isKey(path) && isStrictComparable(srcValue),
				pathKey = (path + '');

			path = toPath(path);
			return function(object) {
				if (object == null) {
					return false;
				}
				var key = pathKey;
				object = toObject(object);
				if ((isArr || !isCommon) && !(key in object)) {
					object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
					if (object == null) {
						return false;
					}
					key = last(path);
					object = toObject(object);
				}
				return object[key] === srcValue
					? (srcValue !== undefined || (key in object))
					: baseIsEqual(srcValue, object[key], undefined, true);
			};
		}

		module.exports = baseMatchesProperty;


		/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {

		var toObject = __webpack_require__(54);

		/**
		 * The base implementation of `get` without support for string paths
		 * and default values.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array} path The path of the property to get.
		 * @param {string} [pathKey] The key representation of path.
		 * @returns {*} Returns the resolved value.
		 */
		function baseGet(object, path, pathKey) {
			if (object == null) {
				return;
			}
			if (pathKey !== undefined && pathKey in toObject(object)) {
				path = [pathKey];
			}
			var index = 0,
				length = path.length;

			while (object != null && index < length) {
				object = object[path[index++]];
			}
			return (index && index == length) ? object : undefined;
		}

		module.exports = baseGet;


		/***/ },
	/* 60 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.slice` without an iteratee call guard.
		 *
		 * @private
		 * @param {Array} array The array to slice.
		 * @param {number} [start=0] The start position.
		 * @param {number} [end=array.length] The end position.
		 * @returns {Array} Returns the slice of `array`.
		 */
		function baseSlice(array, start, end) {
			var index = -1,
				length = array.length;

			start = start == null ? 0 : (+start || 0);
			if (start < 0) {
				start = -start > length ? 0 : (length + start);
			}
			end = (end === undefined || end > length) ? length : (+end || 0);
			if (end < 0) {
				end += length;
			}
			length = start > end ? 0 : ((end - start) >>> 0);
			start >>>= 0;

			var result = Array(length);
			while (++index < length) {
				result[index] = array[index + start];
			}
			return result;
		}

		module.exports = baseSlice;


		/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(33),
			toObject = __webpack_require__(54);

		/** Used to match property names within property paths. */
		var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
			reIsPlainProp = /^\w*$/;

		/**
		 * Checks if `value` is a property name and not a property path.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {Object} [object] The object to query keys on.
		 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		 */
		function isKey(value, object) {
			var type = typeof value;
			if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {
				return true;
			}
			if (isArray(value)) {
				return false;
			}
			var result = !reIsDeepProp.test(value);
			return result || (object != null && value in toObject(object));
		}

		module.exports = isKey;


		/***/ },
	/* 62 */
	/***/ function(module, exports) {

		/**
		 * Gets the last element of `array`.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to query.
		 * @returns {*} Returns the last element of `array`.
		 * @example
		 *
		 * _.last([1, 2, 3]);
		 * // => 3
		 */
		function last(array) {
			var length = array ? array.length : 0;
			return length ? array[length - 1] : undefined;
		}

		module.exports = last;


		/***/ },
	/* 63 */
	/***/ function(module, exports, __webpack_require__) {

		var baseToString = __webpack_require__(64),
			isArray = __webpack_require__(33);

		/** Used to match property names within property paths. */
		var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;

		/** Used to match backslashes in property paths. */
		var reEscapeChar = /\\(\\)?/g;

		/**
		 * Converts `value` to property path array if it's not one.
		 *
		 * @private
		 * @param {*} value The value to process.
		 * @returns {Array} Returns the property path array.
		 */
		function toPath(value) {
			if (isArray(value)) {
				return value;
			}
			var result = [];
			baseToString(value).replace(rePropName, function(match, number, quote, string) {
				result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
			});
			return result;
		}

		module.exports = toPath;


		/***/ },
	/* 64 */
	/***/ function(module, exports) {

		/**
		 * Converts `value` to a string if it's not one. An empty string is returned
		 * for `null` or `undefined` values.
		 *
		 * @private
		 * @param {*} value The value to process.
		 * @returns {string} Returns the string.
		 */
		function baseToString(value) {
			return value == null ? '' : (value + '');
		}

		module.exports = baseToString;


		/***/ },
	/* 65 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(29),
			basePropertyDeep = __webpack_require__(66),
			isKey = __webpack_require__(61);

		/**
		 * Creates a function that returns the property value at `path` on a
		 * given object.
		 *
		 * @static
		 * @memberOf _
		 * @category Utility
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var objects = [
		 *   { 'a': { 'b': { 'c': 2 } } },
		 *   { 'a': { 'b': { 'c': 1 } } }
		 * ];
		 *
		 * _.map(objects, _.property('a.b.c'));
		 * // => [2, 1]
		 *
		 * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
		 * // => [1, 2]
		 */
		function property(path) {
			return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
		}

		module.exports = property;


		/***/ },
	/* 66 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGet = __webpack_require__(59),
			toPath = __webpack_require__(63);

		/**
		 * A specialized version of `baseProperty` which supports deep paths.
		 *
		 * @private
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function basePropertyDeep(path) {
			var pathKey = (path + '');
			path = toPath(path);
			return function(object) {
				return baseGet(object, path, pathKey);
			};
		}

		module.exports = basePropertyDeep;


		/***/ },
	/* 67 */
	/***/ function(module, exports, __webpack_require__) {

		var isIndex = __webpack_require__(34);

		/** Used for native method references. */
		var arrayProto = Array.prototype;

		/** Native method references. */
		var splice = arrayProto.splice;

		/**
		 * The base implementation of `_.pullAt` without support for individual
		 * index arguments and capturing the removed elements.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {number[]} indexes The indexes of elements to remove.
		 * @returns {Array} Returns `array`.
		 */
		function basePullAt(array, indexes) {
			var length = array ? indexes.length : 0;
			while (length--) {
				var index = indexes[length];
				if (index != previous && isIndex(index)) {
					var previous = index;
					splice.call(array, index, 1);
				}
			}
			return array;
		}

		module.exports = basePullAt;


		/***/ },
	/* 68 */
	/***/ function(module, exports, __webpack_require__) {

		var baseEach = __webpack_require__(69),
			createFind = __webpack_require__(74);

		/**
		 * Iterates over elements of `collection`, returning the first element
		 * `predicate` returns truthy for. The predicate is bound to `thisArg` and
		 * invoked with three arguments: (value, index|key, collection).
		 *
		 * If a property name is provided for `predicate` the created `_.property`
		 * style callback returns the property value of the given element.
		 *
		 * If a value is also provided for `thisArg` the created `_.matchesProperty`
		 * style callback returns `true` for elements that have a matching property
		 * value, else `false`.
		 *
		 * If an object is provided for `predicate` the created `_.matches` style
		 * callback returns `true` for elements that have the properties of the given
		 * object, else `false`.
		 *
		 * @static
		 * @memberOf _
		 * @alias detect
		 * @category Collection
		 * @param {Array|Object|string} collection The collection to search.
		 * @param {Function|Object|string} [predicate=_.identity] The function invoked
		 *  per iteration.
		 * @param {*} [thisArg] The `this` binding of `predicate`.
		 * @returns {*} Returns the matched element, else `undefined`.
		 * @example
		 *
		 * var users = [
		 *   { 'user': 'barney',  'age': 36, 'active': true },
		 *   { 'user': 'fred',    'age': 40, 'active': false },
		 *   { 'user': 'pebbles', 'age': 1,  'active': true }
		 * ];
		 *
		 * _.result(_.find(users, function(chr) {
	 *   return chr.age < 40;
	 * }), 'user');
		 * // => 'barney'
		 *
		 * // using the `_.matches` callback shorthand
		 * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');
		 * // => 'pebbles'
		 *
		 * // using the `_.matchesProperty` callback shorthand
		 * _.result(_.find(users, 'active', false), 'user');
		 * // => 'fred'
		 *
		 * // using the `_.property` callback shorthand
		 * _.result(_.find(users, 'active'), 'user');
		 * // => 'barney'
		 */
		var find = createFind(baseEach);

		module.exports = find;


		/***/ },
	/* 69 */
	/***/ function(module, exports, __webpack_require__) {

		var baseForOwn = __webpack_require__(70),
			createBaseEach = __webpack_require__(73);

		/**
		 * The base implementation of `_.forEach` without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Array|Object|string} collection The collection to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array|Object|string} Returns `collection`.
		 */
		var baseEach = createBaseEach(baseForOwn);

		module.exports = baseEach;


		/***/ },
	/* 70 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFor = __webpack_require__(71),
			keys = __webpack_require__(21);

		/**
		 * The base implementation of `_.forOwn` without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Object} Returns `object`.
		 */
		function baseForOwn(object, iteratee) {
			return baseFor(object, iteratee, keys);
		}

		module.exports = baseForOwn;


		/***/ },
	/* 71 */
	/***/ function(module, exports, __webpack_require__) {

		var createBaseFor = __webpack_require__(72);

		/**
		 * The base implementation of `baseForIn` and `baseForOwn` which iterates
		 * over `object` properties returned by `keysFunc` invoking `iteratee` for
		 * each property. Iteratee functions may exit iteration early by explicitly
		 * returning `false`.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {Function} keysFunc The function to get the keys of `object`.
		 * @returns {Object} Returns `object`.
		 */
		var baseFor = createBaseFor();

		module.exports = baseFor;


		/***/ },
	/* 72 */
	/***/ function(module, exports, __webpack_require__) {

		var toObject = __webpack_require__(54);

		/**
		 * Creates a base function for `_.forIn` or `_.forInRight`.
		 *
		 * @private
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseFor(fromRight) {
			return function(object, iteratee, keysFunc) {
				var iterable = toObject(object),
					props = keysFunc(object),
					length = props.length,
					index = fromRight ? length : -1;

				while ((fromRight ? index-- : ++index < length)) {
					var key = props[index];
					if (iteratee(iterable[key], key, iterable) === false) {
						break;
					}
				}
				return object;
			};
		}

		module.exports = createBaseFor;


		/***/ },
	/* 73 */
	/***/ function(module, exports, __webpack_require__) {

		var getLength = __webpack_require__(28),
			isLength = __webpack_require__(30),
			toObject = __webpack_require__(54);

		/**
		 * Creates a `baseEach` or `baseEachRight` function.
		 *
		 * @private
		 * @param {Function} eachFunc The function to iterate over a collection.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseEach(eachFunc, fromRight) {
			return function(collection, iteratee) {
				var length = collection ? getLength(collection) : 0;
				if (!isLength(length)) {
					return eachFunc(collection, iteratee);
				}
				var index = fromRight ? length : -1,
					iterable = toObject(collection);

				while ((fromRight ? index-- : ++index < length)) {
					if (iteratee(iterable[index], index, iterable) === false) {
						break;
					}
				}
				return collection;
			};
		}

		module.exports = createBaseEach;


		/***/ },
	/* 74 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCallback = __webpack_require__(44),
			baseFind = __webpack_require__(75),
			baseFindIndex = __webpack_require__(76),
			isArray = __webpack_require__(33);

		/**
		 * Creates a `_.find` or `_.findLast` function.
		 *
		 * @private
		 * @param {Function} eachFunc The function to iterate over a collection.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new find function.
		 */
		function createFind(eachFunc, fromRight) {
			return function(collection, predicate, thisArg) {
				predicate = baseCallback(predicate, thisArg, 3);
				if (isArray(collection)) {
					var index = baseFindIndex(collection, predicate, fromRight);
					return index > -1 ? collection[index] : undefined;
				}
				return baseFind(collection, predicate, eachFunc);
			};
		}

		module.exports = createFind;


		/***/ },
	/* 75 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,
		 * without support for callback shorthands and `this` binding, which iterates
		 * over `collection` using the provided `eachFunc`.
		 *
		 * @private
		 * @param {Array|Object|string} collection The collection to search.
		 * @param {Function} predicate The function invoked per iteration.
		 * @param {Function} eachFunc The function to iterate over `collection`.
		 * @param {boolean} [retKey] Specify returning the key of the found element
		 *  instead of the element itself.
		 * @returns {*} Returns the found element or its key, else `undefined`.
		 */
		function baseFind(collection, predicate, eachFunc, retKey) {
			var result;
			eachFunc(collection, function(value, key, collection) {
				if (predicate(value, key, collection)) {
					result = retKey ? key : value;
					return false;
				}
			});
			return result;
		}

		module.exports = baseFind;


		/***/ },
	/* 76 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.findIndex` and `_.findLastIndex` without
		 * support for callback shorthands and `this` binding.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {Function} predicate The function invoked per iteration.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function baseFindIndex(array, predicate, fromRight) {
			var length = array.length,
				index = fromRight ? length : -1;

			while ((fromRight ? index-- : ++index < length)) {
				if (predicate(array[index], index, array)) {
					return index;
				}
			}
			return -1;
		}

		module.exports = baseFindIndex;


		/***/ },
	/* 77 */
	/***/ function(module, exports, __webpack_require__) {

		var baseMatches = __webpack_require__(45),
			filter = __webpack_require__(78);

		/**
		 * Performs a deep comparison between each element in `collection` and the
		 * source object, returning an array of all elements that have equivalent
		 * property values.
		 *
		 * **Note:** This method supports comparing arrays, booleans, `Date` objects,
		 * numbers, `Object` objects, regexes, and strings. Objects are compared by
		 * their own, not inherited, enumerable properties. For comparing a single
		 * own or inherited property value see `_.matchesProperty`.
		 *
		 * @static
		 * @memberOf _
		 * @category Collection
		 * @param {Array|Object|string} collection The collection to search.
		 * @param {Object} source The object of property values to match.
		 * @returns {Array} Returns the new filtered array.
		 * @example
		 *
		 * var users = [
		 *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },
		 *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }
		 * ];
		 *
		 * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');
		 * // => ['barney']
		 *
		 * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');
		 * // => ['fred']
		 */
		function where(collection, source) {
			return filter(collection, baseMatches(source));
		}

		module.exports = where;


		/***/ },
	/* 78 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayFilter = __webpack_require__(79),
			baseCallback = __webpack_require__(44),
			baseFilter = __webpack_require__(80),
			isArray = __webpack_require__(33);

		/**
		 * Iterates over elements of `collection`, returning an array of all elements
		 * `predicate` returns truthy for. The predicate is bound to `thisArg` and
		 * invoked with three arguments: (value, index|key, collection).
		 *
		 * If a property name is provided for `predicate` the created `_.property`
		 * style callback returns the property value of the given element.
		 *
		 * If a value is also provided for `thisArg` the created `_.matchesProperty`
		 * style callback returns `true` for elements that have a matching property
		 * value, else `false`.
		 *
		 * If an object is provided for `predicate` the created `_.matches` style
		 * callback returns `true` for elements that have the properties of the given
		 * object, else `false`.
		 *
		 * @static
		 * @memberOf _
		 * @alias select
		 * @category Collection
		 * @param {Array|Object|string} collection The collection to iterate over.
		 * @param {Function|Object|string} [predicate=_.identity] The function invoked
		 *  per iteration.
		 * @param {*} [thisArg] The `this` binding of `predicate`.
		 * @returns {Array} Returns the new filtered array.
		 * @example
		 *
		 * _.filter([4, 5, 6], function(n) {
	 *   return n % 2 == 0;
	 * });
		 * // => [4, 6]
		 *
		 * var users = [
		 *   { 'user': 'barney', 'age': 36, 'active': true },
		 *   { 'user': 'fred',   'age': 40, 'active': false }
		 * ];
		 *
		 * // using the `_.matches` callback shorthand
		 * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');
		 * // => ['barney']
		 *
		 * // using the `_.matchesProperty` callback shorthand
		 * _.pluck(_.filter(users, 'active', false), 'user');
		 * // => ['fred']
		 *
		 * // using the `_.property` callback shorthand
		 * _.pluck(_.filter(users, 'active'), 'user');
		 * // => ['barney']
		 */
		function filter(collection, predicate, thisArg) {
			var func = isArray(collection) ? arrayFilter : baseFilter;
			predicate = baseCallback(predicate, thisArg, 3);
			return func(collection, predicate);
		}

		module.exports = filter;


		/***/ },
	/* 79 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.filter` for arrays without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} predicate The function invoked per iteration.
		 * @returns {Array} Returns the new filtered array.
		 */
		function arrayFilter(array, predicate) {
			var index = -1,
				length = array.length,
				resIndex = -1,
				result = [];

			while (++index < length) {
				var value = array[index];
				if (predicate(value, index, array)) {
					result[++resIndex] = value;
				}
			}
			return result;
		}

		module.exports = arrayFilter;


		/***/ },
	/* 80 */
	/***/ function(module, exports, __webpack_require__) {

		var baseEach = __webpack_require__(69);

		/**
		 * The base implementation of `_.filter` without support for callback
		 * shorthands and `this` binding.
		 *
		 * @private
		 * @param {Array|Object|string} collection The collection to iterate over.
		 * @param {Function} predicate The function invoked per iteration.
		 * @returns {Array} Returns the new filtered array.
		 */
		function baseFilter(collection, predicate) {
			var result = [];
			baseEach(collection, function(value, index, collection) {
				if (predicate(value, index, collection)) {
					result.push(value);
				}
			});
			return result;
		}

		module.exports = baseFilter;


		/***/ }
	/******/ ]);

/*
 * classList.js: Cross-browser full element.classList implementation.
 * 2014-01-31
 *
 * By Eli Grey, http://eligrey.com
 * Public Domain.
 * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.
 */

/*global self, document, DOMException */

/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/

if ("document" in self && !("classList" in document.createElement("_"))) {

	(function (view) {

		"use strict";

		if (!('Element' in view)) return;

		var
			classListProp = "classList"
			, protoProp = "prototype"
			, elemCtrProto = view.Element[protoProp]
			, objCtr = Object
			, strTrim = String[protoProp].trim || function () {
					return this.replace(/^\s+|\s+$/g, "");
				}
			, arrIndexOf = Array[protoProp].indexOf || function (item) {
					var
						i = 0
						, len = this.length
						;
					for (; i < len; i++) {
						if (i in this && this[i] === item) {
							return i;
						}
					}
					return -1;
				}
		// Vendors: please allow content code to instantiate DOMExceptions
			, DOMEx = function (type, message) {
				this.name = type;
				this.code = DOMException[type];
				this.message = message;
			}
			, checkTokenAndGetIndex = function (classList, token) {
				if (token === "") {
					throw new DOMEx(
						"SYNTAX_ERR"
						, "An invalid or illegal string was specified"
					);
				}
				if (/\s/.test(token)) {
					throw new DOMEx(
						"INVALID_CHARACTER_ERR"
						, "String contains an invalid character"
					);
				}
				return arrIndexOf.call(classList, token);
			}
			, ClassList = function (elem) {
				var
					trimmedClasses = strTrim.call(elem.getAttribute("class") || "")
					, classes = trimmedClasses ? trimmedClasses.split(/\s+/) : []
					, i = 0
					, len = classes.length
					;
				for (; i < len; i++) {
					this.push(classes[i]);
				}
				this._updateClassName = function () {
					elem.setAttribute("class", this.toString());
				};
			}
			, classListProto = ClassList[protoProp] = []
			, classListGetter = function () {
				return new ClassList(this);
			}
			;
// Most DOMException implementations don't allow calling DOMException's toString()
// on non-DOMExceptions. Error's toString() is sufficient here.
		DOMEx[protoProp] = Error[protoProp];
		classListProto.item = function (i) {
			return this[i] || null;
		};
		classListProto.contains = function (token) {
			token += "";
			return checkTokenAndGetIndex(this, token) !== -1;
		};
		classListProto.add = function () {
			var
				tokens = arguments
				, i = 0
				, l = tokens.length
				, token
				, updated = false
				;
			do {
				token = tokens[i] + "";
				if (checkTokenAndGetIndex(this, token) === -1) {
					this.push(token);
					updated = true;
				}
			}
			while (++i < l);

			if (updated) {
				this._updateClassName();
			}
		};
		classListProto.remove = function () {
			var
				tokens = arguments
				, i = 0
				, l = tokens.length
				, token
				, updated = false
				;
			do {
				token = tokens[i] + "";
				var index = checkTokenAndGetIndex(this, token);
				if (index !== -1) {
					this.splice(index, 1);
					updated = true;
				}
			}
			while (++i < l);

			if (updated) {
				this._updateClassName();
			}
		};
		classListProto.toggle = function (token, force) {
			token += "";

			var
				result = this.contains(token)
				, method = result ?
				force !== true && "remove"
					:
				force !== false && "add"
				;

			if (method) {
				this[method](token);
			}

			return typeof force === "boolean" ? force : !result;
		};
		classListProto.toString = function () {
			return this.join(" ");
		};

		if (objCtr.defineProperty) {
			var classListPropDesc = {
				get: classListGetter
				, enumerable: true
				, configurable: true
			};
			try {
				objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
			} catch (ex) { // IE 8 doesn't support enumerable:true
				if (ex.number === -0x7FF5EC54) {
					classListPropDesc.enumerable = false;
					objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
				}
			}
		} else if (objCtr[protoProp].__defineGetter__) {
			elemCtrProto.__defineGetter__(classListProp, classListGetter);
		}

	}(self));

}
/*!
 * JavaScript Cookie v2.1.3
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function (factory) {
	var registeredInModuleLoader = false;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			var result;
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					var expires = new Date();
					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
					attributes.expires = expires;
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				if (!converter.write) {
					value = encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
				} else {
					value = converter.write(value, key);
				}

				key = encodeURIComponent(String(key));
				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
				key = key.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';

				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}
					stringifiedAttributes += '=' + attributes[attributeName];
				}
				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			if (!key) {
				result = {};
			}

			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling "get()"
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var rdecode = /(%[0-9A-Z]{2})+/g;
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = parts[0].replace(rdecode, decodeURIComponent);
					cookie = converter.read ?
						converter.read(cookie, name) : converter(cookie, name) ||
					cookie.replace(rdecode, decodeURIComponent);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					if (key === name) {
						result = cookie;
						break;
					}

					if (!key) {
						result[name] = cookie;
					}
				} catch (e) {}
			}

			return result;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function () {
			return api.apply({
				json: true
			}, [].slice.call(arguments));
		};
		api.defaults = {};

		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));
/*! jQuery UI - v1.12.1 - 2018-02-11
* http://jqueryui.com
* Includes: keycode.js, widgets/datepicker.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function( factory ) {
	if ( typeof define === "function" && define.amd ) {

		// AMD. Register as an anonymous module.
		define([ "jquery" ], factory );
	} else {

		// Browser globals
		factory( jQuery );
	}
}(function( $ ) {

$.ui = $.ui || {};

var version = $.ui.version = "1.12.1";


/*!
 * jQuery UI Keycode 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Keycode
//>>group: Core
//>>description: Provide keycodes as keynames
//>>docs: http://api.jqueryui.com/jQuery.ui.keyCode/


var keycode = $.ui.keyCode = {
	BACKSPACE: 8,
	COMMA: 188,
	DELETE: 46,
	DOWN: 40,
	END: 35,
	ENTER: 13,
	ESCAPE: 27,
	HOME: 36,
	LEFT: 37,
	PAGE_DOWN: 34,
	PAGE_UP: 33,
	PERIOD: 190,
	RIGHT: 39,
	SPACE: 32,
	TAB: 9,
	UP: 38
};


// jscs:disable maximumLineLength
/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
/*!
 * jQuery UI Datepicker 1.12.1
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */

//>>label: Datepicker
//>>group: Widgets
//>>description: Displays a calendar from an input or inline for selecting dates.
//>>docs: http://api.jqueryui.com/datepicker/
//>>demos: http://jqueryui.com/datepicker/
//>>css.structure: ../../themes/base/core.css
//>>css.structure: ../../themes/base/datepicker.css
//>>css.theme: ../../themes/base/theme.css



$.extend( $.ui, { datepicker: { version: "1.12.1" } } );

var datepicker_instActive;

function datepicker_getZindex( elem ) {
	var position, value;
	while ( elem.length && elem[ 0 ] !== document ) {

		// Ignore z-index if position is set to a value where z-index is ignored by the browser
		// This makes behavior of this function consistent across browsers
		// WebKit always returns auto if the element is positioned
		position = elem.css( "position" );
		if ( position === "absolute" || position === "relative" || position === "fixed" ) {

			// IE returns 0 when zIndex is not specified
			// other browsers return a string
			// we ignore the case of nested elements with an explicit value of 0
			// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
			value = parseInt( elem.css( "zIndex" ), 10 );
			if ( !isNaN( value ) && value !== 0 ) {
				return value;
			}
		}
		elem = elem.parent();
	}

	return 0;
}
/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

function Datepicker() {
	this._curInst = null; // The current instance in use
	this._keyEvent = false; // If the last event was a key event
	this._disabledInputs = []; // List of date picker inputs that have been disabled
	this._datepickerShowing = false; // True if the popup picker is showing , false if not
	this._inDialog = false; // True if showing within a "dialog", false if not
	this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
	this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
	this._appendClass = "ui-datepicker-append"; // The name of the append marker class
	this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
	this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
	this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
	this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
	this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
	this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
	this.regional = []; // Available regional settings, indexed by language code
	this.regional[ "" ] = { // Default regional settings
		closeText: "Done", // Display text for close link
		prevText: "Prev", // Display text for previous month link
		nextText: "Next", // Display text for next month link
		currentText: "Today", // Display text for current month link
		monthNames: [ "January","February","March","April","May","June",
			"July","August","September","October","November","December" ], // Names of months for drop-down and formatting
		monthNamesShort: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ], // For formatting
		dayNames: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], // For formatting
		dayNamesShort: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ], // For formatting
		dayNamesMin: [ "Su","Mo","Tu","We","Th","Fr","Sa" ], // Column headings for days starting at Sunday
		weekHeader: "Wk", // Column header for week of the year
		dateFormat: "mm/dd/yy", // See format options on parseDate
		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
		isRTL: false, // True if right-to-left language, false if left-to-right
		showMonthAfterYear: false, // True if the year select precedes month, false for month then year
		yearSuffix: "" // Additional text to append to the year in the month headers
	};
	this._defaults = { // Global defaults for all the date picker instances
		showOn: "focus", // "focus" for popup on focus,
			// "button" for trigger button, or "both" for either
		showAnim: "fadeIn", // Name of jQuery animation for popup
		showOptions: {}, // Options for enhanced animations
		defaultDate: null, // Used when field is blank: actual date,
			// +/-number for offset from today, null for today
		appendText: "", // Display text following the input box, e.g. showing the format
		buttonText: "...", // Text for trigger button
		buttonImage: "", // URL for trigger button image
		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
		hideIfNoPrevNext: false, // True to hide next/previous month links
			// if not applicable, false to just disable them
		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
		gotoCurrent: false, // True if today link goes back to current selection instead
		changeMonth: false, // True if month can be selected directly, false if only prev/next
		changeYear: false, // True if year can be selected directly, false if only prev/next
		yearRange: "c-10:c+10", // Range of years to display in drop-down,
			// either relative to today's year (-nn:+nn), relative to currently displayed year
			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
		showOtherMonths: false, // True to show dates in other months, false to leave blank
		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
		showWeek: false, // True to show week of the year, false to not show it
		calculateWeek: this.iso8601Week, // How to calculate the week of the year,
			// takes a Date and returns the number of the week for it
		shortYearCutoff: "+10", // Short year values < this are in the current century,
			// > this are in the previous century,
			// string value starting with "+" for current year + value
		minDate: null, // The earliest selectable date, or null for no limit
		maxDate: null, // The latest selectable date, or null for no limit
		duration: "fast", // Duration of display/closure
		beforeShowDay: null, // Function that takes a date and returns an array with
			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
			// [2] = cell title (optional), e.g. $.datepicker.noWeekends
		beforeShow: null, // Function that takes an input field and
			// returns a set of custom settings for the date picker
		onSelect: null, // Define a callback function when a date is selected
		onChangeMonthYear: null, // Define a callback function when the month or year is changed
		onClose: null, // Define a callback function when the datepicker is closed
		numberOfMonths: 1, // Number of months to show at a time
		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
		stepMonths: 1, // Number of months to step back/forward
		stepBigMonths: 12, // Number of months to step back/forward for the big links
		altField: "", // Selector for an alternate field to store selected dates into
		altFormat: "", // The date format to use for the alternate field
		constrainInput: true, // The input is constrained by the current date format
		showButtonPanel: false, // True to show button panel, false to not show it
		autoSize: false, // True to size the input for the date format, false to leave as is
		disabled: false // The initial disabled state
	};
	$.extend( this._defaults, this.regional[ "" ] );
	this.regional.en = $.extend( true, {}, this.regional[ "" ] );
	this.regional[ "en-US" ] = $.extend( true, {}, this.regional.en );
	this.dpDiv = datepicker_bindHover( $( "<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>" ) );
}

$.extend( Datepicker.prototype, {
	/* Class name added to elements to indicate already configured with a date picker. */
	markerClassName: "hasDatepicker",

	//Keep track of the maximum number of rows displayed (see #7043)
	maxRows: 4,

	// TODO rename to "widget" when switching to widget factory
	_widgetDatepicker: function() {
		return this.dpDiv;
	},

	/* Override the default settings for all instances of the date picker.
	 * @param  settings  object - the new settings to use as defaults (anonymous object)
	 * @return the manager object
	 */
	setDefaults: function( settings ) {
		datepicker_extendRemove( this._defaults, settings || {} );
		return this;
	},

	/* Attach the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 * @param  settings  object - the new settings to use for this date picker instance (anonymous)
	 */
	_attachDatepicker: function( target, settings ) {
		var nodeName, inline, inst;
		nodeName = target.nodeName.toLowerCase();
		inline = ( nodeName === "div" || nodeName === "span" );
		if ( !target.id ) {
			this.uuid += 1;
			target.id = "dp" + this.uuid;
		}
		inst = this._newInst( $( target ), inline );
		inst.settings = $.extend( {}, settings || {} );
		if ( nodeName === "input" ) {
			this._connectDatepicker( target, inst );
		} else if ( inline ) {
			this._inlineDatepicker( target, inst );
		}
	},

	/* Create a new instance object. */
	_newInst: function( target, inline ) {
		var id = target[ 0 ].id.replace( /([^A-Za-z0-9_\-])/g, "\\\\$1" ); // escape jQuery meta chars
		return { id: id, input: target, // associated target
			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
			drawMonth: 0, drawYear: 0, // month being drawn
			inline: inline, // is datepicker inline or not
			dpDiv: ( !inline ? this.dpDiv : // presentation div
			datepicker_bindHover( $( "<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>" ) ) ) };
	},

	/* Attach the date picker to an input field. */
	_connectDatepicker: function( target, inst ) {
		var input = $( target );
		inst.append = $( [] );
		inst.trigger = $( [] );
		if ( input.hasClass( this.markerClassName ) ) {
			return;
		}
		this._attachments( input, inst );
		input.addClass( this.markerClassName ).on( "keydown", this._doKeyDown ).
			on( "keypress", this._doKeyPress ).on( "keyup", this._doKeyUp );
		this._autoSize( inst );
		$.data( target, "datepicker", inst );

		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
		if ( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
	},

	/* Make attachments based on settings. */
	_attachments: function( input, inst ) {
		var showOn, buttonText, buttonImage,
			appendText = this._get( inst, "appendText" ),
			isRTL = this._get( inst, "isRTL" );

		if ( inst.append ) {
			inst.append.remove();
		}
		if ( appendText ) {
			inst.append = $( "<span class='" + this._appendClass + "'>" + appendText + "</span>" );
			input[ isRTL ? "before" : "after" ]( inst.append );
		}

		input.off( "focus", this._showDatepicker );

		if ( inst.trigger ) {
			inst.trigger.remove();
		}

		showOn = this._get( inst, "showOn" );
		if ( showOn === "focus" || showOn === "both" ) { // pop-up date picker when in the marked field
			input.on( "focus", this._showDatepicker );
		}
		if ( showOn === "button" || showOn === "both" ) { // pop-up date picker when button clicked
			buttonText = this._get( inst, "buttonText" );
			buttonImage = this._get( inst, "buttonImage" );
			inst.trigger = $( this._get( inst, "buttonImageOnly" ) ?
				$( "<img/>" ).addClass( this._triggerClass ).
					attr( { src: buttonImage, alt: buttonText, title: buttonText } ) :
				$( "<button type='button'></button>" ).addClass( this._triggerClass ).
					html( !buttonImage ? buttonText : $( "<img/>" ).attr(
					{ src:buttonImage, alt:buttonText, title:buttonText } ) ) );
			input[ isRTL ? "before" : "after" ]( inst.trigger );
			inst.trigger.on( "click", function() {
				if ( $.datepicker._datepickerShowing && $.datepicker._lastInput === input[ 0 ] ) {
					$.datepicker._hideDatepicker();
				} else if ( $.datepicker._datepickerShowing && $.datepicker._lastInput !== input[ 0 ] ) {
					$.datepicker._hideDatepicker();
					$.datepicker._showDatepicker( input[ 0 ] );
				} else {
					$.datepicker._showDatepicker( input[ 0 ] );
				}
				return false;
			} );
		}
	},

	/* Apply the maximum length for the date format. */
	_autoSize: function( inst ) {
		if ( this._get( inst, "autoSize" ) && !inst.inline ) {
			var findMax, max, maxI, i,
				date = new Date( 2009, 12 - 1, 20 ), // Ensure double digits
				dateFormat = this._get( inst, "dateFormat" );

			if ( dateFormat.match( /[DM]/ ) ) {
				findMax = function( names ) {
					max = 0;
					maxI = 0;
					for ( i = 0; i < names.length; i++ ) {
						if ( names[ i ].length > max ) {
							max = names[ i ].length;
							maxI = i;
						}
					}
					return maxI;
				};
				date.setMonth( findMax( this._get( inst, ( dateFormat.match( /MM/ ) ?
					"monthNames" : "monthNamesShort" ) ) ) );
				date.setDate( findMax( this._get( inst, ( dateFormat.match( /DD/ ) ?
					"dayNames" : "dayNamesShort" ) ) ) + 20 - date.getDay() );
			}
			inst.input.attr( "size", this._formatDate( inst, date ).length );
		}
	},

	/* Attach an inline date picker to a div. */
	_inlineDatepicker: function( target, inst ) {
		var divSpan = $( target );
		if ( divSpan.hasClass( this.markerClassName ) ) {
			return;
		}
		divSpan.addClass( this.markerClassName ).append( inst.dpDiv );
		$.data( target, "datepicker", inst );
		this._setDate( inst, this._getDefaultDate( inst ), true );
		this._updateDatepicker( inst );
		this._updateAlternate( inst );

		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
		if ( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}

		// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
		inst.dpDiv.css( "display", "block" );
	},

	/* Pop-up the date picker in a "dialog" box.
	 * @param  input element - ignored
	 * @param  date	string or Date - the initial date to display
	 * @param  onSelect  function - the function to call when a date is selected
	 * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	 * @param  pos int[2] - coordinates for the dialog's position within the screen or
	 *					event - with x/y coordinates or
	 *					leave empty for default (screen centre)
	 * @return the manager object
	 */
	_dialogDatepicker: function( input, date, onSelect, settings, pos ) {
		var id, browserWidth, browserHeight, scrollX, scrollY,
			inst = this._dialogInst; // internal instance

		if ( !inst ) {
			this.uuid += 1;
			id = "dp" + this.uuid;
			this._dialogInput = $( "<input type='text' id='" + id +
				"' style='position: absolute; top: -100px; width: 0px;'/>" );
			this._dialogInput.on( "keydown", this._doKeyDown );
			$( "body" ).append( this._dialogInput );
			inst = this._dialogInst = this._newInst( this._dialogInput, false );
			inst.settings = {};
			$.data( this._dialogInput[ 0 ], "datepicker", inst );
		}
		datepicker_extendRemove( inst.settings, settings || {} );
		date = ( date && date.constructor === Date ? this._formatDate( inst, date ) : date );
		this._dialogInput.val( date );

		this._pos = ( pos ? ( pos.length ? pos : [ pos.pageX, pos.pageY ] ) : null );
		if ( !this._pos ) {
			browserWidth = document.documentElement.clientWidth;
			browserHeight = document.documentElement.clientHeight;
			scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
			scrollY = document.documentElement.scrollTop || document.body.scrollTop;
			this._pos = // should use actual width/height below
				[ ( browserWidth / 2 ) - 100 + scrollX, ( browserHeight / 2 ) - 150 + scrollY ];
		}

		// Move input on screen for focus, but hidden behind dialog
		this._dialogInput.css( "left", ( this._pos[ 0 ] + 20 ) + "px" ).css( "top", this._pos[ 1 ] + "px" );
		inst.settings.onSelect = onSelect;
		this._inDialog = true;
		this.dpDiv.addClass( this._dialogClass );
		this._showDatepicker( this._dialogInput[ 0 ] );
		if ( $.blockUI ) {
			$.blockUI( this.dpDiv );
		}
		$.data( this._dialogInput[ 0 ], "datepicker", inst );
		return this;
	},

	/* Detach a datepicker from its control.
	 * @param  target	element - the target input field or division or span
	 */
	_destroyDatepicker: function( target ) {
		var nodeName,
			$target = $( target ),
			inst = $.data( target, "datepicker" );

		if ( !$target.hasClass( this.markerClassName ) ) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		$.removeData( target, "datepicker" );
		if ( nodeName === "input" ) {
			inst.append.remove();
			inst.trigger.remove();
			$target.removeClass( this.markerClassName ).
				off( "focus", this._showDatepicker ).
				off( "keydown", this._doKeyDown ).
				off( "keypress", this._doKeyPress ).
				off( "keyup", this._doKeyUp );
		} else if ( nodeName === "div" || nodeName === "span" ) {
			$target.removeClass( this.markerClassName ).empty();
		}

		if ( datepicker_instActive === inst ) {
			datepicker_instActive = null;
		}
	},

	/* Enable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */
	_enableDatepicker: function( target ) {
		var nodeName, inline,
			$target = $( target ),
			inst = $.data( target, "datepicker" );

		if ( !$target.hasClass( this.markerClassName ) ) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		if ( nodeName === "input" ) {
			target.disabled = false;
			inst.trigger.filter( "button" ).
				each( function() { this.disabled = false; } ).end().
				filter( "img" ).css( { opacity: "1.0", cursor: "" } );
		} else if ( nodeName === "div" || nodeName === "span" ) {
			inline = $target.children( "." + this._inlineClass );
			inline.children().removeClass( "ui-state-disabled" );
			inline.find( "select.ui-datepicker-month, select.ui-datepicker-year" ).
				prop( "disabled", false );
		}
		this._disabledInputs = $.map( this._disabledInputs,
			function( value ) { return ( value === target ? null : value ); } ); // delete entry
	},

	/* Disable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */
	_disableDatepicker: function( target ) {
		var nodeName, inline,
			$target = $( target ),
			inst = $.data( target, "datepicker" );

		if ( !$target.hasClass( this.markerClassName ) ) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		if ( nodeName === "input" ) {
			target.disabled = true;
			inst.trigger.filter( "button" ).
				each( function() { this.disabled = true; } ).end().
				filter( "img" ).css( { opacity: "0.5", cursor: "default" } );
		} else if ( nodeName === "div" || nodeName === "span" ) {
			inline = $target.children( "." + this._inlineClass );
			inline.children().addClass( "ui-state-disabled" );
			inline.find( "select.ui-datepicker-month, select.ui-datepicker-year" ).
				prop( "disabled", true );
		}
		this._disabledInputs = $.map( this._disabledInputs,
			function( value ) { return ( value === target ? null : value ); } ); // delete entry
		this._disabledInputs[ this._disabledInputs.length ] = target;
	},

	/* Is the first field in a jQuery collection disabled as a datepicker?
	 * @param  target	element - the target input field or division or span
	 * @return boolean - true if disabled, false if enabled
	 */
	_isDisabledDatepicker: function( target ) {
		if ( !target ) {
			return false;
		}
		for ( var i = 0; i < this._disabledInputs.length; i++ ) {
			if ( this._disabledInputs[ i ] === target ) {
				return true;
			}
		}
		return false;
	},

	/* Retrieve the instance data for the target control.
	 * @param  target  element - the target input field or division or span
	 * @return  object - the associated instance data
	 * @throws  error if a jQuery problem getting data
	 */
	_getInst: function( target ) {
		try {
			return $.data( target, "datepicker" );
		}
		catch ( err ) {
			throw "Missing instance data for this datepicker";
		}
	},

	/* Update or retrieve the settings for a date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 * @param  name	object - the new settings to update or
	 *				string - the name of the setting to change or retrieve,
	 *				when retrieving also "all" for all instance settings or
	 *				"defaults" for all global defaults
	 * @param  value   any - the new value for the setting
	 *				(omit if above is an object or to retrieve a value)
	 */
	_optionDatepicker: function( target, name, value ) {
		var settings, date, minDate, maxDate,
			inst = this._getInst( target );

		if ( arguments.length === 2 && typeof name === "string" ) {
			return ( name === "defaults" ? $.extend( {}, $.datepicker._defaults ) :
				( inst ? ( name === "all" ? $.extend( {}, inst.settings ) :
				this._get( inst, name ) ) : null ) );
		}

		settings = name || {};
		if ( typeof name === "string" ) {
			settings = {};
			settings[ name ] = value;
		}

		if ( inst ) {
			if ( this._curInst === inst ) {
				this._hideDatepicker();
			}

			date = this._getDateDatepicker( target, true );
			minDate = this._getMinMaxDate( inst, "min" );
			maxDate = this._getMinMaxDate( inst, "max" );
			datepicker_extendRemove( inst.settings, settings );

			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
			if ( minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined ) {
				inst.settings.minDate = this._formatDate( inst, minDate );
			}
			if ( maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined ) {
				inst.settings.maxDate = this._formatDate( inst, maxDate );
			}
			if ( "disabled" in settings ) {
				if ( settings.disabled ) {
					this._disableDatepicker( target );
				} else {
					this._enableDatepicker( target );
				}
			}
			this._attachments( $( target ), inst );
			this._autoSize( inst );
			this._setDate( inst, date );
			this._updateAlternate( inst );
			this._updateDatepicker( inst );
		}
	},

	// Change method deprecated
	_changeDatepicker: function( target, name, value ) {
		this._optionDatepicker( target, name, value );
	},

	/* Redraw the date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 */
	_refreshDatepicker: function( target ) {
		var inst = this._getInst( target );
		if ( inst ) {
			this._updateDatepicker( inst );
		}
	},

	/* Set the dates for a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  date	Date - the new date
	 */
	_setDateDatepicker: function( target, date ) {
		var inst = this._getInst( target );
		if ( inst ) {
			this._setDate( inst, date );
			this._updateDatepicker( inst );
			this._updateAlternate( inst );
		}
	},

	/* Get the date(s) for the first entry in a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  noDefault boolean - true if no default date is to be used
	 * @return Date - the current date
	 */
	_getDateDatepicker: function( target, noDefault ) {
		var inst = this._getInst( target );
		if ( inst && !inst.inline ) {
			this._setDateFromField( inst, noDefault );
		}
		return ( inst ? this._getDate( inst ) : null );
	},

	/* Handle keystrokes. */
	_doKeyDown: function( event ) {
		var onSelect, dateStr, sel,
			inst = $.datepicker._getInst( event.target ),
			handled = true,
			isRTL = inst.dpDiv.is( ".ui-datepicker-rtl" );

		inst._keyEvent = true;
		if ( $.datepicker._datepickerShowing ) {
			switch ( event.keyCode ) {
				case 9: $.datepicker._hideDatepicker();
						handled = false;
						break; // hide on tab out
				case 13: sel = $( "td." + $.datepicker._dayOverClass + ":not(." +
									$.datepicker._currentClass + ")", inst.dpDiv );
						if ( sel[ 0 ] ) {
							$.datepicker._selectDay( event.target, inst.selectedMonth, inst.selectedYear, sel[ 0 ] );
						}

						onSelect = $.datepicker._get( inst, "onSelect" );
						if ( onSelect ) {
							dateStr = $.datepicker._formatDate( inst );

							// Trigger custom callback
							onSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );
						} else {
							$.datepicker._hideDatepicker();
						}

						return false; // don't submit the form
				case 27: $.datepicker._hideDatepicker();
						break; // hide on escape
				case 33: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
							-$.datepicker._get( inst, "stepBigMonths" ) :
							-$.datepicker._get( inst, "stepMonths" ) ), "M" );
						break; // previous month/year on page up/+ ctrl
				case 34: $.datepicker._adjustDate( event.target, ( event.ctrlKey ?
							+$.datepicker._get( inst, "stepBigMonths" ) :
							+$.datepicker._get( inst, "stepMonths" ) ), "M" );
						break; // next month/year on page down/+ ctrl
				case 35: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._clearDate( event.target );
						}
						handled = event.ctrlKey || event.metaKey;
						break; // clear on ctrl or command +end
				case 36: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._gotoToday( event.target );
						}
						handled = event.ctrlKey || event.metaKey;
						break; // current on ctrl or command +home
				case 37: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._adjustDate( event.target, ( isRTL ? +1 : -1 ), "D" );
						}
						handled = event.ctrlKey || event.metaKey;

						// -1 day on ctrl or command +left
						if ( event.originalEvent.altKey ) {
							$.datepicker._adjustDate( event.target, ( event.ctrlKey ?
								-$.datepicker._get( inst, "stepBigMonths" ) :
								-$.datepicker._get( inst, "stepMonths" ) ), "M" );
						}

						// next month/year on alt +left on Mac
						break;
				case 38: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._adjustDate( event.target, -7, "D" );
						}
						handled = event.ctrlKey || event.metaKey;
						break; // -1 week on ctrl or command +up
				case 39: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._adjustDate( event.target, ( isRTL ? -1 : +1 ), "D" );
						}
						handled = event.ctrlKey || event.metaKey;

						// +1 day on ctrl or command +right
						if ( event.originalEvent.altKey ) {
							$.datepicker._adjustDate( event.target, ( event.ctrlKey ?
								+$.datepicker._get( inst, "stepBigMonths" ) :
								+$.datepicker._get( inst, "stepMonths" ) ), "M" );
						}

						// next month/year on alt +right
						break;
				case 40: if ( event.ctrlKey || event.metaKey ) {
							$.datepicker._adjustDate( event.target, +7, "D" );
						}
						handled = event.ctrlKey || event.metaKey;
						break; // +1 week on ctrl or command +down
				default: handled = false;
			}
		} else if ( event.keyCode === 36 && event.ctrlKey ) { // display the date picker on ctrl+home
			$.datepicker._showDatepicker( this );
		} else {
			handled = false;
		}

		if ( handled ) {
			event.preventDefault();
			event.stopPropagation();
		}
	},

	/* Filter entered characters - based on date format. */
	_doKeyPress: function( event ) {
		var chars, chr,
			inst = $.datepicker._getInst( event.target );

		if ( $.datepicker._get( inst, "constrainInput" ) ) {
			chars = $.datepicker._possibleChars( $.datepicker._get( inst, "dateFormat" ) );
			chr = String.fromCharCode( event.charCode == null ? event.keyCode : event.charCode );
			return event.ctrlKey || event.metaKey || ( chr < " " || !chars || chars.indexOf( chr ) > -1 );
		}
	},

	/* Synchronise manual entry and field/alternate field. */
	_doKeyUp: function( event ) {
		var date,
			inst = $.datepicker._getInst( event.target );

		if ( inst.input.val() !== inst.lastVal ) {
			try {
				date = $.datepicker.parseDate( $.datepicker._get( inst, "dateFormat" ),
					( inst.input ? inst.input.val() : null ),
					$.datepicker._getFormatConfig( inst ) );

				if ( date ) { // only if valid
					$.datepicker._setDateFromField( inst );
					$.datepicker._updateAlternate( inst );
					$.datepicker._updateDatepicker( inst );
				}
			}
			catch ( err ) {
			}
		}
		return true;
	},

	/* Pop-up the date picker for a given input field.
	 * If false returned from beforeShow event handler do not show.
	 * @param  input  element - the input field attached to the date picker or
	 *					event - if triggered by focus
	 */
	_showDatepicker: function( input ) {
		input = input.target || input;
		if ( input.nodeName.toLowerCase() !== "input" ) { // find from button/image trigger
			input = $( "input", input.parentNode )[ 0 ];
		}

		if ( $.datepicker._isDisabledDatepicker( input ) || $.datepicker._lastInput === input ) { // already here
			return;
		}

		var inst, beforeShow, beforeShowSettings, isFixed,
			offset, showAnim, duration;

		inst = $.datepicker._getInst( input );
		if ( $.datepicker._curInst && $.datepicker._curInst !== inst ) {
			$.datepicker._curInst.dpDiv.stop( true, true );
			if ( inst && $.datepicker._datepickerShowing ) {
				$.datepicker._hideDatepicker( $.datepicker._curInst.input[ 0 ] );
			}
		}

		beforeShow = $.datepicker._get( inst, "beforeShow" );
		beforeShowSettings = beforeShow ? beforeShow.apply( input, [ input, inst ] ) : {};
		if ( beforeShowSettings === false ) {
			return;
		}
		datepicker_extendRemove( inst.settings, beforeShowSettings );

		inst.lastVal = null;
		$.datepicker._lastInput = input;
		$.datepicker._setDateFromField( inst );

		if ( $.datepicker._inDialog ) { // hide cursor
			input.value = "";
		}
		if ( !$.datepicker._pos ) { // position below input
			$.datepicker._pos = $.datepicker._findPos( input );
			$.datepicker._pos[ 1 ] += input.offsetHeight; // add the height
		}

		isFixed = false;
		$( input ).parents().each( function() {
			isFixed |= $( this ).css( "position" ) === "fixed";
			return !isFixed;
		} );

		offset = { left: $.datepicker._pos[ 0 ], top: $.datepicker._pos[ 1 ] };
		$.datepicker._pos = null;

		//to avoid flashes on Firefox
		inst.dpDiv.empty();

		// determine sizing offscreen
		inst.dpDiv.css( { position: "absolute", display: "block", top: "-1000px" } );
		$.datepicker._updateDatepicker( inst );

		// fix width for dynamic number of date pickers
		// and adjust position before showing
		offset = $.datepicker._checkOffset( inst, offset, isFixed );
		inst.dpDiv.css( { position: ( $.datepicker._inDialog && $.blockUI ?
			"static" : ( isFixed ? "fixed" : "absolute" ) ), display: "none",
			left: offset.left + "px", top: offset.top + "px" } );

		if ( !inst.inline ) {
			showAnim = $.datepicker._get( inst, "showAnim" );
			duration = $.datepicker._get( inst, "duration" );
			inst.dpDiv.css( "z-index", datepicker_getZindex( $( input ) ) + 1 );
			$.datepicker._datepickerShowing = true;

			if ( $.effects && $.effects.effect[ showAnim ] ) {
				inst.dpDiv.show( showAnim, $.datepicker._get( inst, "showOptions" ), duration );
			} else {
				inst.dpDiv[ showAnim || "show" ]( showAnim ? duration : null );
			}

			if ( $.datepicker._shouldFocusInput( inst ) ) {
				inst.input.trigger( "focus" );
			}

			$.datepicker._curInst = inst;
		}
	},

	/* Generate the date picker content. */
	_updateDatepicker: function( inst ) {
		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
		datepicker_instActive = inst; // for delegate hover events
		inst.dpDiv.empty().append( this._generateHTML( inst ) );
		this._attachHandlers( inst );

		var origyearshtml,
			numMonths = this._getNumberOfMonths( inst ),
			cols = numMonths[ 1 ],
			width = 17,
			activeCell = inst.dpDiv.find( "." + this._dayOverClass + " a" );

		if ( activeCell.length > 0 ) {
			datepicker_handleMouseover.apply( activeCell.get( 0 ) );
		}

		inst.dpDiv.removeClass( "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4" ).width( "" );
		if ( cols > 1 ) {
			inst.dpDiv.addClass( "ui-datepicker-multi-" + cols ).css( "width", ( width * cols ) + "em" );
		}
		inst.dpDiv[ ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ? "add" : "remove" ) +
			"Class" ]( "ui-datepicker-multi" );
		inst.dpDiv[ ( this._get( inst, "isRTL" ) ? "add" : "remove" ) +
			"Class" ]( "ui-datepicker-rtl" );

		if ( inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {
			inst.input.trigger( "focus" );
		}

		// Deffered render of the years select (to avoid flashes on Firefox)
		if ( inst.yearshtml ) {
			origyearshtml = inst.yearshtml;
			setTimeout( function() {

				//assure that inst.yearshtml didn't change.
				if ( origyearshtml === inst.yearshtml && inst.yearshtml ) {
					inst.dpDiv.find( "select.ui-datepicker-year:first" ).replaceWith( inst.yearshtml );
				}
				origyearshtml = inst.yearshtml = null;
			}, 0 );
		}
	},

	// #6694 - don't focus the input if it's already focused
	// this breaks the change event in IE
	// Support: IE and jQuery <1.9
	_shouldFocusInput: function( inst ) {
		return inst.input && inst.input.is( ":visible" ) && !inst.input.is( ":disabled" ) && !inst.input.is( ":focus" );
	},

	/* Check positioning to remain on screen. */
	_checkOffset: function( inst, offset, isFixed ) {
		var dpWidth = inst.dpDiv.outerWidth(),
			dpHeight = inst.dpDiv.outerHeight(),
			inputWidth = inst.input ? inst.input.outerWidth() : 0,
			inputHeight = inst.input ? inst.input.outerHeight() : 0,
			viewWidth = document.documentElement.clientWidth + ( isFixed ? 0 : $( document ).scrollLeft() ),
			viewHeight = document.documentElement.clientHeight + ( isFixed ? 0 : $( document ).scrollTop() );

		offset.left -= ( this._get( inst, "isRTL" ) ? ( dpWidth - inputWidth ) : 0 );
		offset.left -= ( isFixed && offset.left === inst.input.offset().left ) ? $( document ).scrollLeft() : 0;
		offset.top -= ( isFixed && offset.top === ( inst.input.offset().top + inputHeight ) ) ? $( document ).scrollTop() : 0;

		// Now check if datepicker is showing outside window viewport - move to a better place if so.
		offset.left -= Math.min( offset.left, ( offset.left + dpWidth > viewWidth && viewWidth > dpWidth ) ?
			Math.abs( offset.left + dpWidth - viewWidth ) : 0 );
		offset.top -= Math.min( offset.top, ( offset.top + dpHeight > viewHeight && viewHeight > dpHeight ) ?
			Math.abs( dpHeight + inputHeight ) : 0 );

		return offset;
	},

	/* Find an object's position on the screen. */
	_findPos: function( obj ) {
		var position,
			inst = this._getInst( obj ),
			isRTL = this._get( inst, "isRTL" );

		while ( obj && ( obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden( obj ) ) ) {
			obj = obj[ isRTL ? "previousSibling" : "nextSibling" ];
		}

		position = $( obj ).offset();
		return [ position.left, position.top ];
	},

	/* Hide the date picker from view.
	 * @param  input  element - the input field attached to the date picker
	 */
	_hideDatepicker: function( input ) {
		var showAnim, duration, postProcess, onClose,
			inst = this._curInst;

		if ( !inst || ( input && inst !== $.data( input, "datepicker" ) ) ) {
			return;
		}

		if ( this._datepickerShowing ) {
			showAnim = this._get( inst, "showAnim" );
			duration = this._get( inst, "duration" );
			postProcess = function() {
				$.datepicker._tidyDialog( inst );
			};

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {
				inst.dpDiv.hide( showAnim, $.datepicker._get( inst, "showOptions" ), duration, postProcess );
			} else {
				inst.dpDiv[ ( showAnim === "slideDown" ? "slideUp" :
					( showAnim === "fadeIn" ? "fadeOut" : "hide" ) ) ]( ( showAnim ? duration : null ), postProcess );
			}

			if ( !showAnim ) {
				postProcess();
			}
			this._datepickerShowing = false;

			onClose = this._get( inst, "onClose" );
			if ( onClose ) {
				onClose.apply( ( inst.input ? inst.input[ 0 ] : null ), [ ( inst.input ? inst.input.val() : "" ), inst ] );
			}

			this._lastInput = null;
			if ( this._inDialog ) {
				this._dialogInput.css( { position: "absolute", left: "0", top: "-100px" } );
				if ( $.blockUI ) {
					$.unblockUI();
					$( "body" ).append( this.dpDiv );
				}
			}
			this._inDialog = false;
		}
	},

	/* Tidy up after a dialog display. */
	_tidyDialog: function( inst ) {
		inst.dpDiv.removeClass( this._dialogClass ).off( ".ui-datepicker-calendar" );
	},

	/* Close date picker if clicked elsewhere. */
	_checkExternalClick: function( event ) {
		if ( !$.datepicker._curInst ) {
			return;
		}

		var $target = $( event.target ),
			inst = $.datepicker._getInst( $target[ 0 ] );

		if ( ( ( $target[ 0 ].id !== $.datepicker._mainDivId &&
				$target.parents( "#" + $.datepicker._mainDivId ).length === 0 &&
				!$target.hasClass( $.datepicker.markerClassName ) &&
				!$target.closest( "." + $.datepicker._triggerClass ).length &&
				$.datepicker._datepickerShowing && !( $.datepicker._inDialog && $.blockUI ) ) ) ||
			( $target.hasClass( $.datepicker.markerClassName ) && $.datepicker._curInst !== inst ) ) {
				$.datepicker._hideDatepicker();
		}
	},

	/* Adjust one of the date sub-fields. */
	_adjustDate: function( id, offset, period ) {
		var target = $( id ),
			inst = this._getInst( target[ 0 ] );

		if ( this._isDisabledDatepicker( target[ 0 ] ) ) {
			return;
		}
		this._adjustInstDate( inst, offset +
			( period === "M" ? this._get( inst, "showCurrentAtPos" ) : 0 ), // undo positioning
			period );
		this._updateDatepicker( inst );
	},

	/* Action for current link. */
	_gotoToday: function( id ) {
		var date,
			target = $( id ),
			inst = this._getInst( target[ 0 ] );

		if ( this._get( inst, "gotoCurrent" ) && inst.currentDay ) {
			inst.selectedDay = inst.currentDay;
			inst.drawMonth = inst.selectedMonth = inst.currentMonth;
			inst.drawYear = inst.selectedYear = inst.currentYear;
		} else {
			date = new Date();
			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
		}
		this._notifyChange( inst );
		this._adjustDate( target );
	},

	/* Action for selecting a new month/year. */
	_selectMonthYear: function( id, select, period ) {
		var target = $( id ),
			inst = this._getInst( target[ 0 ] );

		inst[ "selected" + ( period === "M" ? "Month" : "Year" ) ] =
		inst[ "draw" + ( period === "M" ? "Month" : "Year" ) ] =
			parseInt( select.options[ select.selectedIndex ].value, 10 );

		this._notifyChange( inst );
		this._adjustDate( target );
	},

	/* Action for selecting a day. */
	_selectDay: function( id, month, year, td ) {
		var inst,
			target = $( id );

		if ( $( td ).hasClass( this._unselectableClass ) || this._isDisabledDatepicker( target[ 0 ] ) ) {
			return;
		}

		inst = this._getInst( target[ 0 ] );
		inst.selectedDay = inst.currentDay = $( "a", td ).html();
		inst.selectedMonth = inst.currentMonth = month;
		inst.selectedYear = inst.currentYear = year;
		this._selectDate( id, this._formatDate( inst,
			inst.currentDay, inst.currentMonth, inst.currentYear ) );
	},

	/* Erase the input field and hide the date picker. */
	_clearDate: function( id ) {
		var target = $( id );
		this._selectDate( target, "" );
	},

	/* Update the input field with the selected date. */
	_selectDate: function( id, dateStr ) {
		var onSelect,
			target = $( id ),
			inst = this._getInst( target[ 0 ] );

		dateStr = ( dateStr != null ? dateStr : this._formatDate( inst ) );
		if ( inst.input ) {
			inst.input.val( dateStr );
		}
		this._updateAlternate( inst );

		onSelect = this._get( inst, "onSelect" );
		if ( onSelect ) {
			onSelect.apply( ( inst.input ? inst.input[ 0 ] : null ), [ dateStr, inst ] );  // trigger custom callback
		} else if ( inst.input ) {
			inst.input.trigger( "change" ); // fire the change event
		}

		if ( inst.inline ) {
			this._updateDatepicker( inst );
		} else {
			this._hideDatepicker();
			this._lastInput = inst.input[ 0 ];
			if ( typeof( inst.input[ 0 ] ) !== "object" ) {
				inst.input.trigger( "focus" ); // restore focus
			}
			this._lastInput = null;
		}
	},

	/* Update any alternate field to synchronise with the main field. */
	_updateAlternate: function( inst ) {
		var altFormat, date, dateStr,
			altField = this._get( inst, "altField" );

		if ( altField ) { // update alternate field too
			altFormat = this._get( inst, "altFormat" ) || this._get( inst, "dateFormat" );
			date = this._getDate( inst );
			dateStr = this.formatDate( altFormat, date, this._getFormatConfig( inst ) );
			$( altField ).val( dateStr );
		}
	},

	/* Set as beforeShowDay function to prevent selection of weekends.
	 * @param  date  Date - the date to customise
	 * @return [boolean, string] - is this date selectable?, what is its CSS class?
	 */
	noWeekends: function( date ) {
		var day = date.getDay();
		return [ ( day > 0 && day < 6 ), "" ];
	},

	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	 * @param  date  Date - the date to get the week for
	 * @return  number - the number of the week within the year that contains this date
	 */
	iso8601Week: function( date ) {
		var time,
			checkDate = new Date( date.getTime() );

		// Find Thursday of this week starting on Monday
		checkDate.setDate( checkDate.getDate() + 4 - ( checkDate.getDay() || 7 ) );

		time = checkDate.getTime();
		checkDate.setMonth( 0 ); // Compare with Jan 1
		checkDate.setDate( 1 );
		return Math.floor( Math.round( ( time - checkDate ) / 86400000 ) / 7 ) + 1;
	},

	/* Parse a string value into a date object.
	 * See formatDate below for the possible formats.
	 *
	 * @param  format string - the expected format of the date
	 * @param  value string - the date in the above format
	 * @param  settings Object - attributes include:
	 *					shortYearCutoff  number - the cutoff year for determining the century (optional)
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  Date - the extracted date value or null if value is blank
	 */
	parseDate: function( format, value, settings ) {
		if ( format == null || value == null ) {
			throw "Invalid arguments";
		}

		value = ( typeof value === "object" ? value.toString() : value + "" );
		if ( value === "" ) {
			return null;
		}

		var iFormat, dim, extra,
			iValue = 0,
			shortYearCutoffTemp = ( settings ? settings.shortYearCutoff : null ) || this._defaults.shortYearCutoff,
			shortYearCutoff = ( typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
				new Date().getFullYear() % 100 + parseInt( shortYearCutoffTemp, 10 ) ),
			dayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,
			dayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,
			monthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,
			monthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,
			year = -1,
			month = -1,
			day = -1,
			doy = -1,
			literal = false,
			date,

			// Check whether a format character is doubled
			lookAhead = function( match ) {
				var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
				if ( matches ) {
					iFormat++;
				}
				return matches;
			},

			// Extract a number from the string value
			getNumber = function( match ) {
				var isDoubled = lookAhead( match ),
					size = ( match === "@" ? 14 : ( match === "!" ? 20 :
					( match === "y" && isDoubled ? 4 : ( match === "o" ? 3 : 2 ) ) ) ),
					minSize = ( match === "y" ? size : 1 ),
					digits = new RegExp( "^\\d{" + minSize + "," + size + "}" ),
					num = value.substring( iValue ).match( digits );
				if ( !num ) {
					throw "Missing number at position " + iValue;
				}
				iValue += num[ 0 ].length;
				return parseInt( num[ 0 ], 10 );
			},

			// Extract a name from the string value and convert to an index
			getName = function( match, shortNames, longNames ) {
				var index = -1,
					names = $.map( lookAhead( match ) ? longNames : shortNames, function( v, k ) {
						return [ [ k, v ] ];
					} ).sort( function( a, b ) {
						return -( a[ 1 ].length - b[ 1 ].length );
					} );

				$.each( names, function( i, pair ) {
					var name = pair[ 1 ];
					if ( value.substr( iValue, name.length ).toLowerCase() === name.toLowerCase() ) {
						index = pair[ 0 ];
						iValue += name.length;
						return false;
					}
				} );
				if ( index !== -1 ) {
					return index + 1;
				} else {
					throw "Unknown name at position " + iValue;
				}
			},

			// Confirm that a literal character matches the string value
			checkLiteral = function() {
				if ( value.charAt( iValue ) !== format.charAt( iFormat ) ) {
					throw "Unexpected literal at position " + iValue;
				}
				iValue++;
			};

		for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
			if ( literal ) {
				if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
					literal = false;
				} else {
					checkLiteral();
				}
			} else {
				switch ( format.charAt( iFormat ) ) {
					case "d":
						day = getNumber( "d" );
						break;
					case "D":
						getName( "D", dayNamesShort, dayNames );
						break;
					case "o":
						doy = getNumber( "o" );
						break;
					case "m":
						month = getNumber( "m" );
						break;
					case "M":
						month = getName( "M", monthNamesShort, monthNames );
						break;
					case "y":
						year = getNumber( "y" );
						break;
					case "@":
						date = new Date( getNumber( "@" ) );
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "!":
						date = new Date( ( getNumber( "!" ) - this._ticksTo1970 ) / 10000 );
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "'":
						if ( lookAhead( "'" ) ) {
							checkLiteral();
						} else {
							literal = true;
						}
						break;
					default:
						checkLiteral();
				}
			}
		}

		if ( iValue < value.length ) {
			extra = value.substr( iValue );
			if ( !/^\s+/.test( extra ) ) {
				throw "Extra/unparsed characters found in date: " + extra;
			}
		}

		if ( year === -1 ) {
			year = new Date().getFullYear();
		} else if ( year < 100 ) {
			year += new Date().getFullYear() - new Date().getFullYear() % 100 +
				( year <= shortYearCutoff ? 0 : -100 );
		}

		if ( doy > -1 ) {
			month = 1;
			day = doy;
			do {
				dim = this._getDaysInMonth( year, month - 1 );
				if ( day <= dim ) {
					break;
				}
				month++;
				day -= dim;
			} while ( true );
		}

		date = this._daylightSavingAdjust( new Date( year, month - 1, day ) );
		if ( date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day ) {
			throw "Invalid date"; // E.g. 31/02/00
		}
		return date;
	},

	/* Standard date formats. */
	ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
	COOKIE: "D, dd M yy",
	ISO_8601: "yy-mm-dd",
	RFC_822: "D, d M y",
	RFC_850: "DD, dd-M-y",
	RFC_1036: "D, d M y",
	RFC_1123: "D, d M yy",
	RFC_2822: "D, d M yy",
	RSS: "D, d M y", // RFC 822
	TICKS: "!",
	TIMESTAMP: "@",
	W3C: "yy-mm-dd", // ISO 8601

	_ticksTo1970: ( ( ( 1970 - 1 ) * 365 + Math.floor( 1970 / 4 ) - Math.floor( 1970 / 100 ) +
		Math.floor( 1970 / 400 ) ) * 24 * 60 * 60 * 10000000 ),

	/* Format a date object into a string value.
	 * The format can be combinations of the following:
	 * d  - day of month (no leading zero)
	 * dd - day of month (two digit)
	 * o  - day of year (no leading zeros)
	 * oo - day of year (three digit)
	 * D  - day name short
	 * DD - day name long
	 * m  - month of year (no leading zero)
	 * mm - month of year (two digit)
	 * M  - month name short
	 * MM - month name long
	 * y  - year (two digit)
	 * yy - year (four digit)
	 * @ - Unix timestamp (ms since 01/01/1970)
	 * ! - Windows ticks (100ns since 01/01/0001)
	 * "..." - literal text
	 * '' - single quote
	 *
	 * @param  format string - the desired format of the date
	 * @param  date Date - the date value to format
	 * @param  settings Object - attributes include:
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  string - the date in the above format
	 */
	formatDate: function( format, date, settings ) {
		if ( !date ) {
			return "";
		}

		var iFormat,
			dayNamesShort = ( settings ? settings.dayNamesShort : null ) || this._defaults.dayNamesShort,
			dayNames = ( settings ? settings.dayNames : null ) || this._defaults.dayNames,
			monthNamesShort = ( settings ? settings.monthNamesShort : null ) || this._defaults.monthNamesShort,
			monthNames = ( settings ? settings.monthNames : null ) || this._defaults.monthNames,

			// Check whether a format character is doubled
			lookAhead = function( match ) {
				var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
				if ( matches ) {
					iFormat++;
				}
				return matches;
			},

			// Format a number, with leading zero if necessary
			formatNumber = function( match, value, len ) {
				var num = "" + value;
				if ( lookAhead( match ) ) {
					while ( num.length < len ) {
						num = "0" + num;
					}
				}
				return num;
			},

			// Format a name, short or long as requested
			formatName = function( match, value, shortNames, longNames ) {
				return ( lookAhead( match ) ? longNames[ value ] : shortNames[ value ] );
			},
			output = "",
			literal = false;

		if ( date ) {
			for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
				if ( literal ) {
					if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
						literal = false;
					} else {
						output += format.charAt( iFormat );
					}
				} else {
					switch ( format.charAt( iFormat ) ) {
						case "d":
							output += formatNumber( "d", date.getDate(), 2 );
							break;
						case "D":
							output += formatName( "D", date.getDay(), dayNamesShort, dayNames );
							break;
						case "o":
							output += formatNumber( "o",
								Math.round( ( new Date( date.getFullYear(), date.getMonth(), date.getDate() ).getTime() - new Date( date.getFullYear(), 0, 0 ).getTime() ) / 86400000 ), 3 );
							break;
						case "m":
							output += formatNumber( "m", date.getMonth() + 1, 2 );
							break;
						case "M":
							output += formatName( "M", date.getMonth(), monthNamesShort, monthNames );
							break;
						case "y":
							output += ( lookAhead( "y" ) ? date.getFullYear() :
								( date.getFullYear() % 100 < 10 ? "0" : "" ) + date.getFullYear() % 100 );
							break;
						case "@":
							output += date.getTime();
							break;
						case "!":
							output += date.getTime() * 10000 + this._ticksTo1970;
							break;
						case "'":
							if ( lookAhead( "'" ) ) {
								output += "'";
							} else {
								literal = true;
							}
							break;
						default:
							output += format.charAt( iFormat );
					}
				}
			}
		}
		return output;
	},

	/* Extract all possible characters from the date format. */
	_possibleChars: function( format ) {
		var iFormat,
			chars = "",
			literal = false,

			// Check whether a format character is doubled
			lookAhead = function( match ) {
				var matches = ( iFormat + 1 < format.length && format.charAt( iFormat + 1 ) === match );
				if ( matches ) {
					iFormat++;
				}
				return matches;
			};

		for ( iFormat = 0; iFormat < format.length; iFormat++ ) {
			if ( literal ) {
				if ( format.charAt( iFormat ) === "'" && !lookAhead( "'" ) ) {
					literal = false;
				} else {
					chars += format.charAt( iFormat );
				}
			} else {
				switch ( format.charAt( iFormat ) ) {
					case "d": case "m": case "y": case "@":
						chars += "0123456789";
						break;
					case "D": case "M":
						return null; // Accept anything
					case "'":
						if ( lookAhead( "'" ) ) {
							chars += "'";
						} else {
							literal = true;
						}
						break;
					default:
						chars += format.charAt( iFormat );
				}
			}
		}
		return chars;
	},

	/* Get a setting value, defaulting if necessary. */
	_get: function( inst, name ) {
		return inst.settings[ name ] !== undefined ?
			inst.settings[ name ] : this._defaults[ name ];
	},

	/* Parse existing date and initialise date picker. */
	_setDateFromField: function( inst, noDefault ) {
		if ( inst.input.val() === inst.lastVal ) {
			return;
		}

		var dateFormat = this._get( inst, "dateFormat" ),
			dates = inst.lastVal = inst.input ? inst.input.val() : null,
			defaultDate = this._getDefaultDate( inst ),
			date = defaultDate,
			settings = this._getFormatConfig( inst );

		try {
			date = this.parseDate( dateFormat, dates, settings ) || defaultDate;
		} catch ( event ) {
			dates = ( noDefault ? "" : dates );
		}
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		inst.currentDay = ( dates ? date.getDate() : 0 );
		inst.currentMonth = ( dates ? date.getMonth() : 0 );
		inst.currentYear = ( dates ? date.getFullYear() : 0 );
		this._adjustInstDate( inst );
	},

	/* Retrieve the default date shown on opening. */
	_getDefaultDate: function( inst ) {
		return this._restrictMinMax( inst,
			this._determineDate( inst, this._get( inst, "defaultDate" ), new Date() ) );
	},

	/* A date may be specified as an exact value or a relative one. */
	_determineDate: function( inst, date, defaultDate ) {
		var offsetNumeric = function( offset ) {
				var date = new Date();
				date.setDate( date.getDate() + offset );
				return date;
			},
			offsetString = function( offset ) {
				try {
					return $.datepicker.parseDate( $.datepicker._get( inst, "dateFormat" ),
						offset, $.datepicker._getFormatConfig( inst ) );
				}
				catch ( e ) {

					// Ignore
				}

				var date = ( offset.toLowerCase().match( /^c/ ) ?
					$.datepicker._getDate( inst ) : null ) || new Date(),
					year = date.getFullYear(),
					month = date.getMonth(),
					day = date.getDate(),
					pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
					matches = pattern.exec( offset );

				while ( matches ) {
					switch ( matches[ 2 ] || "d" ) {
						case "d" : case "D" :
							day += parseInt( matches[ 1 ], 10 ); break;
						case "w" : case "W" :
							day += parseInt( matches[ 1 ], 10 ) * 7; break;
						case "m" : case "M" :
							month += parseInt( matches[ 1 ], 10 );
							day = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );
							break;
						case "y": case "Y" :
							year += parseInt( matches[ 1 ], 10 );
							day = Math.min( day, $.datepicker._getDaysInMonth( year, month ) );
							break;
					}
					matches = pattern.exec( offset );
				}
				return new Date( year, month, day );
			},
			newDate = ( date == null || date === "" ? defaultDate : ( typeof date === "string" ? offsetString( date ) :
				( typeof date === "number" ? ( isNaN( date ) ? defaultDate : offsetNumeric( date ) ) : new Date( date.getTime() ) ) ) );

		newDate = ( newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate );
		if ( newDate ) {
			newDate.setHours( 0 );
			newDate.setMinutes( 0 );
			newDate.setSeconds( 0 );
			newDate.setMilliseconds( 0 );
		}
		return this._daylightSavingAdjust( newDate );
	},

	/* Handle switch to/from daylight saving.
	 * Hours may be non-zero on daylight saving cut-over:
	 * > 12 when midnight changeover, but then cannot generate
	 * midnight datetime, so jump to 1AM, otherwise reset.
	 * @param  date  (Date) the date to check
	 * @return  (Date) the corrected date
	 */
	_daylightSavingAdjust: function( date ) {
		if ( !date ) {
			return null;
		}
		date.setHours( date.getHours() > 12 ? date.getHours() + 2 : 0 );
		return date;
	},

	/* Set the date(s) directly. */
	_setDate: function( inst, date, noChange ) {
		var clear = !date,
			origMonth = inst.selectedMonth,
			origYear = inst.selectedYear,
			newDate = this._restrictMinMax( inst, this._determineDate( inst, date, new Date() ) );

		inst.selectedDay = inst.currentDay = newDate.getDate();
		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
		if ( ( origMonth !== inst.selectedMonth || origYear !== inst.selectedYear ) && !noChange ) {
			this._notifyChange( inst );
		}
		this._adjustInstDate( inst );
		if ( inst.input ) {
			inst.input.val( clear ? "" : this._formatDate( inst ) );
		}
	},

	/* Retrieve the date(s) directly. */
	_getDate: function( inst ) {
		var startDate = ( !inst.currentYear || ( inst.input && inst.input.val() === "" ) ? null :
			this._daylightSavingAdjust( new Date(
			inst.currentYear, inst.currentMonth, inst.currentDay ) ) );
			return startDate;
	},

	/* Attach the onxxx handlers.  These are declared statically so
	 * they work with static code transformers like Caja.
	 */
	_attachHandlers: function( inst ) {
		var stepMonths = this._get( inst, "stepMonths" ),
			id = "#" + inst.id.replace( /\\\\/g, "\\" );
		inst.dpDiv.find( "[data-handler]" ).map( function() {
			var handler = {
				prev: function() {
					$.datepicker._adjustDate( id, -stepMonths, "M" );
				},
				next: function() {
					$.datepicker._adjustDate( id, +stepMonths, "M" );
				},
				hide: function() {
					$.datepicker._hideDatepicker();
				},
				today: function() {
					$.datepicker._gotoToday( id );
				},
				selectDay: function() {
					$.datepicker._selectDay( id, +this.getAttribute( "data-month" ), +this.getAttribute( "data-year" ), this );
					return false;
				},
				selectMonth: function() {
					$.datepicker._selectMonthYear( id, this, "M" );
					return false;
				},
				selectYear: function() {
					$.datepicker._selectMonthYear( id, this, "Y" );
					return false;
				}
			};
			$( this ).on( this.getAttribute( "data-event" ), handler[ this.getAttribute( "data-handler" ) ] );
		} );
	},

	/* Generate the HTML for the current state of the date picker. */
	_generateHTML: function( inst ) {
		var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
			controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
			monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
			selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
			cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
			printDate, dRow, tbody, daySettings, otherMonth, unselectable,
			tempDate = new Date(),
			today = this._daylightSavingAdjust(
				new Date( tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate() ) ), // clear time
			isRTL = this._get( inst, "isRTL" ),
			showButtonPanel = this._get( inst, "showButtonPanel" ),
			hideIfNoPrevNext = this._get( inst, "hideIfNoPrevNext" ),
			navigationAsDateFormat = this._get( inst, "navigationAsDateFormat" ),
			numMonths = this._getNumberOfMonths( inst ),
			showCurrentAtPos = this._get( inst, "showCurrentAtPos" ),
			stepMonths = this._get( inst, "stepMonths" ),
			isMultiMonth = ( numMonths[ 0 ] !== 1 || numMonths[ 1 ] !== 1 ),
			currentDate = this._daylightSavingAdjust( ( !inst.currentDay ? new Date( 9999, 9, 9 ) :
				new Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) ),
			minDate = this._getMinMaxDate( inst, "min" ),
			maxDate = this._getMinMaxDate( inst, "max" ),
			drawMonth = inst.drawMonth - showCurrentAtPos,
			drawYear = inst.drawYear;

		if ( drawMonth < 0 ) {
			drawMonth += 12;
			drawYear--;
		}
		if ( maxDate ) {
			maxDraw = this._daylightSavingAdjust( new Date( maxDate.getFullYear(),
				maxDate.getMonth() - ( numMonths[ 0 ] * numMonths[ 1 ] ) + 1, maxDate.getDate() ) );
			maxDraw = ( minDate && maxDraw < minDate ? minDate : maxDraw );
			while ( this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 ) ) > maxDraw ) {
				drawMonth--;
				if ( drawMonth < 0 ) {
					drawMonth = 11;
					drawYear--;
				}
			}
		}
		inst.drawMonth = drawMonth;
		inst.drawYear = drawYear;

		prevText = this._get( inst, "prevText" );
		prevText = ( !navigationAsDateFormat ? prevText : this.formatDate( prevText,
			this._daylightSavingAdjust( new Date( drawYear, drawMonth - stepMonths, 1 ) ),
			this._getFormatConfig( inst ) ) );

		prev = ( this._canAdjustMonth( inst, -1, drawYear, drawMonth ) ?
			"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" +
			" title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w" ) + "'>" + prevText + "</span></a>" :
			( hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w" ) + "'>" + prevText + "</span></a>" ) );

		nextText = this._get( inst, "nextText" );
		nextText = ( !navigationAsDateFormat ? nextText : this.formatDate( nextText,
			this._daylightSavingAdjust( new Date( drawYear, drawMonth + stepMonths, 1 ) ),
			this._getFormatConfig( inst ) ) );

		next = ( this._canAdjustMonth( inst, +1, drawYear, drawMonth ) ?
			"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" +
			" title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e" ) + "'>" + nextText + "</span></a>" :
			( hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e" ) + "'>" + nextText + "</span></a>" ) );

		currentText = this._get( inst, "currentText" );
		gotoDate = ( this._get( inst, "gotoCurrent" ) && inst.currentDay ? currentDate : today );
		currentText = ( !navigationAsDateFormat ? currentText :
			this.formatDate( currentText, gotoDate, this._getFormatConfig( inst ) ) );

		controls = ( !inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
			this._get( inst, "closeText" ) + "</button>" : "" );

		buttonPanel = ( showButtonPanel ) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + ( isRTL ? controls : "" ) +
			( this._isInRange( inst, gotoDate ) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" +
			">" + currentText + "</button>" : "" ) + ( isRTL ? "" : controls ) + "</div>" : "";

		firstDay = parseInt( this._get( inst, "firstDay" ), 10 );
		firstDay = ( isNaN( firstDay ) ? 0 : firstDay );

		showWeek = this._get( inst, "showWeek" );
		dayNames = this._get( inst, "dayNames" );
		dayNamesMin = this._get( inst, "dayNamesMin" );
		monthNames = this._get( inst, "monthNames" );
		monthNamesShort = this._get( inst, "monthNamesShort" );
		beforeShowDay = this._get( inst, "beforeShowDay" );
		showOtherMonths = this._get( inst, "showOtherMonths" );
		selectOtherMonths = this._get( inst, "selectOtherMonths" );
		defaultDate = this._getDefaultDate( inst );
		html = "";

		for ( row = 0; row < numMonths[ 0 ]; row++ ) {
			group = "";
			this.maxRows = 4;
			for ( col = 0; col < numMonths[ 1 ]; col++ ) {
				selectedDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, inst.selectedDay ) );
				cornerClass = " ui-corner-all";
				calender = "";
				if ( isMultiMonth ) {
					calender += "<div class='ui-datepicker-group";
					if ( numMonths[ 1 ] > 1 ) {
						switch ( col ) {
							case 0: calender += " ui-datepicker-group-first";
								cornerClass = " ui-corner-" + ( isRTL ? "right" : "left" ); break;
							case numMonths[ 1 ] - 1: calender += " ui-datepicker-group-last";
								cornerClass = " ui-corner-" + ( isRTL ? "left" : "right" ); break;
							default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;
						}
					}
					calender += "'>";
				}
				calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
					( /all|left/.test( cornerClass ) && row === 0 ? ( isRTL ? next : prev ) : "" ) +
					( /all|right/.test( cornerClass ) && row === 0 ? ( isRTL ? prev : next ) : "" ) +
					this._generateMonthYearHeader( inst, drawMonth, drawYear, minDate, maxDate,
					row > 0 || col > 0, monthNames, monthNamesShort ) + // draw month headers
					"</div><table class='ui-datepicker-calendar'><thead>" +
					"<tr>";
				thead = ( showWeek ? "<th class='ui-datepicker-week-col'>" + this._get( inst, "weekHeader" ) + "</th>" : "" );
				for ( dow = 0; dow < 7; dow++ ) { // days of the week
					day = ( dow + firstDay ) % 7;
					thead += "<th scope='col'" + ( ( dow + firstDay + 6 ) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "" ) + ">" +
						"<span title='" + dayNames[ day ] + "'>" + dayNamesMin[ day ] + "</span></th>";
				}
				calender += thead + "</tr></thead><tbody>";
				daysInMonth = this._getDaysInMonth( drawYear, drawMonth );
				if ( drawYear === inst.selectedYear && drawMonth === inst.selectedMonth ) {
					inst.selectedDay = Math.min( inst.selectedDay, daysInMonth );
				}
				leadDays = ( this._getFirstDayOfMonth( drawYear, drawMonth ) - firstDay + 7 ) % 7;
				curRows = Math.ceil( ( leadDays + daysInMonth ) / 7 ); // calculate the number of rows to generate
				numRows = ( isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows ); //If multiple months, use the higher number of rows (see #7043)
				this.maxRows = numRows;
				printDate = this._daylightSavingAdjust( new Date( drawYear, drawMonth, 1 - leadDays ) );
				for ( dRow = 0; dRow < numRows; dRow++ ) { // create date picker rows
					calender += "<tr>";
					tbody = ( !showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
						this._get( inst, "calculateWeek" )( printDate ) + "</td>" );
					for ( dow = 0; dow < 7; dow++ ) { // create date picker days
						daySettings = ( beforeShowDay ?
							beforeShowDay.apply( ( inst.input ? inst.input[ 0 ] : null ), [ printDate ] ) : [ true, "" ] );
						otherMonth = ( printDate.getMonth() !== drawMonth );
						unselectable = ( otherMonth && !selectOtherMonths ) || !daySettings[ 0 ] ||
							( minDate && printDate < minDate ) || ( maxDate && printDate > maxDate );
						tbody += "<td class='" +
							( ( dow + firstDay + 6 ) % 7 >= 5 ? " ui-datepicker-week-end" : "" ) + // highlight weekends
							( otherMonth ? " ui-datepicker-other-month" : "" ) + // highlight days from other months
							( ( printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent ) || // user pressed key
							( defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime() ) ?

							// or defaultDate is current printedDate and defaultDate is selectedDate
							" " + this._dayOverClass : "" ) + // highlight selected day
							( unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "" ) +  // highlight unselectable days
							( otherMonth && !showOtherMonths ? "" : " " + daySettings[ 1 ] + // highlight custom dates
							( printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "" ) + // highlight selected day
							( printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "" ) ) + "'" + // highlight today (if different)
							( ( !otherMonth || showOtherMonths ) && daySettings[ 2 ] ? " title='" + daySettings[ 2 ].replace( /'/g, "&#39;" ) + "'" : "" ) + // cell title
							( unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'" ) + ">" + // actions
							( otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
							( unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
							( printDate.getTime() === today.getTime() ? " ui-state-highlight" : "" ) +
							( printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "" ) + // highlight selected day
							( otherMonth ? " ui-priority-secondary" : "" ) + // distinguish dates from other months
							"' href='#'>" + printDate.getDate() + "</a>" ) ) + "</td>"; // display selectable date
						printDate.setDate( printDate.getDate() + 1 );
						printDate = this._daylightSavingAdjust( printDate );
					}
					calender += tbody + "</tr>";
				}
				drawMonth++;
				if ( drawMonth > 11 ) {
					drawMonth = 0;
					drawYear++;
				}
				calender += "</tbody></table>" + ( isMultiMonth ? "</div>" +
							( ( numMonths[ 0 ] > 0 && col === numMonths[ 1 ] - 1 ) ? "<div class='ui-datepicker-row-break'></div>" : "" ) : "" );
				group += calender;
			}
			html += group;
		}
		html += buttonPanel;
		inst._keyEvent = false;
		return html;
	},

	/* Generate the month and year header. */
	_generateMonthYearHeader: function( inst, drawMonth, drawYear, minDate, maxDate,
			secondary, monthNames, monthNamesShort ) {

		var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
			changeMonth = this._get( inst, "changeMonth" ),
			changeYear = this._get( inst, "changeYear" ),
			showMonthAfterYear = this._get( inst, "showMonthAfterYear" ),
			html = "<div class='ui-datepicker-title'>",
			monthHtml = "";

		// Month selection
		if ( secondary || !changeMonth ) {
			monthHtml += "<span class='ui-datepicker-month'>" + monthNames[ drawMonth ] + "</span>";
		} else {
			inMinYear = ( minDate && minDate.getFullYear() === drawYear );
			inMaxYear = ( maxDate && maxDate.getFullYear() === drawYear );
			monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
			for ( month = 0; month < 12; month++ ) {
				if ( ( !inMinYear || month >= minDate.getMonth() ) && ( !inMaxYear || month <= maxDate.getMonth() ) ) {
					monthHtml += "<option value='" + month + "'" +
						( month === drawMonth ? " selected='selected'" : "" ) +
						">" + monthNamesShort[ month ] + "</option>";
				}
			}
			monthHtml += "</select>";
		}

		if ( !showMonthAfterYear ) {
			html += monthHtml + ( secondary || !( changeMonth && changeYear ) ? "&#xa0;" : "" );
		}

		// Year selection
		if ( !inst.yearshtml ) {
			inst.yearshtml = "";
			if ( secondary || !changeYear ) {
				html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
			} else {

				// determine range of years to display
				years = this._get( inst, "yearRange" ).split( ":" );
				thisYear = new Date().getFullYear();
				determineYear = function( value ) {
					var year = ( value.match( /c[+\-].*/ ) ? drawYear + parseInt( value.substring( 1 ), 10 ) :
						( value.match( /[+\-].*/ ) ? thisYear + parseInt( value, 10 ) :
						parseInt( value, 10 ) ) );
					return ( isNaN( year ) ? thisYear : year );
				};
				year = determineYear( years[ 0 ] );
				endYear = Math.max( year, determineYear( years[ 1 ] || "" ) );
				year = ( minDate ? Math.max( year, minDate.getFullYear() ) : year );
				endYear = ( maxDate ? Math.min( endYear, maxDate.getFullYear() ) : endYear );
				inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
				for ( ; year <= endYear; year++ ) {
					inst.yearshtml += "<option value='" + year + "'" +
						( year === drawYear ? " selected='selected'" : "" ) +
						">" + year + "</option>";
				}
				inst.yearshtml += "</select>";

				html += inst.yearshtml;
				inst.yearshtml = null;
			}
		}

		html += this._get( inst, "yearSuffix" );
		if ( showMonthAfterYear ) {
			html += ( secondary || !( changeMonth && changeYear ) ? "&#xa0;" : "" ) + monthHtml;
		}
		html += "</div>"; // Close datepicker_header
		return html;
	},

	/* Adjust one of the date sub-fields. */
	_adjustInstDate: function( inst, offset, period ) {
		var year = inst.selectedYear + ( period === "Y" ? offset : 0 ),
			month = inst.selectedMonth + ( period === "M" ? offset : 0 ),
			day = Math.min( inst.selectedDay, this._getDaysInMonth( year, month ) ) + ( period === "D" ? offset : 0 ),
			date = this._restrictMinMax( inst, this._daylightSavingAdjust( new Date( year, month, day ) ) );

		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		if ( period === "M" || period === "Y" ) {
			this._notifyChange( inst );
		}
	},

	/* Ensure a date is within any min/max bounds. */
	_restrictMinMax: function( inst, date ) {
		var minDate = this._getMinMaxDate( inst, "min" ),
			maxDate = this._getMinMaxDate( inst, "max" ),
			newDate = ( minDate && date < minDate ? minDate : date );
		return ( maxDate && newDate > maxDate ? maxDate : newDate );
	},

	/* Notify change of month/year. */
	_notifyChange: function( inst ) {
		var onChange = this._get( inst, "onChangeMonthYear" );
		if ( onChange ) {
			onChange.apply( ( inst.input ? inst.input[ 0 ] : null ),
				[ inst.selectedYear, inst.selectedMonth + 1, inst ] );
		}
	},

	/* Determine the number of months to show. */
	_getNumberOfMonths: function( inst ) {
		var numMonths = this._get( inst, "numberOfMonths" );
		return ( numMonths == null ? [ 1, 1 ] : ( typeof numMonths === "number" ? [ 1, numMonths ] : numMonths ) );
	},

	/* Determine the current maximum date - ensure no time components are set. */
	_getMinMaxDate: function( inst, minMax ) {
		return this._determineDate( inst, this._get( inst, minMax + "Date" ), null );
	},

	/* Find the number of days in a given month. */
	_getDaysInMonth: function( year, month ) {
		return 32 - this._daylightSavingAdjust( new Date( year, month, 32 ) ).getDate();
	},

	/* Find the day of the week of the first of a month. */
	_getFirstDayOfMonth: function( year, month ) {
		return new Date( year, month, 1 ).getDay();
	},

	/* Determines if we should allow a "next/prev" month display change. */
	_canAdjustMonth: function( inst, offset, curYear, curMonth ) {
		var numMonths = this._getNumberOfMonths( inst ),
			date = this._daylightSavingAdjust( new Date( curYear,
			curMonth + ( offset < 0 ? offset : numMonths[ 0 ] * numMonths[ 1 ] ), 1 ) );

		if ( offset < 0 ) {
			date.setDate( this._getDaysInMonth( date.getFullYear(), date.getMonth() ) );
		}
		return this._isInRange( inst, date );
	},

	/* Is the given date in the accepted range? */
	_isInRange: function( inst, date ) {
		var yearSplit, currentYear,
			minDate = this._getMinMaxDate( inst, "min" ),
			maxDate = this._getMinMaxDate( inst, "max" ),
			minYear = null,
			maxYear = null,
			years = this._get( inst, "yearRange" );
			if ( years ) {
				yearSplit = years.split( ":" );
				currentYear = new Date().getFullYear();
				minYear = parseInt( yearSplit[ 0 ], 10 );
				maxYear = parseInt( yearSplit[ 1 ], 10 );
				if ( yearSplit[ 0 ].match( /[+\-].*/ ) ) {
					minYear += currentYear;
				}
				if ( yearSplit[ 1 ].match( /[+\-].*/ ) ) {
					maxYear += currentYear;
				}
			}

		return ( ( !minDate || date.getTime() >= minDate.getTime() ) &&
			( !maxDate || date.getTime() <= maxDate.getTime() ) &&
			( !minYear || date.getFullYear() >= minYear ) &&
			( !maxYear || date.getFullYear() <= maxYear ) );
	},

	/* Provide the configuration settings for formatting/parsing. */
	_getFormatConfig: function( inst ) {
		var shortYearCutoff = this._get( inst, "shortYearCutoff" );
		shortYearCutoff = ( typeof shortYearCutoff !== "string" ? shortYearCutoff :
			new Date().getFullYear() % 100 + parseInt( shortYearCutoff, 10 ) );
		return { shortYearCutoff: shortYearCutoff,
			dayNamesShort: this._get( inst, "dayNamesShort" ), dayNames: this._get( inst, "dayNames" ),
			monthNamesShort: this._get( inst, "monthNamesShort" ), monthNames: this._get( inst, "monthNames" ) };
	},

	/* Format the given date for display. */
	_formatDate: function( inst, day, month, year ) {
		if ( !day ) {
			inst.currentDay = inst.selectedDay;
			inst.currentMonth = inst.selectedMonth;
			inst.currentYear = inst.selectedYear;
		}
		var date = ( day ? ( typeof day === "object" ? day :
			this._daylightSavingAdjust( new Date( year, month, day ) ) ) :
			this._daylightSavingAdjust( new Date( inst.currentYear, inst.currentMonth, inst.currentDay ) ) );
		return this.formatDate( this._get( inst, "dateFormat" ), date, this._getFormatConfig( inst ) );
	}
} );

/*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */
function datepicker_bindHover( dpDiv ) {
	var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
	return dpDiv.on( "mouseout", selector, function() {
			$( this ).removeClass( "ui-state-hover" );
			if ( this.className.indexOf( "ui-datepicker-prev" ) !== -1 ) {
				$( this ).removeClass( "ui-datepicker-prev-hover" );
			}
			if ( this.className.indexOf( "ui-datepicker-next" ) !== -1 ) {
				$( this ).removeClass( "ui-datepicker-next-hover" );
			}
		} )
		.on( "mouseover", selector, datepicker_handleMouseover );
}

function datepicker_handleMouseover() {
	if ( !$.datepicker._isDisabledDatepicker( datepicker_instActive.inline ? datepicker_instActive.dpDiv.parent()[ 0 ] : datepicker_instActive.input[ 0 ] ) ) {
		$( this ).parents( ".ui-datepicker-calendar" ).find( "a" ).removeClass( "ui-state-hover" );
		$( this ).addClass( "ui-state-hover" );
		if ( this.className.indexOf( "ui-datepicker-prev" ) !== -1 ) {
			$( this ).addClass( "ui-datepicker-prev-hover" );
		}
		if ( this.className.indexOf( "ui-datepicker-next" ) !== -1 ) {
			$( this ).addClass( "ui-datepicker-next-hover" );
		}
	}
}

/* jQuery extend now ignores nulls! */
function datepicker_extendRemove( target, props ) {
	$.extend( target, props );
	for ( var name in props ) {
		if ( props[ name ] == null ) {
			target[ name ] = props[ name ];
		}
	}
	return target;
}

/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
					Object - settings for attaching new datepicker functionality
   @return  jQuery object */
$.fn.datepicker = function( options ) {

	/* Verify an empty collection wasn't passed - Fixes #6976 */
	if ( !this.length ) {
		return this;
	}

	/* Initialise the date picker. */
	if ( !$.datepicker.initialized ) {
		$( document ).on( "mousedown", $.datepicker._checkExternalClick );
		$.datepicker.initialized = true;
	}

	/* Append datepicker main container to body if not exist. */
	if ( $( "#" + $.datepicker._mainDivId ).length === 0 ) {
		$( "body" ).append( $.datepicker.dpDiv );
	}

	var otherArgs = Array.prototype.slice.call( arguments, 1 );
	if ( typeof options === "string" && ( options === "isDisabled" || options === "getDate" || options === "widget" ) ) {
		return $.datepicker[ "_" + options + "Datepicker" ].
			apply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );
	}
	if ( options === "option" && arguments.length === 2 && typeof arguments[ 1 ] === "string" ) {
		return $.datepicker[ "_" + options + "Datepicker" ].
			apply( $.datepicker, [ this[ 0 ] ].concat( otherArgs ) );
	}
	return this.each( function() {
		typeof options === "string" ?
			$.datepicker[ "_" + options + "Datepicker" ].
				apply( $.datepicker, [ this ].concat( otherArgs ) ) :
			$.datepicker._attachDatepicker( this, options );
	} );
};

$.datepicker = new Datepicker(); // singleton instance
$.datepicker.initialized = false;
$.datepicker.uuid = new Date().getTime();
$.datepicker.version = "1.12.1";

var widgetsDatepicker = $.datepicker;




}));
/*
 * MultiDatesPicker v1.6.4
 * http://multidatespickr.sourceforge.net/
 * 
 * Copyright 2014, Luca Lauretta
 * Dual licensed under the MIT or GPL version 2 licenses.
 */
(function( $ ){
	$.extend($.ui, { multiDatesPicker: { version: "1.6.4" } });
	
	$.fn.multiDatesPicker = function(method) {
		var mdp_arguments = arguments;
		var ret = this;
		var today_date = new Date();
		var day_zero = new Date(0);
		var mdp_events = {};
		
		function removeDate(date, type) {
			if(!type) type = 'picked';
			date = dateConvert.call(this, date);
			for(var i = 0; i < this.multiDatesPicker.dates[type].length; i++)
				if(!methods.compareDates(this.multiDatesPicker.dates[type][i], date))
					return this.multiDatesPicker.dates[type].splice(i, 1).pop();
		}
		function removeIndex(index, type) {
			if(!type) type = 'picked';
			return this.multiDatesPicker.dates[type].splice(index, 1).pop();
		}
		function addDate(date, type, no_sort) {
			if(!type) type = 'picked';
			date = dateConvert.call(this, date);
			
			// @todo: use jQuery UI datepicker method instead
			date.setHours(0);
			date.setMinutes(0);
			date.setSeconds(0);
			date.setMilliseconds(0);
			
			if (methods.gotDate.call(this, date, type) === false) {
				this.multiDatesPicker.dates[type].push(date);
				if(!no_sort) this.multiDatesPicker.dates[type].sort(methods.compareDates);
			} 
		}
		function sortDates(type) {
			if(!type) type = 'picked';
			this.multiDatesPicker.dates[type].sort(methods.compareDates);
		}
		function dateConvert(date, desired_type, date_format) {
			if(!desired_type) desired_type = 'object';/*
			if(!date_format && (typeof date == 'string')) {
				date_format = $(this).datepicker('option', 'dateFormat');
				if(!date_format) date_format = $.datepicker._defaults.dateFormat;
			}
			*/
			return methods.dateConvert.call(this, date, desired_type, date_format);
		}
		
		var methods = {
			init : function( options ) {
				var $this = $(this);
				this.multiDatesPicker.changed = false;
				
				var mdp_events = {
					beforeShow: function(input, inst) {
						this.multiDatesPicker.changed = false;
						if(this.multiDatesPicker.originalBeforeShow) 
							this.multiDatesPicker.originalBeforeShow.call(this, input, inst);
					},
					onSelect : function(dateText, inst) {
						var $this = $(this);
						this.multiDatesPicker.changed = true;
						
						if (dateText) {
							$this.multiDatesPicker('toggleDate', dateText);
							this.multiDatesPicker.changed = true;
							// @todo: this will be optimized when I'll move methods to the singleton.
						}
						
						if (this.multiDatesPicker.mode == 'normal' && this.multiDatesPicker.pickableRange) {
							if(this.multiDatesPicker.dates.picked.length > 0) {
								var min_date = this.multiDatesPicker.dates.picked[0],
									max_date = new Date(min_date.getTime());
								
								methods.sumDays(max_date, this.multiDatesPicker.pickableRange-1);
									
								// counts the number of disabled dates in the range
								if(this.multiDatesPicker.adjustRangeToDisabled) {
									var c_disabled, 
										disabled = this.multiDatesPicker.dates.disabled.slice(0);
									do {
										c_disabled = 0;
										for(var i = 0; i < disabled.length; i++) {
											if(disabled[i].getTime() <= max_date.getTime()) {
												if((min_date.getTime() <= disabled[i].getTime()) && (disabled[i].getTime() <= max_date.getTime()) ) {
													c_disabled++;
												}
												disabled.splice(i, 1);
												i--;
											}
										}
										max_date.setDate(max_date.getDate() + c_disabled);
									} while(c_disabled != 0);
								}
								
								if(this.multiDatesPicker.maxDate && (max_date > this.multiDatesPicker.maxDate))
									max_date = this.multiDatesPicker.maxDate;
								
								$this
									.datepicker("option", "minDate", min_date)
									.datepicker("option", "maxDate", max_date);
							} else {
								$this
									.datepicker("option", "minDate", this.multiDatesPicker.minDate)
									.datepicker("option", "maxDate", this.multiDatesPicker.maxDate);
							}
						}
						
						if(this.multiDatesPicker.originalOnSelect && dateText)
							this.multiDatesPicker.originalOnSelect.call(this, dateText, inst);
						
					},
					beforeShowDay : function(date) {
						var $this = $(this),
							gotThisDate = $this.multiDatesPicker('gotDate', date) !== false,
							isDisabledCalendar = $this.datepicker('option', 'disabled'),
							isDisabledDate = $this.multiDatesPicker('gotDate', date, 'disabled') !== false,
							areAllSelected = this.multiDatesPicker.maxPicks <= this.multiDatesPicker.dates.picked.length;
						
						var bsdReturn = [true, '', null];
						if(this.multiDatesPicker.originalBeforeShowDay)
							bsdReturn = this.multiDatesPicker.originalBeforeShowDay.call(this, date);
						
						bsdReturn[1] = gotThisDate ? 'ui-state-highlight '+bsdReturn[1] : bsdReturn[1];
						bsdReturn[0] = bsdReturn[0] && !(isDisabledCalendar || isDisabledDate || (areAllSelected && !bsdReturn[1]));
						return bsdReturn;
					}
				};
				
				// value have to be extracted before datepicker is initiated
				if($this.val()) var inputDates = $this.val()
				
				if(options) {
					// value have to be extracted before datepicker is initiated
					//if(options.altField) var inputDates = $(options.altField).val();
					if(options.separator) this.multiDatesPicker.separator = options.separator;
					if(!this.multiDatesPicker.separator) this.multiDatesPicker.separator = ', ';
					
					this.multiDatesPicker.originalBeforeShow = options.beforeShow;
					this.multiDatesPicker.originalOnSelect = options.onSelect;
					this.multiDatesPicker.originalBeforeShowDay = options.beforeShowDay;
					this.multiDatesPicker.originalOnClose = options.onClose;
					
					// datepicker init
					$this.datepicker(options);
					
					this.multiDatesPicker.minDate = $.datepicker._determineDate(this, options.minDate, null);
					this.multiDatesPicker.maxDate = $.datepicker._determineDate(this, options.maxDate, null);
					if(options.addDates) methods.addDates.call(this, options.addDates);
					 
					if(options.addDisabledDates)
						methods.addDates.call(this, options.addDisabledDates, 'disabled');
					
					methods.setMode.call(this, options);
				} else {
					$this.datepicker();
				}
				$this.datepicker('option', mdp_events);
				
				// adds any dates found in the input or alt field
				if(inputDates) $this.multiDatesPicker('value', inputDates);
				
				// generates the new string of added dates
				var inputs_values = $this.multiDatesPicker('value');
				
				// fills the input field back with all the dates in the calendar
				$this.val(inputs_values);
				
				// Fixes the altField filled with defaultDate by default
				var altFieldOption = $this.datepicker('option', 'altField');
				if (altFieldOption) $(altFieldOption).val(inputs_values);
				
				// Updates the calendar view
				$this.datepicker('refresh');
			},
			compareDates : function(date1, date2) {
				date1 = dateConvert.call(this, date1);
				date2 = dateConvert.call(this, date2);
				// return > 0 means date1 is later than date2 
				// return == 0 means date1 is the same day as date2 
				// return < 0 means date1 is earlier than date2 
				var diff = date1.getFullYear() - date2.getFullYear();
				if(!diff) {
					diff = date1.getMonth() - date2.getMonth();
					if(!diff) 
						diff = date1.getDate() - date2.getDate();
				}
				return diff;
			},
			sumDays : function( date, n_days ) {
				var origDateType = typeof date;
				obj_date = dateConvert.call(this, date);
				obj_date.setDate(obj_date.getDate() + n_days);
				return dateConvert.call(this, obj_date, origDateType);
			},
			dateConvert : function( date, desired_format, dateFormat ) {
				var from_format = typeof date;
				var $this = $(this);
				
				if(from_format == desired_format) {
					if(from_format == 'object') {
						try {
							date.getTime();
						} catch (e) {
							$.error('Received date is in a non supported format!');
							return false;
						}
					}
					return date;
				}
				
				if(typeof date == 'undefined') date = new Date(0);
				
				if(desired_format != 'string' && desired_format != 'object' && desired_format != 'number')
					$.error('Date format "'+ desired_format +'" not supported!');
				
				if(!dateFormat) {
					// thanks to bibendus83 -> http://sourceforge.net/tracker/index.php?func=detail&aid=3213174&group_id=358205&atid=1495382
					var dp_dateFormat = $this.datepicker('option', 'dateFormat');
					if (dp_dateFormat) {
						dateFormat = dp_dateFormat;
					} else {
						dateFormat = $.datepicker._defaults.dateFormat;
					}
				}
				
				// converts to object as a neutral format
				switch(from_format) {
					case 'object': break;
					case 'string': date = $.datepicker.parseDate(dateFormat, date); break;
					case 'number': date = new Date(date); break;
					default: $.error('Conversion from "'+ desired_format +'" format not allowed on jQuery.multiDatesPicker');
				}
				// then converts to the desired format
				switch(desired_format) {
					case 'object': return date;
					case 'string': return $.datepicker.formatDate(dateFormat, date);
					case 'number': return date.getTime();
					default: $.error('Conversion to "'+ desired_format +'" format not allowed on jQuery.multiDatesPicker');
				}
				return false;
			},
			gotDate : function( date, type ) {
				if(!type) type = 'picked';
				for(var i = 0; i < this.multiDatesPicker.dates[type].length; i++) {
					if(methods.compareDates.call(this, this.multiDatesPicker.dates[type][i], date) === 0) {
						return i;
					}
				}
				return false;
			},
			value : function( value ) {
				if(value && typeof value == 'string') {
					methods.addDates.call(this, value.split(this.multiDatesPicker.separator));
				} else {
					var dates = methods.getDates.call(this, 'string');
					return dates.length
						? dates.join(this.multiDatesPicker.separator)
						: "";
				}
			},
			getDates : function( format, type ) {
				if(!format) format = 'string';
				if(!type) type = 'picked';
				switch (format) {
					case 'object':
						return this.multiDatesPicker.dates[type];
					case 'string':
					case 'number':
						var o_dates = new Array();
						for(var i in this.multiDatesPicker.dates[type])
							o_dates.push(
								dateConvert.call(
									this, 
									this.multiDatesPicker.dates[type][i], 
									format
								)
							);
						return o_dates;
					
					default: $.error('Format "'+format+'" not supported!');
				}
			},
			addDates : function( dates, type ) {
				if(dates.length > 0) {
					if(!type) type = 'picked';
					switch(typeof dates) {
						case 'object':
						case 'array':
							if(dates.length) {
								for(var i = 0; i < dates.length; i++)
									addDate.call(this, dates[i], type, true);
								sortDates.call(this, type);
								break;
							} // else does the same as 'string'
						case 'string':
						case 'number':
							addDate.call(this, dates, type);
							break;
						default: 
							$.error('Date format "'+ typeof dates +'" not allowed on jQuery.multiDatesPicker');
					}
				} else {
					$.error('Empty array of dates received.');
				}
			},
			removeDates : function( dates, type ) {
				if(!type) type = 'picked';
				var removed = [];
				if (Object.prototype.toString.call(dates) === '[object Array]') {
					for(var i in dates.sort(function(a,b){return b-a})) {
						removed.push(removeDate.call(this, dates[i], type));
					}
				} else {
					removed.push(removeDate.call(this, dates, type));
				}
				return removed;
			},
			removeIndexes : function( indexes, type ) {
				if(!type) type = 'picked';
				var removed = [];
				if (Object.prototype.toString.call(indexes) === '[object Array]') {
					for(var i in indexes.sort(function(a,b){return b-a})) {
						removed.push(removeIndex.call(this, indexes[i], type));
					}
				} else {
					removed.push(removeIndex.call(this, indexes, type));
				}
				return removed;
			},
			resetDates : function ( type ) {
				if(!type) type = 'picked';
				this.multiDatesPicker.dates[type] = [];
			},
			toggleDate : function( date, type ) {
				if(!type) type = 'picked';
				
				switch(this.multiDatesPicker.mode) {
					case 'daysRange':
						this.multiDatesPicker.dates[type] = []; // deletes all picked/disabled dates
						var end = this.multiDatesPicker.autoselectRange[1];
						var begin = this.multiDatesPicker.autoselectRange[0];
						if(end < begin) { // switch
							end = this.multiDatesPicker.autoselectRange[0];
							begin = this.multiDatesPicker.autoselectRange[1];
						}
						for(var i = begin; i < end; i++) 
							methods.addDates.call(this, methods.sumDays.call(this,date, i), type);
						break;
					default:
						if(methods.gotDate.call(this, date) === false) // adds dates
							methods.addDates.call(this, date, type);
						else // removes dates
							methods.removeDates.call(this, date, type);
						break;
				}
			}, 
			setMode : function( options ) {
				var $this = $(this);
				if(options.mode) this.multiDatesPicker.mode = options.mode;
				
				switch(this.multiDatesPicker.mode) {
					case 'normal':
						for(option in options)
							switch(option) {
								case 'maxPicks':
								case 'minPicks':
								case 'pickableRange':
								case 'adjustRangeToDisabled':
									this.multiDatesPicker[option] = options[option];
									break;
								//default: $.error('Option ' + option + ' ignored for mode "'.options.mode.'".');
							}
					break;
					case 'daysRange':
					case 'weeksRange':
						var mandatory = 1;
						for(option in options)
							switch(option) {
								case 'autoselectRange':
									mandatory--;
								case 'pickableRange':
								case 'adjustRangeToDisabled':
									this.multiDatesPicker[option] = options[option];
									break;
								//default: $.error('Option ' + option + ' does not exist for setMode on jQuery.multiDatesPicker');
							}
						if(mandatory > 0) $.error('Some mandatory options not specified!');
					break;
				}
				
				if(mdp_events.onSelect)
					mdp_events.onSelect();
			},
			destroy: function(){
				this.multiDatesPicker = null;
				$(this).datepicker('destroy');
			}
		};
		
		this.each(function() {
			var $this = $(this);
			if (!this.multiDatesPicker) {
				this.multiDatesPicker = {
					dates: {
						picked: [],
						disabled: []
					},
					mode: 'normal',
					adjustRangeToDisabled: true
				};
			}
			
			if(methods[method]) {
				var exec_result = methods[method].apply(this, Array.prototype.slice.call(mdp_arguments, 1));
				switch(method) {
					case 'removeDates':
					case 'removeIndexes':
					case 'resetDates':
					case 'toggleDate':
					case 'addDates':
						var altField = $this.datepicker('option', 'altField');
						// @todo: should use altFormat for altField
						var dates_string = methods.value.call(this);
						if (altField !== undefined && altField != "") {
							$(altField).val(dates_string);
						}
						$this.val(dates_string);
						
						$.datepicker._refreshDatepicker(this);
				}
				switch(method) {
					case 'removeDates':
					case 'getDates':
					case 'gotDate':
					case 'sumDays':
					case 'compareDates':
					case 'dateConvert':
					case 'value':
						ret = exec_result;
				}
				return exec_result;
			} else if( typeof method === 'object' || ! method ) {
				return methods.init.apply(this, mdp_arguments);
			} else {
				$.error('Method ' +  method + ' does not exist on jQuery.multiDatesPicker');
			}
			return false;
		}); 
		
		return ret;
	};

	var PROP_NAME = 'multiDatesPicker';
	var dpuuid = new Date().getTime();
	var instActive;

	$.multiDatesPicker = {version: false};
	//$.multiDatesPicker = new MultiDatesPicker(); // singleton instance
	$.multiDatesPicker.initialized = false;
	$.multiDatesPicker.uuid = new Date().getTime();
	$.multiDatesPicker.version = $.ui.multiDatesPicker.version;
	
	// allows MDP not to hide everytime a date is picked
	$.multiDatesPicker._hideDatepicker = $.datepicker._hideDatepicker;
	$.datepicker._hideDatepicker = function(){
		var target = this._curInst.input[0];
		var mdp = target.multiDatesPicker;
		if(!mdp || (this._curInst.inline === false && !mdp.changed)) {
			return $.multiDatesPicker._hideDatepicker.apply(this, arguments);
		} else {
			mdp.changed = false;
			$.datepicker._refreshDatepicker(target);
			return;
		}
	};

	// Workaround for #4055
	// Add another global to avoid noConflict issues with inline event handlers
	window['DP_jQuery_' + dpuuid] = $;
})( jQuery );
/** CARDS **/
// Functions related to the Tinder like cards

// VARS
var stack,
	cards = [],
	cardList = [],
	tresholdThrowCard = 140,
	category = ['all'],
	place = ['all'],
	date = ['all'],
	page = 1,
	allEvents = false,
	homeEventIds = [],
	currentView = 'home';

// LOGIC
$(document).ready(function() {

	generateCards();
	throwCardsWithButtonsManagement();
	cardsAfterThrowManagement();
	loadInitialCards();
	toChangeView();
});

function loadInitialCards() {

	loadCards(category, place, date, page);
}

function loadCards(category, place, date, page) {

	var url = '/api/getcards';
	var data = {};

	data.category = category;
	data.place = place;
	data.date = date;
	data.page = page;

	$.get(url, data, function(response) {

		// If all events have been loaded, we won't load more
		if (response.html === '') {
			allEvents = true;
		}

		// Save the cards to JS
		cardList = cardList.concat(response.cards);

		// Append the cards to the HTML
		$(".cards").append(response.html);
		activateCards();

	});
}

function activateCards() {

	$(".card").not('.in-stack').each(function() {
		$(this).addClass('in-stack').addClass('in-deck');
		var card = stack.createCard($(this).get(0));
		cards.push(card);

		// Bind event card
		$(".card.show-popup").off('click').on('click', function() {

			var $cardSelector = $(this);

			// If event card
			prepareSingleEventPopup($cardSelector);
			showPopup($('#single-event-popup'));
			gaCreateEvent(gaGetParamsCard($cardSelector, 'See Detail'));
		});

		// Bind not event card
		$(".card").not('.show-popup').off('click').on('click', function(e) {

			var $cardSelector = $(this);
			var $elementWhoTriggered = $( e.target );
			if (!$cardSelector.hasClass('clicked') && !$elementWhoTriggered.is('a') ) {
				$cardSelector.addClass('clicked');
				setTimeout(function() { $cardSelector.removeClass('clicked'); }, 1000);
			}
			var $link = $cardSelector.find('a');
			$link.off().on('click', function() {
				gaCreateEvent(gaGetParamsCard($cardSelector, 'Open Link'));
			});
		});
	});

	deactivateLoading();

}

function prepareSingleEventPopup($cardSelector) {

	var $singleEvent = $(".single-event");
	var eventId = $cardSelector.data('event');

	// Get the event from the JS
	var cardToShow = false;
	for (var i = 0; i < cardList.length; i++) {
		if (cardList[i].id == eventId) {
			cardToShow = cardList[i];
			break;
		}
	}

	$singleEvent.find('.title').html(cardToShow.title); // Title
	$singleEvent.find('.image').attr('style', 'background-image:url(' + cardToShow.image + ')'); // Image
	$singleEvent.find('.description').html(cardToShow.description); // Description

	var sourceHtml = '<p><a target="_blank" href="' + cardToShow.url + '">Enlace a ' + cardToShow.source + '</a></p>';
	$singleEvent.find('.info').html(cardToShow.info + sourceHtml); // Info

}


// Functions
function generateCards() {

	// We're using the Swing JS plugin

	// Custom configuration
	var config = {
		throwOutConfidence: function(xOffset) {
			if (Math.abs(xOffset) > tresholdThrowCard ) {
				return 1;
			} else {
				return 0;
			}
		},
		minThrowOutDistance: 700,
		maxThrowOutDistance: 800
	};

	stack = gajus.Swing.Stack(config);

	[].forEach.call(document.querySelectorAll('.cards li'), function (targetElement) {
		var card = stack.createCard(targetElement);
		cards.push(card);

		$(targetElement).addClass('in-stack').addClass('in-deck');

	});

}

// THROW CARDS
function throwCardsWithButtonsManagement() {

	// FAV / LIKE
	var $fav = $(".favtrashbuttons .fav");
	$fav.on('click', function() {
		var randomPosition = randomIntFromInterval(-100, 100);
		cards[0].throwOut(1, randomPosition);
	});

	// TRASH / DISLIKE
	var $trash = $(".favtrashbuttons .trash");
	$trash.on('click', function() {
		var randomPosition = randomIntFromInterval(-100, 100);
		cards[0].throwOut(-1, randomPosition);
	});
}

function cardsAfterThrowManagement() {

	var $viewport = $("#viewport");

	// Card thrown out
	$viewport.on('out', function (e, target, direction) {
		$(target).removeClass('in-deck');

		// We remove the card from the cards list
		cards.shift();

		// If number of in-deck < numEventsPage, we load new page
		var $cardsInDeck = $('.cards li.in-deck');
		var numCardsInDeck = $cardsInDeck.length;

		// We add the active class to the card that is in front
		var $activeCard = $cardsInDeck.last();
		$cardsInDeck.removeClass('active').last().addClass('active');

		// We create a Google Analytics "see" event
		gaCreateEvent(gaGetParamsCard($activeCard, 'See Card'));

		// We load new page if in home, and not all events have been rendered
		if (numCardsInDeck < 4 && !allEvents && currentView == 'home') {
			page++;
			loadCards(category, place, date, page);
		}
	});

}

function getCategoryCard($card) {

	var classesCard = $card.attr('class');

	// Get the card category from its body class (event-card, ego-card...)
	var classCardAux = classesCard.split('-card');
	classCardAux = classCardAux[0].split(' ');
	classCardAux = classCardAux[classCardAux.length - 1];

	classCardAux = capitalizeFirstLetter(classCardAux);

	return classCardAux;
}

// LIKE / DISLIKE / BACK HOME
function toChangeView() {

	var $toChangeView = $('.to-change-view');
	$toChangeView.on('click', function() {

		var $cards = $('.cards');
		var $viewport = $('#viewport');
		var $iconSettings = $('.icon-settings');

		var view = $(this).data('view'); // What view are we going to?
		if (view == currentView) return false; // We don't do anything if the view is already loaded
		currentView = $(this).data('view'); // This variable will be used for loading paginated cards (if we're in home)
		$viewport.removeClass().addClass(view); // We add the class to viewport, too
		if (homeEventIds.length === 0) {
			homeEventIds = getHomeCardEventIds(); // We save the current HOME status (if not already saved)
		}
		$cards.html(''); // We clean the card list

		// If we return back to home, we load the previous set of cards from home
		if (view == 'home') {
			$iconSettings.fadeIn();
			loadCardsByEventIds(homeEventIds, callbackLoadCardsByEventIds);
			homeEventIds = [];
		} else {
			$iconSettings.fadeOut();
			var likeDislike = ($(this).data('view') == 'like') ? 1 : -1;
			loadCardsLikeDislike(likeDislike);
		}

	});

}

function loadCardsByEventIds(eventIds, callback) {

	activateLoading();

	var url = '/api/getcardsbyids';
	var data = {};
	data.eventIds = eventIds;

	$.get(url, data, callback);

}

function callbackLoadCardsByEventIds(response) {

	// Save the cards to JS
	cardList = cardList.concat(response.cards);

	// Append the cards to the HTML
	$(".cards").append(response.html);
	activateCards();

}

function loadCardsLikeDislike(likeDislike) {

	activateLoading();

	var url = '/api/getcardsuser';
	var data = {};

	data.user_id = Cookies.get('userId');
	data.like_dislike = likeDislike;

	$.get(url, data, function(response) {

		// Append the cards to the HTML
		$(".cards").append(response.html);
		cards = [];
		activateCards();

	});

}

function getHomeCardEventIds() {

	var eventIds = [];
	var $cardItems = $('.card');
	$cardItems.each(function() {
		if ($(this).hasClass('in-deck') && typeof $(this).data('event') != "undefined") {
			eventIds.push($(this).data('event'));
		}
	});

	return eventIds;
}

function activateLoading() {

	var $loading = $('.loading');
	var $noCards = $('.no-cards');

	$loading.show();
	$noCards.hide(); // We hide this for some issues with z-index

}

function deactivateLoading() {

	var $loading = $('.loading');
	var $noCards = $('.no-cards');

	$loading.hide();
	$noCards.show();
}

function randomIntFromInterval(min, max) {
	return Math.floor(Math.random()*(max-min+1)+min);
}
/** GOOGLE ANALYTICS **/
// Functions related to Google Analytics

function gaGetParamsCard($cardSelector, action) {

	params = {};
	params.category = getCategoryCard($cardSelector);
	params.action = action;
	params.label = $cardSelector.find('.title').text();

	return params;
}

// Simple interface for GA create event
function gaCreateEvent(params) {
	ga('send', 'event', params.category, params.action, params.label);
}
/** CARDS **/
function capitalizeFirstLetter(string) {
	return string.charAt(0).toUpperCase() + string.slice(1);
}

/** SERVICE WORKER **/
// Needed for PWA
if ('serviceWorker' in navigator) {

	// register service worker
	navigator.serviceWorker.register('/service-worker.js');

}
/** CARDS **/
// Functions related to the Tinder like cards

// VARS
var $popupClose = $('.popup .popup-close'),
	$viewport = $('#viewport');

// LOGIC
$(document).ready(function() {

	preparePopupOnLoad();
	popupCloseManagement();
});

function preparePopupOnLoad() {

	var viewportOffset = $viewport.offset();
	if (viewportOffset !== undefined) {
		$popup.width($viewport.width()).css('left', viewportOffset.left).css('top', viewportOffset.top);
	}
}

function showPopup($popup) {

	$popup.css('visibility', 'visible').addClass('active');
	$popup.find('.popup-container').scrollTop(0);
	return false;
}

function popupCloseManagement() {

	$popupClose.on('click', function() {
		closePopup();
	});
}

function closePopup() {

	$popup.removeClass('active');
	setTimeout(function() {
		$popup.css('visibility', 'hidden');
	}, 300);
	return false;

}

/** CARDS **/
// Functions related to the Tinder like cards

// VARS
var $toSettings = $('.to-settings'),
	$popup = $('.popup');

// LOGIC
$(function () {

	toShowSettings();
	toCloseSettings();
	settingsManagement();
	dateManagement();
});

function toShowSettings() {

	// Show settings popup
	$toSettings.on('click', function () {

		showPopup($("#settings-popup"));
		return false;
	});

}

function dateManagement() {

	$.datepicker.regional['es'] = {
		prevText: '<',
		nextText: '>',
		monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
			'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
		monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
			'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dec'],
		dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
		dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],
		dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sá'],
		dateFormat: 'yy-mm-dd', firstDay: 1
	};

	$.datepicker.regional['eu'] = {
		prevText: '<',
		nextText: '>',
		monthNames: ['Urtarrila', 'Otsaila', 'Martxoa', 'Apirila', 'Maiatza', 'Ekaina',
			'Uztaila', 'Abuztua', 'Iraila', 'Urria', 'Azaroa', 'Abendua'],
		monthNamesShort: ['Urt', 'Ots', 'Mar', 'Api', 'Mai', 'Eka',
			'Uzt', 'Abu', 'Ira', 'Urr', 'Aza', 'Abe'],
		dayNames: ['Igandea', 'Astelehena', 'Asteartea', 'Asteazkena', 'Osteguna', 'Ostirala', 'Larunbata'],
		dayNamesShort: ['Iga', 'Leh', 'Art', 'Azk', 'Oste', 'Osti', 'Lar'],
		dayNamesMin: ['Ig', 'As', 'As', 'As', 'Os', 'Os', 'La'],
		dateFormat: 'yy-mm-dd', firstDay: 1
	};

	$.datepicker.setDefaults($.datepicker.regional[language]);

	var $dateInput = $('#date-selector');
	$dateInput.multiDatesPicker({
		inline: true,
		minDate: 0,
		altField: '#data-date'
	});
}

function settingsManagement() {

	var $dataCategory = $('.data-category'),
		$dataPlace = $('.data-place'),
		$dataDate = $('#data-date'); // Special, date picker

	// Load saved settings from localStorage when the page loads
	loadSavedSettings();

	// Settings
	var $setting = $('.settings .filter');
	$setting.on('click', function () {
		if ($(this).hasClass('active')) {
			$(this).removeClass('active');
		} else {
			$(this).addClass('active');
		}
	});

	// Select / Deselect all
	var $selectAll = $('.settings .select-all');
	var $deselectAll = $('.settings .deselect-all');

	$selectAll.on('click', function () {
		$(this).closest('.section').find('.filter').addClass('active');
	});

	$deselectAll.on('click', function () {
		$(this).closest('.section').find('.active').removeClass('active');
	});

	// Save settings
	var $saveSettings = $('#settings-popup .save-settings');
	var $settingsError = $('#settings-popup .settings-error');
	$saveSettings.on('click', function () {

		activateLoading();

		// Remove all current cards
		$(".cards").html('');

		// Category
		category = [];
		// If all categories are selected we'll just use 'all'
		if ($dataCategory.find('.active').length == $dataCategory.find('.filter').length) {
			category.push('all');
		} else {
			$dataCategory.find('.active').each(function () {
				category.push($(this).data('value'));
			});
		}

		// Place
		place = [];
		// If all categories are selected we'll just use 'all'
		if ($dataPlace.find('.active').length == $dataPlace.find('.filter').length) {
			place.push('all');
		} else {
			$dataPlace.find('.active').each(function () {
				place.push($(this).data('value'));
			});
		}

		// Date
		date = [];
		var dateVal = $dataDate.val();
		if (!dateVal) {
			date.push('all');
		} else {
			date = dateVal.split(',');
		}

		// We validate
		if (category.length === 0 || place.length === 0) {
			$saveSettings.fadeOut(300, function () {
				$settingsError.fadeIn(300, function () {
					setTimeout(function () {
						$settingsError.fadeOut(300, function () {
							$saveSettings.fadeIn(300);
						});
					}, 1300);
				});
			});
			return false;
		}

		// Save settings to localStorage
		saveSettingsToLocalStorage(category, place, date);

		page = 1;
		loadCards(category, place, date, page);
		closePopup();
	});

	// Function to save settings to localStorage
	function saveSettingsToLocalStorage(category, place, date) {
		var settings = {
			category: category,
			place: place,
			date: date
		};
		localStorage.setItem('eventSettings', JSON.stringify(settings));
	}

	// Function to load saved settings from localStorage
	function loadSavedSettings() {
		var savedSettings = localStorage.getItem('eventSettings');

		if (!savedSettings) {
			// If no saved settings, all filters are active by default (as in the original code)
			return;
		}

		try {
			var settings = JSON.parse(savedSettings);

			// Apply category settings
			if (settings.category && settings.category.length > 0) {
				// First deselect all
				$dataCategory.find('.filter').removeClass('active');

				// If 'all' is selected, select all categories
				if (settings.category.includes('all')) {
					$dataCategory.find('.filter').addClass('active');
				} else {
					// Otherwise, select only the saved categories
					settings.category.forEach(function (categoryId) {
						$dataCategory.find('.filter[data-value="' + categoryId + '"]').addClass('active');
					});
				}
			}

			// Apply place settings
			if (settings.place && settings.place.length > 0) {
				// First deselect all
				$dataPlace.find('.filter').removeClass('active');

				// If 'all' is selected, select all places
				if (settings.place.includes('all')) {
					$dataPlace.find('.filter').addClass('active');
				} else {
					// Otherwise, select only the saved places
					settings.place.forEach(function (placeName) {
						$dataPlace.find('.filter[data-value="' + placeName + '"]').addClass('active');
					});
				}
			}

			// Apply date settings
			if (settings.date && settings.date.length > 0 && !settings.date.includes('all')) {
				$dataDate.val(settings.date.join(','));
				// Note: You might need additional code to update the date picker UI
				// depending on how your date picker works
			}

		} catch (e) {
			console.error('Error loading saved settings:', e);
			// If there's an error parsing the saved settings, continue with default settings
		}
	}
}

function toCloseSettings() {

	var $closeSettings = $('.close-settings');
	$closeSettings.on('click', function () {
		closePopup();
	});
}

/** CARDS **/
// Functions related to the user

// VARS
var userId;

var $toUserSettings = $('.to-user-settings');

// LOGIC
$(document).ready(function() {

	// User ID and ratings
	userInitialManagement();
	userRatingsManagement();

	// User settings
	toShowUserSettings();
	toCloseUserSettings();
	settingsUserManagement();
});

// Initial Management (User ID)
function userInitialManagement() {

	// When the user is set, we get the ratings
	$(document).on('userSet', function() {

		// USER RATINGS
		var url = '/api/getratings';
		var data = {};
		data.user_id = Cookies.get('userId');
		console.log(data);
		$.get(url, data, function(response) {

			if (response.success) {
				Cookies.set('userRatings', response.ratings);
				updateNumberLikesDislikes();
			}

		});
	});

	// USER ID
	userId = Cookies.get('userId');
	if (!userId) {
		// We generate the user ID in the backend and save it to a cookie
		var url = '/api/createuser';
		var data = {}; // No data
		$.post(url, data, function(response) {

			if (response.success) {
				userId = response.userId;
				var inTenYears = 365 * 10;
				Cookies.set('userId', userId, { expires: inTenYears });

				// We throw an event so the system knows that the user is already set
				$(document).trigger('userSet');
			}

		});
	} else {
		$(document).trigger('userSet');
	}

}

// USER RATINGS: LIKE / DISLIKE
function userRatingsManagement() {

	var $viewport = jQuery('#viewport');
	$viewport.on('out', function (e, target, direction) {

		var data = {};
		data.rating = direction;
		data.userId = userId;
		data.eventId = jQuery(target).data('event');

		// If the card is an event
		if (data.eventId) {

			// We save the like / dislike in DB
			var url = '/api/rate';
			$.post(url, data, function(response) {
				//console.log(response);
			});

			// We save the like / dislike in cookies
			addRatingToCookies(data.eventId, direction);
		}

	});

}

function addRatingToCookies(eventId, rating) {

	var userRatings = getUserRatingsFromCookies();
	var alreadyRated = false;

	// We loop over the user ratings
	for (var i = 0; i < userRatings.length; i++) {
		if (userRatings[i].eventId == eventId) {
			userRatings[i].rating = rating;
			alreadyRated = true;
		}
	}

	if (!alreadyRated) {
		var ratingObject = {};
		ratingObject.eventId = eventId;
		ratingObject.rating = rating;

		userRatings.push(ratingObject);
	}

	// We set back the user ratings
	Cookies.set('userRatings', userRatings);
	updateNumberLikesDislikes();

	// We add animation
	var $toBeAnimated = (rating == 1) ? $('.like') : $('.dislike');
	$toBeAnimated.addClass('animate');
	setTimeout(function() {
		$toBeAnimated.removeClass('animate'); // We remove the animate class, so the effect works the next time
	}, 1100);
}

function updateNumberLikesDislikes() {

	var userRatings = getUserRatingsFromCookies();
	var likes = 0;
	var dislikes = 0;
	userRatings.forEach(function(ratingObject) {
		if (ratingObject.rating == 1) {
			likes++;
		} else {
			dislikes++;
		}
	});

	// Now we update the numbers of the HTML
	var $dislikesNum = $('.dislike .num');
	var $likesNum = $('.like .num');

	$dislikesNum.html(dislikes);
	$likesNum.html(likes);

}

function getUserRatingsFromCookies() {

	var userRatingsJson = Cookies.get('userRatings');
	var userRatings = JSON.parse(userRatingsJson);
	return userRatings;
}

/** USER SETTINGS **/
function toShowUserSettings() {

	// Show settings popup
	$toUserSettings.on('click', function() {

		showPopup($("#user-settings-popup"));
		return false;
	});

}

function settingsUserManagement() {

	// Change language
	var $selectLanguage = $('.select-language');
	$selectLanguage.on('click', function() {
		$selectLanguage.removeClass('active');
		$(this).addClass('active');
	});

	// Save settings
	var $saveSettings = $('#user-settings-popup .save-settings');
	$saveSettings.on('click', function() {

		// Save language
		var $selectLanguageActive = $('.select-language.active');
		var languageSelected = $selectLanguageActive.attr('data-language');

		// We set the cookie and reload the page
		Cookies.set('language', languageSelected);
		window.location.reload(true);

	});

}

function toCloseUserSettings() {

	var $closeSettings = $('.close-settings');
	$closeSettings.on('click', function() {
		closePopup();
	});
}